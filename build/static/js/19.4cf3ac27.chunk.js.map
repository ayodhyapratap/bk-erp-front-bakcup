{"version":3,"sources":["app/components/webAdmin/videos/AddVideo.js","app/components/webAdmin/videos/VideosList.js","app/components/webAdmin/blog/AddPost.js","app/components/webAdmin/blog/BlogList.js","app/components/webAdmin/contacts/AddContacts.js","app/components/webAdmin/contacts/ContactsList.js","app/components/webAdmin/disease/AddDisease.js","app/components/webAdmin/disease/DiseaseList.js","app/components/webAdmin/events/AddEvent.js","app/components/webAdmin/events/EventsList.js","app/components/webAdmin/seo/AddSEO.js","app/components/webAdmin/seo/SEOList.js","app/components/webAdmin/sliderImages/AddSliderImage.js","app/components/webAdmin/sliderImages/SliderImageList.js","app/components/webAdmin/facilities/AddFacility.js","app/components/webAdmin/facilities/FacilityList.js","app/components/webAdmin/landingPageVideos/AddLandingPageVideo.js","app/components/webAdmin/landingPageVideos/LandingPageVideoList.js","app/components/webAdmin/landingPageContent/AddLandingPageContent.js","app/components/webAdmin/landingPageContent/LandingPageContentList.js","app/components/webAdmin/WebAdminSider.js","app/components/webAdmin/manageProduct/AddManageProduct.js","app/components/webAdmin/manageProduct/ManageProductList.js","app/components/webAdmin/manageTherapy/AddManageTherapy.js","app/components/webAdmin/manageTherapy/ManageTherapyList.js","app/components/webAdmin/WebAdminHome.js","app/components/common/InfiniteFeedLoaderButton.js"],"names":["AddVideo","props","state","editBlogData","this","match","params","id","loadData","redirectVar","redirect","setState","that","getAPI","interpolate","SINGLE_VIDEO","data","editformProp","fields","label","key","initialValue","name","type","INPUT_FIELD","rank","NUMBER_FIELD","required","min","link","successFn","displayMessage","SUCCESS_MSG_TYPE","errorFn","action","method","TestFormLayout","create","DynamicFieldsForm","formProp","console","log","BLOG_VIDEOS","defaultValues","value","exact","path","render","title","changeRedirect","to","React","Component","VideosList","page","prevState","current","videos","results","next","loading","apiParams","bind","deleteObject","record","reqData","patchAPI","opts","height","width","playerVars","_onReady","event","route","extra","dataSource","itemLayout","renderItem","item","Item","actions","onConfirm","okText","cancelText","YouTube","videoId","onReady","Meta","avatar","style","backgroundColor","InfiniteFeedLoaderButton","loaderFunction","hidden","AddPost","SINGLE_POST","domain","slug","featured_image","SINGLE_IMAGE_UPLOAD_FIELD","posted_on","moment","DATE_PICKER","meta_description","keywords","TEXT_FIELD","content","QUILL_TEXT_FIELD","history","replace","BLOG_POST","DiseaseList","post","columns","dataIndex","export","text","format","pagination","AddContacts","SINGLE_CONTACT","contact_rank","phone_no","email","address","minRows","BLOG_CONTACTUS","ContactsList","contacts","AddDisease","SINGLE_DISEASE","disease_type","SELECT_FIELD","options","DISEASE_TYPES","disease_name","main_image","side_image","MULTI_IMAGE_UPLOAD_FIELD","BLOG_DISEASE","loadDiseases","disease","AddEvent","SINGLE_EVENTS","event_date","event_image","BLOG_EVENTS","events","AddSEO","SINGLE_PAGE_SEO","disabled","BLOG_PAGE_SEO","SEOList","pageSEO","AddSliderImage","SINGLE_SLIDER","silder_image","BLOG_SLIDER","SliderImageList","slider","src","makeFileURL","alt","maxWidth","description","AddFacility","SINGLE_FACILITY","BLOG_FACILITY","FacilityList","facility","AddLandingPageVideo","SINGLE_LANDING_PAGE_VIDEO","LANDING_PAGE_VIDEO","LandingPageVideoList","AddLandingPageContent","SINGLE_LANDING_PAGE_CONTENT","image","LANDING_PAGE_CONTENT","LandingPageContentList","pageContent","dangerouslySetInnerHTML","__html","Sider","WebAdminSider","trigger","collapsible","overflow","minHeight","background","mode","defaultSelectedKeys","ItemGroup","margin","className","AddManageProduct","editProductData","MANAGE_SINGLE_PRODUCT","price","MANAGE_PRODUCT","ManageProductList","productData","AddManageTherapy","editTherapyData","MANAGE_SINGLE_THERAPY","MANAGE_THERAPY","ManageTherapyList","prevSate","therapyData","Content","WebAdminHome","component","Error404","startLoading","startMakingExtraLabels","extraLoadingLabel","length","setTimeout","spinning","textAlign","onClick"],"mappings":"kbAgBqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,iFAQXC,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,uCAMb,IAAIC,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,iCAKf,IAAIG,EAAOR,KASXS,YAAOC,YAAYC,KAAc,CAACX,KAAKH,MAAMI,MAAMC,OAAOC,MAR1C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BASR,IA8BFC,EA9BC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,KACP,CACCL,MAAO,QACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAasB,KAAO,EACvEF,KAAMG,KACNC,UAAU,EACVC,IAAK,GACN,CACCT,MAAO,aACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa0B,KAAO,KACvEN,KAAMC,IACNG,UAAU,IAYVvB,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,YAEfyB,QAAS,aAGTC,OAAQpB,YAAYC,KAAc,CAACX,KAAKH,MAAMI,MAAMC,OAAOC,KAC3D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACXgC,QAAQC,IAAIzB,IAEhBiB,QAAS,aAGTC,OAAQQ,IACRP,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,aACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,mBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,kBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,YAAYL,cAAeA,EACjCM,eAAgB,EAAKA,eACrBV,SAAUA,EAAUrB,OAAQA,QAKpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,qB,GAzHZC,IAAMC,W,kBCNvBC,E,YACjB,WAAYpD,GAAQ,IAAD,8BACf,4CAAMA,KAaVO,SAAW,WAAc,IAAb8C,EAAY,uDAAL,EACX1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAmB,GAAfvC,EAAKwC,QACC,CACFC,OAAO,YAAKzC,EAAK0C,SACjBC,KAAK3C,EAAK2C,KACVC,SAAS,GAGV,CACHH,OAAO,GAAD,mBAAMF,EAAUE,QAAhB,YAA0BzC,EAAK0C,UACrCC,KAAK3C,EAAK2C,KACVC,SAAS,OAIjB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAS,KAIbC,EAAU,CACVP,KAAKA,GAETzC,YAAO6B,IAAaZ,EAAWG,EAAS4B,IAvCxC,EAAK3D,MAAQ,CACTuD,OAAQ,GACRG,SAAS,GAEb,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,iFAWf1D,KAAKI,a,mCAiCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYC,KAAc,CAACiD,EAAOzD,KAAM0D,GALjC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACL+D,EAAO,CACTC,OAAQ,MACRC,MAAO,MACPC,WAAY,IAIZC,EAAW,SAAUC,KAIzB,OAAO,6BACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3B,OAAK,EAACC,KAAK,kBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAc,EAAKvE,MAAWuE,EAA9B,CAAqCjE,SAAU,EAAKA,eAC9E,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,uBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAc,EAAKvE,MAAWuE,EAA9B,CAAqCjE,SAAU,EAAKA,eAC9E,kBAAC,IAAD,KACI,uBAAMwC,MAAM,SACN0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,mBAAV,IAA8B,uBAAQ3B,KAAK,WAAU,uBACxDA,KAAK,SAD4B,UAEvC,uBAAMqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAMuD,OACpDmB,WAAW,WACXC,WAAY,SAAAC,GAAI,OAAI,sBAAMC,KAAN,CAAW3D,IAAK0D,EAAKvE,GACVyE,QAAS,CAAC,kBAAC,IAAD,CACN9B,GAAI,oBAAsB4B,EAAKvE,IADzB,QAEN,uBAAYyC,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IACnCI,OAAO,MAAMC,WAAW,MAChC,uCAERT,MAAO,kBAACU,EAAA,EAAD,CAASC,QAASP,EAAKjD,KACdsC,KAAMA,EACNmB,QAASf,KACpD,sBAAMQ,KAAKQ,KAAX,CACIC,OAAQ,uBAAQC,MAAO,CAACC,gBAAiB,YAAaZ,EAAKrD,MAC3DuB,MAAO8B,EAAKxD,WAIxB,4BACF,kBAACqE,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,e,GAtG9BR,IAAMC,W,mCCUzB0C,E,YACjB,WAAY7F,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAe,EAAKF,MAAME,aAAa,EAAKF,MAAME,aAAa,MAHpD,E,8EAOf,IAAIM,EAAYL,KAAKF,MAAMQ,SAC3BN,KAAKO,SAAS,CACVD,UAAYD,M,0CAKbL,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACXC,KAAKI,c,iCAMb,IAAII,EAAMR,KASVS,YAAOC,YAAYiF,KAAa,CAAC3F,KAAKH,MAAMI,MAAMC,OAAOC,MARzC,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAaa,OAGP,iB,+BAST,IAmDDC,EAnDA,OACAL,EAAMR,KACHc,EAAQ,CAAC,CACZC,MAAO,aACPC,IAAK,QACLO,UAAS,EACTN,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAa6C,MAAM,KACnEzB,KAAMC,KACR,CACEL,MAAO,eACPC,IAAK,SACLC,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAa6F,OAAO,KACpEzE,KAAMC,KACR,CACEL,MAAO,YACPC,IAAK,OACLO,UAAS,EACTN,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAa8F,KAAK,KAClE1E,KAAMC,KACR,CACEL,MAAO,aACPC,IAAK,iBACLC,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAa+F,eAAe,KAC5E3E,KAAM4E,MACR,CACEhF,MAAO,YACPC,IAAK,YACLC,aAAajB,KAAKF,MAAMC,cAAgBC,KAAKF,MAAMC,aAAaiG,UAAUC,IAAOjG,KAAKF,MAAMC,aAAaiG,WAAWC,MACpH9E,KAAM+E,KAER,CACEnF,MAAO,kBACPC,IAAK,mBACLC,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAaoG,iBAAiB,KAC9EhF,KAAMC,KACR,CACEL,MAAO,eACPC,IAAK,WACLO,UAAS,EACTN,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAaqG,SAAS,KACtEjF,KAAMkF,MACR,CACEtF,MAAO,UACPC,IAAK,UAELC,aAAajB,KAAKF,MAAMC,aAAaC,KAAKF,MAAMC,aAAauG,QAAQ,IACrEnF,KAAMoF,OAMPvG,KAAKF,MAAMC,eACVc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,cAInC5E,QAAS,aAGTC,OAAQpB,YAAYiF,KAAa,CAAC3F,KAAKH,MAAMI,MAAMC,OAAOC,KAC1D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAS,CACXT,UAAU,SAASd,GACfe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,cAGnC5E,QAAQ,SAASjB,KAEjBkB,OAAS4E,IACT3E,OAAQ,QAERQ,EAAc,GAElB,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,qBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GAAG,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,YAAYC,eAAiB,EAAKA,eAAgBV,SAAWtB,EAAcC,OAAQA,IAAW,kBAAC,IAAD,CAAUgC,GAAI,iBACjN,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,gBACXC,OAAQ,kBAAK,kBAACX,EAAD,CAAgBY,MAAM,WAAWC,eAAiB,EAAKA,eAAgBV,SAAWA,EAAUrB,OAAQA,QAI3Hd,KAAKF,MAAMQ,UAAc,kBAAC,IAAD,CAAUwC,GAAI,mB,GA5IfC,IAAMC,WCVtB2D,E,YACjB,WAAY9G,GAAQ,IAAD,8BACf,4CAAMA,KAaVO,SAAW,WAAe,IAAd8C,EAAa,uDAAN,EACX1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAmB,GAAfvC,EAAKwC,QACC,CACFwD,KAAK,YAAIhG,EAAK0C,SACdC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHoD,KAAK,GAAD,mBAAKzD,EAAUyD,MAAf,YAAwBhG,EAAK0C,UACjCC,KAAM3C,EAAK2C,KACXC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAU,CACVP,KAAKA,GAETzC,YAAOiG,IAAWhF,EAAWG,EAAS4B,IAvCtC,EAAK3D,MAAQ,CACT8G,KAAM,KACNpD,SAAQ,GAEZ,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,iFAWf1D,KAAKI,a,mCAiCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYiF,KAAa,CAAC/B,EAAOzD,KAAM0D,GALhC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,aACPkE,UAAW,QACX9F,IAAK,cACN,CACC4B,MAAO,OACPkE,UAAW,YACX9F,IAAK,YACL+F,OAAQ,SAAUC,GACd,OAAOf,IAAOe,GAAMC,OAAO,QAE/BtE,OAAO,SAACH,EAAOoB,GAAR,OAAiB,8BAAOA,EAAOoC,UAAU,8BAAOC,IAAOrC,EAAOoC,WAAWiB,OAAO,QAAe,QAEvG,CACCrE,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,kBAAoB4B,EAAKvE,IAAnC,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,gBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAa,EAAKvE,MAAWuE,EAA7B,CAAoCjE,SAAU,EAAKA,eAC7E,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,qBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAa,EAAKvE,MAAWuE,EAA7B,CAAoCjE,SAAU,EAAKA,eAC7E,uBAAMwC,MAAM,QACN0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,iBAAV,IAA4B,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UACrC,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAM8G,KAAMM,YAAY,EAAOL,QAASA,IAE7F,kBAACtB,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAhGrBR,IAAMC,WCO1BmE,E,YACjB,WAAYtH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,iFAQXC,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,uCAMb,IAAIC,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,iCAKf,IAAIG,EAAOR,KASXS,YAAOC,YAAY0G,KAAgB,CAACpH,KAAKH,MAAMI,MAAMC,OAAOC,MAR5C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BAQR,IAwCFC,EAxCC,OACCC,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,KACP,CACCL,MAAO,QACPC,IAAK,eACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAasH,aAAe,EAC/ElG,KAAMG,KACNC,UAAS,EACTC,IAAI,GACL,CACCT,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa0B,KAAO,KACvEN,KAAMC,KACP,CACCL,MAAO,gBACPC,IAAK,WACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAauH,SAAW,KAC3EnG,KAAMC,KACR,CACEL,MAAO,QACPC,IAAK,QACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAawH,MAAQ,KACxEpG,KAAMC,KACP,CACCL,MAAO,UACPC,IAAK,UACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAayH,QAAU,KAC1ErG,KAAMkF,KACNoB,QAAS,IAGTjH,EAAOR,KAEPA,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,iBAGnC5E,QAAS,aAGTC,OAAQpB,YAAY0G,KAAgB,CAACpH,KAAKH,MAAMI,MAAMC,OAAOC,KAC7D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,iBAGnC5E,QAAS,aAGTC,OAAQ4F,IACR3F,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,wBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,eACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,oBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,mBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,cAAcL,cAAeA,EACnCM,eAAgB,EAAKA,eAAgBV,SAAUA,EAC/CrB,OAAQA,QAIhDd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,sB,GAtITC,IAAMC,WCR1B2E,E,YACjB,WAAY9H,GAAQ,IAAD,8BACf,4CAAMA,KAaVO,SAAU,WAAc,IAAb8C,EAAY,uDAAL,EACV1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAoB,GAAhBvC,EAAKwC,QACC,CACFwE,SAAS,YAAKhH,EAAK0C,SACnBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHoE,SAAS,GAAD,mBAAMzE,EAAUyE,UAAhB,YAA6BhH,EAAK0C,UAC1CC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAGZC,EAAU,CACVP,KAAKA,GAETzC,YAAOiH,IAAgBhG,EAAWG,EAAS4B,IAtC3C,EAAK3D,MAAQ,CACT8H,SAAU,GACVpE,SAAQ,GAEZ,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,iFAWf1D,KAAKI,a,mCAgCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAY0G,KAAgB,CAACxD,EAAOzD,KAAM0D,GALnC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,OACPkE,UAAW,eACX9F,IAAK,QACN,CACC4B,MAAO,UACPkE,UAAW,UACX9F,IAAK,WACN,CACC4B,MAAO,QACPkE,UAAW,QACX9F,IAAK,SACN,CACC4B,MAAO,QACPkE,UAAW,WACX9F,IAAK,SAEL,CACI4B,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,qBAAuB4B,EAAKvE,IAAtC,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKpB,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,mBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAiB,EAAKvE,MAAWuE,EAAjC,CAAwCjE,SAAU,EAAKA,eACjF,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,wBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAiB,EAAKvE,MAAWuE,EAAjC,CAAwCjE,SAAU,EAAKA,eACjF,uBAAMwC,MAAM,WACN0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,oBAAV,IAA+B,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UACxC,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAM8H,SAAUf,QAASA,EAASK,YAAY,IAEnG,kBAAC3B,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAnGpBR,IAAMC,W,SCS3B6E,E,YACjB,WAAYhI,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,iFAQXC,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,uCAMb,IAAIC,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,iCAKf,IAAIG,EAAOR,KASXS,YAAOC,YAAYoH,KAAgB,CAAC9H,KAAKH,MAAMI,MAAMC,OAAOC,MAR5C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BASR,IAgDFC,EAhDC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,eACPC,IAAK,eACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAagI,aAAe,KAC/E5G,KAAM6G,KACNC,QAASC,KACV,CACCnH,MAAO,eACPC,IAAK,eACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaoI,aAAe,KAC/EhH,KAAMC,KACP,CACCL,MAAO,qBACPC,IAAK,aACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaqI,WAAa,KAC7EjH,KAAM4E,MACP,CACChF,MAAO,qBACPC,IAAK,aACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAasI,WAAa,GAC7ElH,KAAMmH,MACP,CACCvH,MAAO,kBACPC,IAAK,mBACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaoG,iBAAmB,KACnFhF,KAAMkF,MACP,CACCtF,MAAO,eACPC,IAAK,WACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaqG,SAAW,KAC3EjF,KAAMkF,MACP,CACCtF,MAAO,MACPC,IAAK,SACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6F,OAAS,KACzEzE,KAAMC,IACNG,UAAU,GACX,CACCR,MAAO,UACPC,IAAK,UACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAauG,QAAU,IAC1EnF,KAAMoF,OAKNvG,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,iBAGnC5E,QAAS,aAGTC,OAAQpB,YAAYoH,KAAgB,CAAC9H,KAAKH,MAAMI,MAAMC,OAAOC,KAC7D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,iBAGnC5E,QAAS,aAGTC,OAAQyG,IACRxG,OAAQ,QAERQ,EAAgB,GAEpB,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,wBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,eACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,oBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,mBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,cAAcC,eAAgB,EAAKA,eACzCV,SAAUA,EAAUrB,OAAQA,QAIpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,sB,GA9IVC,IAAMC,WCTzB2D,E,YACjB,WAAY9G,GAAQ,IAAD,8BACf,4CAAMA,KAaV2I,aAAc,WAAY,IAAXtF,EAAU,uDAAL,EACZ1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAoB,GAAhBvC,EAAKwC,QACC,CACFqF,QAAQ,YAAI7H,EAAK0C,SACjBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHiF,QAAQ,GAAD,mBAAKtF,EAAUsF,SAAf,YAA2B7H,EAAK0C,UACvCC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAU,CACVP,KAAKA,GAGTzC,YAAO8H,IAAc7G,EAAWG,EAAS4B,IAxCzC,EAAK3D,MAAQ,CACT2I,QAAS,GACTjF,SAAQ,GAEZ,EAAKgF,aAAe,EAAKA,aAAa9E,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,iFAWf1D,KAAKwI,iB,mCAkCI5E,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYoH,KAAgB,CAAClE,EAAOzD,KAAM0D,GALnC,SAAUjD,GACtBJ,EAAKgI,kBAEK,iB,+BAKR,IAAD,OACDhI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,eACPkE,UAAW,eACX9F,IAAK,gBACN,CACC4B,MAAO,eACPkE,UAAW,eACX9F,IAAK,gBACN,CACC4B,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,qBAAuB4B,EAAKvE,IAAtC,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,mBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAe,EAAKvE,MAAWuE,EAA/B,CAAsCjE,SAAU,EAAKoI,mBAC/E,kBAAC,IAAD,CAAO/F,OAAK,EAACC,KAAK,wBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAe,EAAKvE,MAAWuE,EAA/B,CAAsCjE,SAAU,EAAKoI,mBAC/E,uBAAM5F,MAAM,UACN0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,oBAAV,IAA+B,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UACxC,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAAS0D,YAAY,EAAOL,QAASA,EAAStC,WAAYvE,KAAKF,MAAM2I,UAEhG,kBAAClD,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKgD,aAAa,EAAK1I,MAAMyD,OACjDC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GA5FrBR,IAAMC,WCU1B0F,E,YACjB,WAAY7I,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,8EAQf,IAAIM,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,0CAKXL,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,iCAMb,IAAII,EAAOR,KASXS,YAAOC,YAAYiI,KAAe,CAAC3I,KAAKH,MAAMI,MAAMC,OAAOC,MAR3C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BASR,IA0CFC,EA1CC,OACCC,EAAS,CAAC,CACZC,MAAO,cACPC,IAAK,QACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6C,MAAQ,KACxEzB,KAAMC,KACP,CACCL,MAAO,aACPC,IAAK,aACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6I,WAAa,KAC7EzH,KAAM+E,KAEP,CACCnF,MAAO,cACPC,IAAK,cACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa8I,YAAc,KAC9E1H,KAAM4E,MACP,CACChF,MAAO,kBACPC,IAAK,mBACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaoG,iBAAmB,KACnFhF,KAAMC,KACP,CACCL,MAAO,eACPC,IAAK,WACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaqG,SAAW,KAC3EjF,KAAMkF,MACP,CACCtF,MAAO,MACPC,IAAK,SACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6F,OAAS,KACzEzE,KAAMC,KACP,CACCL,MAAO,UACPC,IAAK,UACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAauG,QAAU,KAC1EnF,KAAMoF,OAGN/F,EAAOR,KAEPA,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,eAGnC5E,QAAS,aAGTC,OAAQpB,YAAYiI,KAAe,CAAC3I,KAAKH,MAAMI,MAAMC,OAAOC,KAC5D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAEjCC,EAAW,CACXT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,eAGnC5E,QAAS,aAGTC,OAAQgH,IACR/G,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,sBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,aACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,kBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,iBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,YACpCC,eAAgB,EAAKA,eACrBV,SAAUA,EAAUrB,OAAQA,QAIpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,oB,GArIZC,IAAMC,WCTvB2D,E,YACjB,WAAY9G,GAAQ,IAAD,8BACf,4CAAMA,KAaVO,SAAU,WAAc,IAAb8C,EAAY,uDAAN,EACT1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAoB,GAAhBvC,EAAKwC,QACC,CACF2F,OAAO,YAAKnI,EAAK0C,SACjBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHuF,OAAO,GAAD,mBAAM5F,EAAU4F,QAAhB,YAA2BnI,EAAK0C,UACtCC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAW,CACXP,KAAKA,GAETzC,YAAOqI,IAAapH,EAAWG,EAAS4B,IAvCxC,EAAK3D,MAAQ,CACTiJ,OAAQ,KACRvF,SAAQ,GAEZ,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,iFAWf1D,KAAKI,a,mCAiCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYiI,KAAe,CAAC/E,EAAOzD,KAAM0D,GALlC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,cACPkE,UAAW,QACX9F,IAAK,eACN,CACC4B,MAAO,OACPkE,UAAU,aACV9F,IAAK,aACL2B,OAAQ,SAAC+B,GACL,OAAOuB,IAAOvB,GAAMuC,OAAO,SAEhC,CACCrE,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,mBAAqB4B,EAAKvE,IAApC,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,iBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAc,EAAKvE,MAAnB,CAA0BM,SAAU,EAAKA,UAAciE,OACjF,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,sBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAc,EAAKvE,MAAnB,CAA0BM,SAAU,EAAKA,UAAciE,OACjF,uBAAMzB,MAAM,SACN0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,kBAAkB,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UACrC,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAAS0D,YAAY,EAAO3C,WAAYvE,KAAKF,MAAMiJ,OAAQlC,QAASA,IAE/F,kBAACtB,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GA9FrBR,IAAMC,WCO1BgG,E,YACjB,WAAYnJ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,8EAQf,IAAIM,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,0CAKXL,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,iCAMb,IAAII,EAAOR,KACXoC,QAAQC,IAAI,aASZ5B,YAAOC,YAAYuI,KAAiB,CAACjJ,KAAKH,MAAMI,MAAMC,OAAOC,MAR7C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BAQR,IA0BFC,EA1BC,OACCC,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,IACN8H,UAAU,GACX,CACCnI,MAAO,aACPC,IAAK,QACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6C,MAAQ,KACxEzB,KAAMC,KACP,CACCL,MAAO,kBACPC,IAAK,mBACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaoG,iBAAmB,KACnFhF,KAAMkF,MACP,CACCtF,MAAO,eACPC,IAAK,WACLO,UAAS,EACTN,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAaqG,SAAW,KAC3EjF,KAAMkF,OAKN7F,EAAOR,KACPA,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WAC7BpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACfgC,QAAQC,IAAIzB,IAEhBiB,QAAS,aAGTC,OAAQpB,YAAYuI,KAAiB,CAACjJ,KAAKH,MAAMI,MAAMC,OAAOC,KAC9D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WAC7BpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACXgC,QAAQC,IAAIzB,IAEpBiB,QAAS,aAGTC,OAAQqH,IACRpH,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,wBACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,WACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,mBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,mBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,UAAUC,eAAgB,EAAKA,eACrCV,SAAUA,EAAUrB,OAAQA,QAIpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,sB,GArHdC,IAAMC,WCPrBoG,E,YACjB,WAAYvJ,GAAO,IAAD,8BACd,4CAAMA,KAUVO,SAAU,WAAW,IAAV8C,EAAS,uDAAJ,EACR1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAmB,GAAfvC,EAAKwC,QACC,CACFiG,QAAQ,YAAIzI,EAAK0C,SACjBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACH6F,QAAQ,GAAD,mBAAKlG,EAAUkG,SAAf,YAA0BzI,EAAK0C,UACtCC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAW,CACXP,KAAKA,GAETzC,YAAO0I,IAAezH,EAAWG,EAAS4B,IApC1C,EAAK3D,MAAM,CACPuJ,QAAQ,KACR7F,SAAQ,GAEZ,EAAKpD,SAAS,EAAKA,SAASsD,KAAd,gBANA,E,iFASd1D,KAAKI,a,+BAgCA,IAAD,OAEAyG,EAAU,CAAC,CACXjE,MAAO,OACPkE,UAAW,OACX9F,IAAK,QACP,CACE4B,MAAO,QACPkE,UAAW,QACX9F,IAAK,SACP,CACE4B,MAAO,mBACPkE,UAAW,mBACX9F,IAAK,oBACP,CACE4B,MAAO,eACPkE,UAAW,WACX9F,IAAK,YAEL,CACI4B,MAAM,UACND,OAAO,SAAC+B,GACJ,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,qBAAqB4B,EAAKvE,IAApC,YAIhB,OAAM,6BAAK,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,mBACfC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAY,EAAKvE,MAAWuE,EAA5B,CAAmCjE,SAAU,EAAKA,eACxE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,wBACfC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,eAAQjE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OAE3E,uBAAMzB,MAAM,YAAc0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,oBAAV,IAA+B,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UAC5D,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAMuJ,QAASxC,QAASA,EAASK,YAAY,IAElG,kBAAC3B,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAhF7BR,IAAMC,WCOtBsG,E,YACjB,WAAYzJ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,8EAQf,IAAIM,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,0CAKXL,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,iCAMb,IAAII,EAAOR,KACXoC,QAAQC,IAAI,aASZ5B,YAAOC,YAAY6I,KAAe,CAACvJ,KAAKH,MAAMI,MAAMC,OAAOC,MAR3C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BAQR,IAwBFC,EAxBC,OACCC,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,KACP,CACCL,MAAO,cACPC,IAAK,QACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6C,MAAQ,KACxEzB,KAAMC,KACP,CACCL,MAAO,QACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAasB,KAAO,KACvEF,KAAMG,MACP,CACCP,MAAO,gBACPC,IAAK,eACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAayJ,aAAe,KAC/ErI,KAAM4E,OAGNvF,EAAOR,KAEPA,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCQ,QAAQC,IAAIzB,GACZJ,EAAKX,MAAMO,WACXI,EAAKqC,kBAEThB,QAAS,aAGTC,OAAQpB,YAAY6I,KAAe,CAACvJ,KAAKH,MAAMI,MAAMC,OAAOC,KAC5D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACLT,QAAQC,IAAIzB,IAEhBiB,QAAS,aAGTC,OAAQ2H,IACR1H,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,6BACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,oBACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,wBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,wBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,mBAAmBL,cAAeA,EACxCM,eAAgB,EAAKA,eACrBV,SAAUA,EAAUrB,OAAQA,QAIpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,2B,GA/GNC,IAAMC,WCT7B0G,E,YACjB,WAAY7J,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT6J,OAAQ,GACRnG,SAAQ,GAEZ,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,kFAWf1D,KAAKI,a,iCAIL,IAAII,EAAOR,KAcXS,YAAOgJ,KAbS,SAAU7I,GACtBwB,QAAQC,IAAIzB,GACZJ,EAAKD,SAAS,CACVoJ,OAAQ/I,EACR4C,SAAQ,OAGF,WACVhD,EAAKD,SAAS,CACViD,SAAQ,S,mCAOPI,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAY6I,KAAe,CAAC3F,EAAOzD,KAAM0D,GALlC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACX,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,wBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAoB,EAAKvE,MAAWuE,EAApC,CAA2CjE,SAAU,EAAKA,eACpF,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,6BACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAoB,EAAKvE,MAAWuE,EAApC,CAA2CjE,SAAU,EAAKA,eACpF,uBAAMwC,MAAM,eAAe0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,yBACxC,uBAAQ3B,KAAK,WACT,uBAAMA,KAAK,SADf,UAIA,uBAAMqC,QAASxD,KAAKF,MAAM0D,QAASgB,WAAW,WAAWD,WAAYvE,KAAKF,MAAM6J,OAAQlF,WAAY,SAAAC,GAAI,OACpG,sBAAMC,KAAN,CAAW3D,IAAK0D,EAAKvE,GACVmE,MAAO,yBAAKsF,IAAKC,YAAYnF,EAAK8E,cACtBM,IAAKpF,EAAK9B,MACVyC,MAAO,CACH0E,SAAU,OACV9F,MAAO,WAGvBW,QAAS,CAAC,kBAAC,IAAD,CAAM9B,GAAI,0BAA4B4B,EAAKvE,IAA3C,QACN,uBAAYyC,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,wCAEf,sBAAMJ,KAAKQ,KAAX,CACIC,OAAQ,2BAASV,EAAKrD,MACtBuB,MAAO8B,EAAK9B,MACZoH,YAAatF,EAAKxD,kB,GA1ED6B,IAAMC,WCQ9BiH,E,YACjB,WAAYpK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,8EAQf,IAAIM,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,0CAKXL,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,iCAMb,IAAII,EAAOR,KACXoC,QAAQC,IAAI,aASZ5B,YAAOC,YAAYwJ,KAAiB,CAAClK,KAAKH,MAAMI,MAAMC,OAAOC,MAR7C,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BAQR,IAcFC,EAdC,OACCC,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,KACP,CACCL,MAAO,UACPC,IAAK,UACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAauG,QAAU,KAC1EnF,KAAMoF,OAGN/F,EAAOR,KAEPA,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,oBAInC5E,QAAS,aAGTC,OAAQpB,YAAYwJ,KAAiB,CAAClK,KAAKH,MAAMI,MAAMC,OAAOC,KAC9D4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,oBAGnC5E,QAAS,aAGTC,OAAQqI,IACRpI,OAAQ,QAERQ,EAAgB,CAAC,CAACvB,IAAK,YAAawB,OAAO,IAE/C,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,2BACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,gBACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,sBAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,sBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,eAAeL,cAAeA,EACpCM,eAAgB,EAAKA,eAAgBV,SAAUA,EAC/CrB,OAAQA,QAIhDd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,yB,GA1GTC,IAAMC,WCL1BoH,E,YACjB,WAAYvK,GAAQ,IAAD,8BACf,4CAAMA,KAYVO,SAAU,WAAc,IAAb8C,EAAY,uDAAN,EACT1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAoB,GAAhBvC,EAAKwC,QACC,CACFiH,SAAS,YAAKzJ,EAAK0C,SACnBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACH6G,SAAS,GAAD,mBAAMlH,EAAUkH,UAAhB,YAA6BzJ,EAAK0C,UAC1CC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAW,CACXP,KAAKA,GAETzC,YAAO0J,IAAezI,EAAWG,EAAS4B,IAtC1C,EAAK3D,MAAQ,CACTuK,SAAU,KACV7G,SAAQ,GAEZ,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAND,E,iFAUf1D,KAAKI,a,mCAiCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYwJ,KAAiB,CAACtG,EAAOzD,KAAM0D,GALpC,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,OACPkE,UAAW,OACX9F,IAAK,QACN,CACC4B,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,wBAA0B4B,EAAKvE,IAAzC,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BAAK,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,sBACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,eAAajE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACpF,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,2BACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,eAAajE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACpF,uBAAMzB,MAAM,aAAa0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,uBAAV,IAAkC,uBAAQ3B,KAAK,WAAU,uBACrFA,KAAK,SADyD,UAE9D,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAAS0D,YAAY,EAAO3C,WAAYvE,KAAKF,MAAMuK,SAAUxD,QAASA,IAEjG,kBAACtB,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAtFpBR,IAAMC,WCK3BsH,E,YACjB,WAAYzK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,iFAQXC,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,uCAMb,IAAIC,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,iCAKf,IAAIG,EAAOR,KASXS,YAAOC,YAAY6J,KAA2B,CAACvK,KAAKH,MAAMI,MAAMC,OAAOC,MARvD,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BASR,IAoBFC,EApBC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,OACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAamB,KAAO,KACvEC,KAAMC,KACP,CACCL,MAAO,QACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAasB,KAAO,KACvEF,KAAMG,MACP,CACCP,MAAO,aACPC,IAAK,OACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa0B,KAAO,KACvEN,KAAMC,MAKNpB,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,0BAGnC5E,QAAS,aAGTC,OAAQpB,YAAY6J,KAA2B,CAACvK,KAAKH,MAAMI,MAAMC,OAAOC,KACxE4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKX,MAAMO,WACXI,EAAKqC,iBACDrC,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,0BAInC5E,QAAS,aAGTC,OAAQ0I,KACRzI,OAAQ,QAERQ,EAAgB,CAAC,CAAC,WAAa,IAEnC,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,iCACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,aACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,6BAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,4BACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,YAAYL,cAAeA,EACjCM,eAAgB,EAAKA,eAAgBV,SAAUA,EAC/CrB,OAAQA,QAIhDd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,+B,GAhHDC,IAAMC,WCAlCyH,E,YACjB,WAAY5K,GAAO,IAAD,8BACd,4CAAMA,KAWVO,SAAU,WAAW,IAAV8C,EAAS,uDAAJ,EACR1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAmB,GAAfvC,EAAKwC,QACC,CACFC,OAAO,YAAIzC,EAAK0C,SAChBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHH,OAAO,GAAD,mBAAKF,EAAUE,QAAf,YAA0BzC,EAAK0C,UACrCC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACZrB,EAAKD,SAAS,CACZiD,SAAQ,KAIRC,EAAW,CACXP,KAAKA,GAETzC,YAAO+J,KAAoB9I,EAAWG,EAAS4B,IArC/C,EAAK3D,MAAM,CACPuD,OAAO,GACPG,SAAQ,GAEZ,EAAKpD,SAAS,EAAKA,SAASsD,KAAd,gBACd,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPN,E,iFAUd1D,KAAKI,a,mCA+BIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAY6J,KAA2B,CAAC3G,EAAOzD,KAAM0D,GAL9C,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAIT,IAAD,OACAI,EAAOR,KACL+D,EAAO,CACTC,OAAQ,MACRC,MAAO,OAKX,OAAM,6BAAK,kBAAC,IAAD,KACP,kBAAC,IAAD,CAAOxB,OAAK,EAACC,KAAK,4BACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAyB,EAAKvE,MAA9B,CAAqCM,SAAU,EAAKA,UAAciE,OAC5F,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,iCACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAAyB,EAAKvE,MAA9B,CAAqCM,SAAU,EAAKA,UAAciE,OAC5F,uBAAMzB,MAAM,qBAAqB0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,6BAAV,IAAwC,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UAC5E,uBAAMqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAMuD,OACpDmB,WAAW,WACXC,WAAY,SAAAC,GAAI,OAAI,sBAAMC,KAAN,CAAW3D,IAAK0D,EAAKvE,GAEVyE,QAAS,CAAC,kBAAC,IAAD,CAAM9B,GAAI,8BAA8B4B,EAAKvE,IAA7C,QACN,uBAAYyC,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,uCAERT,MAAO,kBAACU,EAAA,EAAD,CAASC,QAASP,EAAKjD,KACdsC,KAAMA,KACjD,sBAAMY,KAAKQ,KAAX,CACIC,OAAQ,uBAAQC,MAAO,CAAEC,gBAAiB,YAAeZ,EAAKrD,MAC9DuB,MAAO8B,EAAKxD,WAG1B,4BACA,kBAACqE,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAvFZR,IAAMC,WCEnC0H,E,YACjB,WAAY7K,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,aAAc,EAAKF,MAAME,aAAe,EAAKF,MAAME,aAAe,MAHvD,E,iFAQXC,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMC,cACZC,KAAKI,c,uCAMb,IAAIC,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,iCAKf,IAAIG,EAAOR,KASXS,YAAOC,YAAYiK,KAA6B,CAAC3K,KAAKH,MAAMI,MAAMC,OAAOC,MARzD,SAAUS,GACtBJ,EAAKD,SAAS,CACVR,aAAca,OAGR,iB,+BAOR,IAmBFC,EAnBC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,QACPC,IAAK,QACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6C,MAAQ,KACxEzB,KAAMC,KACP,CACCL,MAAO,QACPC,IAAK,QACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAa6K,MAAQ,KACxEzJ,KAAM4E,MACP,CACChF,MAAO,UACPC,IAAK,UACLC,aAAcjB,KAAKF,MAAMC,aAAeC,KAAKF,MAAMC,aAAauG,QAAU,KAC1EnF,KAAMoF,OAINvG,KAAKF,MAAMC,eACXc,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,4BAGnC5E,QAAS,aAGTC,OAAQpB,YAAYiK,KAA6B,CAAC3K,KAAKH,MAAMI,MAAMC,OAAOC,KAC1E4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAE/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,4BAGnC5E,QAAS,aAGTC,OAAQ+I,KACR9I,OAAQ,QAERQ,EAAgB,GAEpB,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,mCACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,eACpCC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC/CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,+BAC7D,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,8BACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,cAAcC,eAAgB,EAAKA,eACzCV,SAAUA,EAAUrB,OAAQA,QAIpEd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,iC,GA/GCC,IAAMC,WCHpC8H,E,YACjB,WAAYjL,GAAO,IAAD,8BACd,4CAAMA,KAWVO,SAAU,WAAY,IAAX8C,EAAU,uDAAJ,EACT1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAoB,GAAhBvC,EAAKwC,QACC,CACF2H,YAAY,YAAInK,EAAK0C,SACrBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHuH,YAAY,GAAD,mBAAK5H,EAAU4H,aAAf,YAA+BnK,EAAK0C,UAC/CC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACZrB,EAAKD,SAAS,CACZiD,SAAQ,KAIPC,EAAW,CACZP,KAAKA,GAETzC,YAAOoK,KAAsBnJ,EAAWG,EAAS4B,IArCjD,EAAK3D,MAAM,CACPiL,YAAY,GACZvH,SAAQ,GAEZ,EAAKpD,SAAS,EAAKA,SAASsD,KAAd,gBACd,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPN,E,iFAUd1D,KAAKI,a,mCA+BIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYiK,KAA6B,CAAC/G,EAAOzD,KAAM0D,GALhD,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAIT,IAAD,OACAI,EAAOR,KACX,OAAM,6BAAK,kBAAC,IAAD,KACP,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,8BACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAA2B,EAAKvE,MAAWuE,EAA3C,CAAkDjE,SAAU,EAAKA,eAC3F,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,mCACXC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,iBAA2B,EAAKvE,MAAWuE,EAA3C,CAAkDjE,SAAU,EAAKA,eAC3F,uBAAMwC,MAAM,uBAAuB0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,+BAAV,IAA0C,uBAAQ3B,KAAK,WAAU,uBAAMA,KAAK,SAAlC,UAChF,uBAAMqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAMiL,YACpDvG,WAAW,WACXC,WAAY,SAAAC,GAAI,OAAI,sBAAMC,KAAN,CAAW3D,IAAK0D,EAAKvE,GAEVyE,QAAS,CAAC,kBAAC,IAAD,CAAM9B,GAAI,gCAAgC4B,EAAKvE,IAA/C,QACN,uBAAYyC,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,uCAERT,MAAO,yBAAKsF,IAAKC,YAAYnF,EAAKkG,OAAQvF,MAAO,CAACpB,MAAM,YACnF,sBAAMU,KAAKQ,KAAX,CACIC,OAAQ,uBAAQC,MAAO,CAAEC,gBAAiB,YAAeZ,EAAKrD,MAC9DuB,MAAO8B,EAAK9B,MACZoH,YAAa,yBAAKgB,wBAAyB,CAAEC,OAAQvG,EAAK4B,iBAKxE,4BACA,kBAACf,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAlFVR,IAAMC,W,mBCXpDkI,GAAQ,IAAOA,MACAC,G,iLAEb,OAAO,kBAACD,GAAD,CAAOE,QAAS,KACTC,aAAW,EACXhG,MAAO,CAACiG,SAAU,OAAQC,UAAW,QAASC,WAAY,SACpE,wBAAMC,KAAK,SAASC,oBAAqB,CAAC,UACtC,uBAAMC,UAAN,CAAgB3K,IAAI,KAAK4B,MAAO,uBAASyC,MAAO,CAACuG,OAAQ,QAAzB,iBAC5B,uBAAMjH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,eACL,uBAAM3B,KAAK,YACX,0BAAM0K,UAAU,YAAhB,YAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,gBACL,uBAAM3B,KAAK,SACX,0BAAM0K,UAAU,YAAhB,aAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,aACL,uBAAM3B,KAAK,cACX,0BAAM0K,UAAU,YAAhB,WAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,cACL,uBAAM3B,KAAK,iBACX,0BAAM0K,UAAU,YAAhB,YAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,gBACL,uBAAM3B,KAAK,UACX,0BAAM0K,UAAU,YAAhB,cAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,gBACL,uBAAM3B,KAAK,WACX,0BAAM0K,UAAU,YAAhB,cAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,qBACL,uBAAM3B,KAAK,YACX,0BAAM0K,UAAU,YAAhB,kBAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,mBACL,uBAAM3B,KAAK,SACX,0BAAM0K,UAAU,YAAhB,gBAGR,uBAAMlH,KAAN,CAAW3D,IAAI,SACX,kBAAC,IAAD,CAAM8B,GAAG,yBACL,uBAAM3B,KAAK,iBACX,0BAAM0K,UAAU,YAAhB,yBAGR,uBAAMlH,KAAN,CAAW3D,IAAI,UACX,kBAAC,IAAD,CAAM8B,GAAG,2BACL,uBAAM3B,KAAK,SACX,0BAAM0K,UAAU,YAAhB,0BAGR,uBAAMlH,KAAN,CAAW3D,IAAI,UACX,kBAAC,IAAD,CAAM8B,GAAG,sBACL,uBAAM3B,KAAK,QACX,0BAAM0K,UAAU,YAAhB,oBAGR,uBAAMlH,KAAN,CAAW3D,IAAI,UACX,kBAAC,IAAD,CAAM8B,GAAG,sBACL,uBAAM3B,KAAK,aACX,0BAAM0K,UAAU,YAAhB,2B,GA5Ee9I,IAAMC,WCK5B8I,G,YACjB,WAAYjM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiM,gBAAiB,EAAKlM,MAAMkM,gBAAkB,EAAKlM,MAAMkM,gBAAkB,MAHhE,E,iFAQX/L,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMiM,iBACZ/L,KAAKI,c,iCAMb,IAAII,EAAOR,KASXS,YAAOC,YAAYsL,KAAuB,CAAChM,KAAKH,MAAMI,MAAMC,OAAOC,MARnD,SAAUS,GACtBJ,EAAKD,SAAS,CACVwL,gBAAiBnL,OAGX,iB,uCAOd,IAAIP,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,+BAIT,IA4BFQ,EA5BC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,eACPC,IAAK,QACLO,UAAW,EACXN,aAAcjB,KAAKF,MAAMiM,gBAAkB/L,KAAKF,MAAMiM,gBAAgBnJ,MAAQ,KAC9EzB,KAAMC,KACR,CACEL,MAAO,gBACPC,IAAK,QACLO,UAAW,EACXN,aAAcjB,KAAKF,MAAMiM,gBAAkB/L,KAAKF,MAAMiM,gBAAgBE,MAAQ,KAC9E9K,KAAMG,MACP,CACCP,MAAO,gBACPC,IAAK,QACLG,KAAM4E,KACN9E,aAAajB,KAAKF,MAAMiM,gBAAkB/L,KAAKF,MAAMiM,gBAAgBnB,MAAQ,MAC/E,CACE7J,MAAO,UACPC,IAAK,UACLC,aAAcjB,KAAKF,MAAMiM,gBAAiB/L,KAAKF,MAAMiM,gBAAgBzF,QAAU,KAC/E/E,UAAW,EACXJ,KAAMoF,OAKNvG,KAAKF,MAAMiM,kBACXlL,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WAC7BpB,EAAKD,SAAS,CACdD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,uBAGnC5E,QAAS,aAGTC,OAAQpB,YAAYsL,KAAuB,CAAChM,KAAKH,MAAMI,MAAMC,OAAOC,KACpE4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAC/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,uBAGnC5E,QAAS,aAGTC,OAAQoK,KACRnK,OAAQ,QAERQ,EAAgB,GAEpB,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,8BACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,eAC/CC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC3CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,yBACtD,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,yBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,cAAcL,cAAeA,EACxDM,eAAgB,EAAKA,eAAgBV,SAAUA,EAC3CrB,OAAQA,QAE/Bd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,4B,GArHJC,IAAMC,WCC/BmJ,G,YACpB,WAAYtM,GAAO,IAAD,8BACjB,4CAAMA,KAaJO,SAAU,WAAY,IAAX8C,EAAU,uDAAL,EACR1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAU4C,GACpB,OAAmB,GAAfvC,EAAKwC,QACC,CACFgJ,YAAY,YAAKxL,EAAK0C,SACtBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACH4I,YAAY,GAAD,mBAAMjJ,EAAUiJ,aAAhB,YAA+BxL,EAAK0C,UAC/CC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAW,CACXP,KAAKA,GAETzC,YAAOyL,KAAgBxK,EAAWG,EAAS4B,IAvCjD,EAAK3D,MAAO,CACXsM,YAAY,KACH5I,SAAQ,GAElB,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,iFAWX1D,KAAKI,a,mCAiCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAYsL,KAAuB,CAACpI,EAAOzD,KAAM0D,GAL1C,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,OACPkE,UAAW,QACX9F,IAAK,SACP,CACE4B,MAAM,QACN5B,IAAI,QACJ8F,UAAU,QACVnE,OAAO,SAAC+B,EAAKd,GAAN,OAAe,uBAAQgG,IAAKC,YAAYjG,EAAOgH,WACxD,CACEhI,MAAO,cACPD,OAAQ,SAAC+B,GACL,OAAO,yBAAKsG,wBAAyB,CAAEC,OAAQvG,EAAK4B,aAE1D,CACE1D,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,2BAA6B4B,EAAKvE,IAA5C,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BACN,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,8BAChBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,eAAkBjE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACpF,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,yBACRC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,eAAkBjE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACzF,uBAAMzB,MAAM,WAAW0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,0BAAV,IAAqC,uBAAQ3B,KAAK,WAAU,uBACtFA,KAAK,SAD0D,UAE/D,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAAS0D,YAAY,EAAO3C,WAAYvE,KAAKF,MAAMsM,YAAavF,QAASA,IAEjG,kBAACtB,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GAlGnBR,IAAMC,WCDhCqJ,G,YACjB,WAAYxM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTwM,gBAAiB,EAAKzM,MAAMyM,gBAAkB,EAAKzM,MAAMyM,gBAAkB,MAHhE,E,iFAQXtM,KAAKH,MAAMI,MAAMC,OAAOC,KACnBH,KAAKF,MAAMwM,iBACZtM,KAAKI,c,iCAMb,IAAII,EAAOR,KASXS,YAAOC,YAAY6L,KAAuB,CAACvM,KAAKH,MAAMI,MAAMC,OAAOC,MARnD,SAAUS,GACtBJ,EAAKD,SAAS,CACV+L,gBAAiB1L,OAGX,iB,uCAQd,IAAIP,EAAcL,KAAKF,MAAMQ,SAC7BN,KAAKO,SAAS,CACVD,UAAWD,M,+BAIT,IAqBFQ,EArBC,OACDL,EAAOR,KACLc,EAAS,CAAC,CACZC,MAAO,eACPC,IAAK,QACLO,UAAU,EACVN,aAAcjB,KAAKF,MAAMwM,gBAAkBtM,KAAKF,MAAMwM,gBAAgB1J,MAAQ,KAC9EzB,KAAMC,KACR,CACEL,MAAO,gBACPC,IAAK,QACLO,UAAU,EACVJ,KAAM4E,MACR,CACEhF,MAAO,UACPC,IAAK,UAELC,aAAcjB,KAAKF,MAAMwM,gBAAkBtM,KAAKF,MAAMwM,gBAAgBhG,QAAU,KAChFnF,KAAMoF,OAINvG,KAAKF,MAAMwM,kBACXzL,EAAe,CACXa,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,uBAGnC5E,QAAS,aAGTC,OAAQpB,YAAY6L,KAAuB,CAACvM,KAAKH,MAAMI,MAAMC,OAAOC,KACpE4B,OAAQ,QAIhB,IAAMC,EAAiB,IAAKC,QAAL,CAAcC,KAC/BC,EAAW,CACbT,UAAW,SAAUd,GACjBe,YAAeC,KAAkB,WACjCpB,EAAKD,SAAS,CACVD,UAAU,IAEdE,EAAKX,MAAMO,WACPI,EAAKX,MAAM2G,SACXhG,EAAKX,MAAM2G,QAAQC,QAAQ,uBAGnC5E,QAAS,aAGTC,OAAQ0K,KACRzK,OAAQ,QAERQ,EAAgB,GAEpB,OAAO,2BACH,2BACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,8BACXC,OAAQ,kBAAO,EAAK9C,MAAMI,MAAMC,OAAOC,GACnC,kBAAC6B,EAAD,CAAgBO,cAAeA,EAAeK,MAAM,eAC/CC,eAAgB,EAAKA,eAAgBV,SAAUtB,EAC3CC,OAAQA,IAAY,kBAAC,IAAD,CAAUgC,GAAI,yBACtD,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,yBACXC,OAAQ,kBAAM,kBAACX,EAAD,CAAgBY,MAAM,cAAcL,cAAeA,EACxDM,eAAgB,EAAKA,eAAgBV,SAAUA,EAC3CrB,OAAQA,QAE/Bd,KAAKF,MAAMQ,UAAY,kBAAC,IAAD,CAAUwC,GAAI,4B,GA/GJC,IAAMC,WCC/ByJ,G,YACpB,WAAY5M,GAAO,IAAD,8BACjB,4CAAMA,KAaJO,SAAU,WAAY,IAAX8C,EAAU,uDAAL,EACR1C,EAAI,eACJkB,EAAY,SAAUd,GACtBJ,EAAKD,UAAS,SAAUmM,GACpB,OAAmB,GAAf9L,EAAKwC,QACC,CACFuJ,YAAY,YAAK/L,EAAK0C,SACtBC,KAAK3C,EAAK2C,KACVC,SAAQ,GAGT,CACHmJ,YAAY,GAAD,mBAAMD,EAASC,aAAf,YAA+B/L,EAAK0C,UAC/CC,KAAK3C,EAAK2C,KACVC,SAAQ,OAIhB3B,EAAU,WACVrB,EAAKD,SAAS,CACViD,SAAQ,KAIZC,EAAW,CACXP,KAAKA,GAGTzC,YAAO+L,KAAgB9K,EAAWG,EAAS4B,IAxCjD,EAAK3D,MAAO,CACX6M,YAAY,KACHnJ,SAAQ,GAElB,EAAKpD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,iFAWX1D,KAAKI,a,mCAmCIwD,GACT,IAAIpD,EAAOR,KACP6D,EAAU,CACdA,WAAoB,GAMpBC,YAASpD,YAAY6L,KAAuB,CAAC3I,EAAOzD,KAAM0D,GAL1C,SAAUjD,GACtBJ,EAAKJ,cAEK,iB,+BAKR,IAAD,OACDI,EAAOR,KACP6G,EAAU,CAAC,CACXjE,MAAO,OACPkE,UAAW,QACX9F,IAAK,SACP,CACE4B,MAAO,cACPD,OAAQ,SAAC+B,GACL,OAAO,yBAAKsG,wBAAyB,CAAEC,OAAQvG,EAAK4B,aAEzD,CACC1D,MAAO,UACPD,OAAQ,SAAC+B,GACL,OAAO,6BACH,kBAAC,IAAD,CAAM5B,GAAI,2BAA6B4B,EAAKvE,IAA5C,QACA,uBAASgB,KAAK,aACd,uBAAYyB,MAAM,iCACNiC,UAAW,kBAAMrE,EAAKmD,aAAae,IAAOI,OAAO,MAAMC,WAAW,MAC1E,0CAKhB,OAAO,6BACN,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOtC,OAAK,EAACC,KAAK,8BAChBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,eAAkBjE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACpF,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,yBACRC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,eAAkBjE,SAAU,EAAKA,UAAc,EAAKN,MAAWuE,OACzF,uBAAMzB,MAAM,UAAU0B,MAAO,kBAAC,IAAD,CAAMxB,GAAI,0BAAV,IAAqC,uBAAQ3B,KAAK,WAAU,uBACrFA,KAAK,SADyD,UAE9D,uBAAOqC,QAASxD,KAAKF,MAAM0D,QAASe,WAAYvE,KAAKF,MAAM6M,YAAazF,YAAY,EAAOL,QAASA,IACjG,kBAACtB,EAAA,EAAD,CAA0BC,eAAgB,kBAAI,EAAKpF,SAAS,EAAKN,MAAMyD,OAC7CC,QAASxD,KAAKF,MAAM0D,QACpBiC,QAASzF,KAAKF,MAAMyD,c,GA9FnBR,IAAMC,W,mDCOrD,IAAM4J,GAAU,IAAOA,QAGFC,G,iLAGb,OAAO,kBAACD,GAAD,CAASf,UAAU,iBAAiBxG,MAAO,CAG9CkG,UAAW,MAGX,2BACI,kBAAC,GAAkBvL,KAAKH,OACxB,kBAAC+M,GAAD,CAASvH,MAAO,CACZuG,OAAQ,YAERL,UAAW,MAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO7I,KAAK,cAAcC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC7C,kBAAC,IAAD,CAAO3B,KAAK,YAAYC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAO3B,KAAK,eAAeC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAO3B,KAAK,eAAeC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAO3B,KAAK,aAAaC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAO3B,KAAK,eAAeC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAO3B,KAAK,oBAAoBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SACnD,kBAAC,IAAD,CAAO3B,KAAK,kBAAkBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SACjD,kBAAC,IAAD,CAAO3B,KAAK,wBAAwBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SACvD,kBAAC,IAAD,CAAO3B,KAAK,0BAA0BC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,EAAD,SACzD,kBAAC,IAAD,CAAO3B,KAAK,qBAAqBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,SACpD,kBAAC,IAAD,CAAO3B,KAAK,qBAAqBC,OAAQ,SAAC0B,GAAD,OAAW,kBAAC,GAAD,SACpD,kBAAC,IAAD,CAAOyI,UAAWC,e,GA9BAhK,IAAMC,Y,4LClB3BuC,E,YACjB,WAAY1F,GAAQ,IAAD,8BACf,4CAAMA,KAMVmN,aAAe,WACP,EAAKnN,MAAM2F,iBACX,EAAK3F,MAAM2F,iBACX,EAAKyH,2BAVM,EAanBA,uBAAyB,WACrB,IAAIzM,EAAI,eACR,EAAKD,UAAS,SAAU4C,GACpB,OAAIA,EAAU+J,kBAAkBC,OAAS,EAC9B,CAACD,kBAAmB,IAEpB,CAACA,kBAAmB/J,EAAU+J,kBAAoB,QAE9D,WACK1M,EAAKX,MAAM2D,SACX4J,YAAW,WACP5M,EAAKyM,2BACN,SAvBX,EAAKnN,MAAQ,CACToN,kBAAmB,IAHR,E,sEA8Bf,OAAIlN,KAAKH,MAAM2D,QACJ,uBAAM6J,SAAUrN,KAAKH,MAAM2D,SAC9B,uBAAK6B,MAAO,CAACkG,UAAW,QAG5BvL,KAAKH,MAAM4F,OACJ,2BACH,yBAAKJ,MAAO,CAACiI,UAAW,SAAU1B,OAAQ,aACtC,uDAIL,2BACH,yBAAKvG,MAAO,CAACiI,UAAW,SAAU1B,OAAQ,aACtC,uBAAQzK,KAAM,UAAWoM,QAASvN,KAAKgN,aAAcxJ,QAASxD,KAAKH,MAAM2D,SACpExD,KAAKH,MAAM2D,QAAU,UAAYxD,KAAKF,MAAMoN,kBAAoB,mB,GA9C/BnK,IAAMC","file":"static/js/19.4cf3ac27.chunk.js","sourcesContent":["import {Card, Form, Row,} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_VIDEOS,\n    SINGLE_VIDEO\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddVideo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_VIDEO, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : 1,\n            type: NUMBER_FIELD,\n            required: true,\n            min: 1\n        }, {\n            label: \"Video link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n            required: true\n        },\n            //     {\n            //     label: \"Active\",\n            //     key: \"is_active\",\n            //     initialValue: this.state.editBlogData ? this.state.editBlogData.is_active : null,\n            //     type: SINGLE_CHECKBOX_FIELD,\n            // },\n        ];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_VIDEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_VIDEOS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/videos/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Video\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/videos'}/>)}/>\n                <Route exact path='/web/videos/add'\n                       render={() => <TestFormLayout title=\"Add video\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n\n            {this.state.redirect && <Redirect to={'/web/videos'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Divider, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI} from \"../../../utils/common\";\nimport {BLOG_POST, BLOG_VIDEOS, SINGLE_CONTACT, SINGLE_VIDEO} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddVideo from \"./AddVideo\";\nimport YouTube from 'react-youtube';\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class VideosList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: [],\n            loading: true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData = (page = 1)=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current ==1){\n                    return{\n                        videos: [...data.results],\n                        next:data.next,\n                        loading: false\n                    }\n                }\n                return {\n                    videos: [...prevState.videos,...data.results],\n                    next:data.next,\n                    loading: false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading: false\n            })\n\n        };\n        let apiParams={\n            page:page\n        };\n        getAPI(BLOG_VIDEOS, successFn, errorFn, apiParams);\n    };\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_VIDEO, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        const opts = {\n            height: '200',\n            width: '300',\n            playerVars: { // https://developers.google.com/youtube/player_parameters\n                // autoplay: 1\n            }\n        };\n        let _onReady = function (event) {\n            // access to player in all event handlers via event.target\n            // event.target.pauseVideo();\n        }\n        return <div>\n            <Switch>\n                <Route exact path='/web/videos/add'\n                       render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route exact path='/web/videos/edit/:id'\n                       render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route>\n                    <Card title=\"Videos\"\n                          extra={<Link to={\"/web/videos/add\"}> <Button type=\"primary\"><Icon\n                              type=\"plus\"/> Add</Button></Link>}>\n                        <List loading={this.state.loading} dataSource={this.state.videos}\n                              itemLayout=\"vertical\"\n                              renderItem={item => <List.Item key={item.id}\n                                                             actions={[<Link\n                                                                 to={\"/web/videos/edit/\" + item.id}>Edit</Link>,\n                                                                 <Popconfirm title=\"Are you sure delete this item?\"\n                                                                             onConfirm={() => that.deleteObject(item)}\n                                                                             okText=\"Yes\" cancelText=\"No\">\n                                                                     <a>Delete</a>\n                                                                 </Popconfirm>]}\n                                                             extra={<YouTube videoId={item.link}\n                                                                             opts={opts}\n                                                                             onReady={_onReady}/>}>\n                                  <List.Item.Meta\n                                      avatar={<Avatar style={{backgroundColor: '#87d068'}}>{item.rank}</Avatar>}\n                                      title={item.name}\n                                  />\n                              </List.Item>}/>\n\n                          <Divider/>\n                        <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                                  loading={this.state.loading}\n                                                  hidden={!this.state.next}/>\n                    </Card>\n                </Route>\n            </Switch>\n        </div>\n    }\n}\n","import { Card, Form,Row} from \"antd\";\nimport React from \"react\";\nimport {\n    DATE_PICKER, SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    SINGLE_POST\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\nimport moment from \"moment\";\n\n\nexport default class AddPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData : this.props.editBlogData?this.props.editBlogData:null\n        }\n    }\n    changeRedirect(){\n        var redirectVar=this.state.redirect;\n        this.setState({\n            redirect:  !redirectVar,\n        })  ;\n    }\n\n    componentDidMount(){\n        if(this.props.match.params.id){\n            if(!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData(){\n        let that =this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData:data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_POST, [this.props.match.params.id]) ,successFn, errorFn);\n\n\n    }\n\n\n    render(){\n        let that =this;\n        const  fields= [{\n            label: \"Blog Title\",\n            key: \"title\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.title:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog Domain \",\n            key: \"domain\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.domain:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog URL \",\n            key: \"slug\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.slug:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog Image\",\n            key: \"featured_image\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.featured_image:null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        },{\n            label: \"Posted On\",\n            key: \"posted_on\",\n            initialValue:this.state.editBlogData && this.state.editBlogData.posted_on?moment(this.state.editBlogData.posted_on):moment(),\n            type: DATE_PICKER\n\n        },{\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.meta_description:null,\n            type: INPUT_FIELD,\n        },{\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.keywords:null,\n            type: TEXT_FIELD,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            // required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.content:' ',\n            type: QUILL_TEXT_FIELD,\n            // preview:true\n        }, ];\n\n\n        let editformProp;\n        if(this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/blog');\n                    }\n\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_POST, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp={\n            successFn:function(data){\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/blog');\n                };\n            },\n            errorFn:function(data){\n            },\n            action:  BLOG_POST,\n            method: \"post\",\n        };\n        let defaultValues=[];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/blog/edit/:id'\n                       render={() => (this.props.match.params.id?<TestFormLayout defaultValues={defaultValues} title=\"Edit Post\" changeRedirect= {this.changeRedirect} formProp= {editformProp} fields={fields}/>: <Redirect to={'/web/blog'} />)}/>\n                <Route exact path='/web/blog/add'\n                       render={() =><TestFormLayout title=\"Add Post\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect&&    <Redirect to={'/web/blog'} />}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table,} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_POST, SINGLE_POST} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddPost from \"./AddPost\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData = (page = 1 )=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current ==1){\n                    return{\n                        post:[...data.results],\n                        next:data.next,\n                        loading:false,\n                    }\n                }\n                return {\n                    post:[...prevState.post, ...data.results],\n                    next: data.next,\n                    loading:false,\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams={\n            page:page,\n        }\n        getAPI(BLOG_POST, successFn, errorFn, apiParams);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_POST, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Blog Title',\n            dataIndex: 'title',\n            key: 'post_title'\n        }, {\n            title: 'Date',\n            dataIndex: 'posted_on',\n            key: 'post_date',\n            export: function (text) {\n                return moment(text).format('lll');\n            },\n            render:(value ,record)=><span>{record.posted_on?<span>{moment(record.posted_on).format(\"lll\")}</span>:null}</span>\n\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/blog/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/blog/add'\n                   render={(route) => <AddPost {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/blog/edit/:id'\n                   render={(route) => <AddPost {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Blogs\"\n                  extra={<Link to={\"/web/blog/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.post} pagination={false} columns={columns}/>\n\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import { Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_CONTACTUS,\n    SINGLE_CONTACT\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddContacts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_CONTACT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"contact_rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.contact_rank : 1,\n            type: NUMBER_FIELD,\n            required:true,\n            min:1\n        }, {\n            label: \"Link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Phone Number \",\n            key: \"phone_no\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.phone_no : null,\n            type: INPUT_FIELD,\n        },{\n            label: \"Email\",\n            key: \"email\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.email : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Address\",\n            key: \"address\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.address : null,\n            type: TEXT_FIELD,\n            minRows: 3,\n        }];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/contact');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_CONTACT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/contact');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_CONTACTUS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/contact/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Contact\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/contact'}/>)}/>\n                <Route exact path='/web/contact/add'\n                       render={() => <TestFormLayout title=\"Add Contact\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/contact'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_CONTACTUS, SINGLE_CONTACT} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddContacts from \"./AddContacts\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class ContactsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contacts: [],\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData =(page = 1)=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current == 1){\n                    return{\n                        contacts: [...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    contacts: [...prevState.contacts, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n        };\n        let apiParams={\n            page:page,\n        }\n        getAPI(BLOG_CONTACTUS, successFn, errorFn, apiParams);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_CONTACT, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Rank',\n            dataIndex: 'contact_rank',\n            key: 'rank'\n        }, {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address'\n        }, {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email'\n        }, {\n            title: 'Phone',\n            dataIndex: 'phone_no',\n            key: 'phone'\n        },\n            {\n                title: 'Actions',\n                render: (item) => {\n                    return <div>\n                        <Link to={\"/web/contact/edit/\" + item.id}>Edit</Link>\n                        <Divider type=\"vertical\"/>\n                        <Popconfirm title=\"Are you sure delete this item?\"\n                                    onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                            <a>Delete</a>\n                        </Popconfirm>\n                    </div>\n                }\n            }];\n        return <div><Switch>\n            <Route exact path='/web/contact/add'\n                   render={(route) => <AddContacts {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/contact/edit/:id'\n                   render={(route) => <AddContacts {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Contacts\"\n                  extra={<Link to={\"/web/contact/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.contacts} columns={columns} pagination={false}/>\n\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SELECT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD, MULTI_IMAGE_UPLOAD_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {BLOG_DISEASE, SINGLE_DISEASE} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\nimport {DISEASE_TYPES} from \"../../../constants/hardData\";\n\n\nexport default class AddDisease extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_DISEASE, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Disease Type\",\n            key: \"disease_type\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_type : null,\n            type: SELECT_FIELD,\n            options: DISEASE_TYPES\n        }, {\n            label: \"Disease Name\",\n            key: \"disease_name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Disease Main Image\",\n            key: \"main_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.main_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"Disease Side Image\",\n            key: \"side_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.side_image : [],\n            type: MULTI_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"URL\",\n            key: \"domain\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n            type: INPUT_FIELD,\n            required: true\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : ' ',\n            type: QUILL_TEXT_FIELD,\n        },];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/disease');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_DISEASE, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/disease');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_DISEASE,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/disease/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Disease\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/disease'}/>)}/>\n                <Route exact path='/web/disease/add'\n                       render={() => <TestFormLayout title=\"Add Disease\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/disease'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_DISEASE, SINGLE_DISEASE} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddDisease from \"./AddDisease\";\nimport {Link} from \"react-router-dom\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disease: [],\n            loading:true\n        };\n        this.loadDiseases = this.loadDiseases.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadDiseases();\n    }\n\n    loadDiseases =(page=1)=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current == 1){\n                    return{\n                        disease:[...data.results],\n                        next:data.next,\n                        loading:false,\n                    }\n                }\n                return {\n                    disease:[...prevState.disease, ...data.results],\n                    next:data.next,\n                    loading:false,\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams={\n            page:page,\n        };\n\n        getAPI(BLOG_DISEASE, successFn, errorFn, apiParams);\n    };\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadDiseases();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_DISEASE, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Disease Name',\n            dataIndex: 'disease_name',\n            key: 'disease_name'\n        }, {\n            title: 'Disease Type',\n            dataIndex: 'disease_type',\n            key: 'disease_type'\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/disease/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/disease/add'\n                   render={(route) => <AddDisease{...this.state} {...route} loadData={this.loadDiseases}/>}/>\n            <Route exact path='/web/disease/edit/:id'\n                   render={(route) => <AddDisease{...this.state} {...route} loadData={this.loadDiseases}/>}/>\n            <Card title=\"Disease\"\n                  extra={<Link to={\"/web/disease/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} pagination={false} columns={columns} dataSource={this.state.disease}/>\n\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadDiseases(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    DATE_PICKER, SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_EVENTS,\n    SINGLE_EVENTS,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_EVENTS, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Event Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Event Date\",\n            key: \"event_date\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.event_date : null,\n            type: DATE_PICKER,\n\n        }, {\n            label: \"Event Image\",\n            key: \"event_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.event_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"URL\",\n            key: \"domain\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        }];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.props.loadData();\n                    that.changeRedirect();\n                    if (that.props.history){\n                        that.props.history.replace('/web/event');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_EVENTS, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        let formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                if (that.props.history){\n                    that.props.history.replace('/web/event');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_EVENTS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/event/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Event\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/event'}/>)}/>\n                <Route exact path='/web/event/add'\n                       render={() => <TestFormLayout defaultValues={defaultValues} title=\"Add Event\"\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/event'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_EVENTS, BLOG_POST,SINGLE_EVENTS} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddEvent from \"./AddEvent\";\nimport moment from \"moment\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData =(page =1 )=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current == 1){\n                    return{\n                        events: [...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    events: [...prevState.events, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams ={\n            page:page,\n        };\n        getAPI(BLOG_EVENTS, successFn, errorFn, apiParams);\n    };\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_EVENTS, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Event Title',\n            dataIndex: 'title',\n            key: 'event_title'\n        }, {\n            title: 'Date',\n            dataIndex:'event_date',\n            key: 'event_date',\n            render: (item) => {\n                return moment(item).format('LLL');\n            }\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/event/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/event/add'\n                   render={(route) => <AddEvent {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Route exact path='/web/event/edit/:id'\n                   render={(route) => <AddEvent {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Card title=\"Events\"\n                  extra={<Link to={\"/web/event/add\"}><Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} pagination={false} dataSource={this.state.events} columns={columns}/>\n\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_PAGE_SEO,\n    SINGLE_PAGE_SEO,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddSEO extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_PAGE_SEO, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Page\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD,\n            disabled: false //true\n        }, {\n            label: \"Page Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        },];\n\n\n        let editformProp;\n        let that = this;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                        that.setState({\n                            redirect: true\n                        });\n                        that.props.loadData();\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_PAGE_SEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_PAGE_SEO,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/pageseo/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit SEO\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/pageseo'}/>)}/>\n                <Route exact path='/web/pageseo/add'\n                       render={() => <TestFormLayout title=\"Add SEO\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/pageseo'}/>}\n        </Row>\n\n    }\n}\n","import { Card, Table, Button, Icon,Divider,Popconfirm } from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_PAGE_SEO, SINGLE_PAGE_SEO} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddSEO from \"./AddSEO\";\nimport {Link} from \"react-router-dom\";\nimport AddPost from \"../blog/AddPost\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class SEOList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pageSEO:null,\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData =(page=1)=>{\n        let that =this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current ==1){\n                    return{\n                        pageSEO:[...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    pageSEO:[...prevState.pageSEO,...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams ={\n            page:page\n        };\n        getAPI(BLOG_PAGE_SEO ,successFn, errorFn, apiParams);\n    };\n\n    render(){\n        let that = this;\n        let columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name'\n        },{\n            title: 'Title',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title: 'SEO Descriptions',\n            dataIndex: 'meta_description',\n            key: 'meta_description'\n        },{\n            title: 'SEO Keywords',\n            dataIndex: 'keywords',\n            key: 'keywords'\n        },\n            {\n                title:'Actions',\n                render:(item)=>{\n                    return <div>\n                        <Link to={\"/web/pageseo/edit/\"+item.id}>Edit</Link>\n                    </div>\n                }\n            }];\n        return<div><Switch>\n                <Route exact path='/web/pageseo/add'\n                   render={(route) => <AddSEO {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route exact path='/web/pageseo/edit/:id'\n                   render={(route) => <AddSEO loadData={this.loadData} {...this.state} {...route}/>}/>\n\n                <Card title=\"Pages SEO\"   extra={<Link to={\"/web/pageseo/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                    <Table loading={this.state.loading} dataSource={this.state.pageSEO} columns={columns} pagination={false}/>\n\n                    <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                              loading={this.state.loading}\n                                              hidden={!this.state.next}/>\n\n                </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    SUCCESS_MSG_TYPE,\n    NUMBER_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_SLIDER, SINGLE_SLIDER\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddSliderImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_SLIDER, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Page Title \",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Slider Image \",\n            key: \"silder_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.silder_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD\n        },];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_SLIDER, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_SLIDER,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/slider-image/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Slider Image\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/silder-image'}/>)}/>\n                <Route exact path='/web/slider-image/add'\n                       render={() => <TestFormLayout title=\"Add Slider Image\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/slider-image'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, makeFileURL} from \"../../../utils/common\";\nimport {BLOG_PAGE_SEO, BLOG_POST, BLOG_SLIDER, SINGLE_LANDING_PAGE_VIDEO, SINGLE_SLIDER} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddSliderImage from \"./AddSliderImage\";\nimport {Link} from \"react-router-dom\";\n\nexport default class SliderImageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slider: [],\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this)\n    }\n\n    componentWillMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            console.log(data);\n            that.setState({\n                slider: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_SLIDER, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_SLIDER, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        return <div><Switch>\n            <Route exact path='/web/slider-image/add'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/slider-image/edit/:id'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Slider Image\" extra={<Link to={\"/web/slider-image/add\"}>\n                <Button type=\"primary\">\n                    <Icon type=\"plus\"/> Add\n                </Button>\n            </Link>}>\n                <List loading={this.state.loading} itemLayout=\"vertical\" dataSource={this.state.slider} renderItem={item =>\n                    <List.Item key={item.id}\n                               extra={<img src={makeFileURL(item.silder_image)}\n                                           alt={item.title}\n                                           style={{\n                                               maxWidth: '100%',\n                                               width: '400px'\n                                           }}\n                               />}\n                               actions={[<Link to={'/web/slider-image/edit/' + item.id}>Edit</Link>,\n                                   <Popconfirm title=\"Are you sure delete this item?\"\n                                               onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                       <a>Delete</a>\n                                   </Popconfirm>]}>\n                        <List.Item.Meta\n                            avatar={<Avatar>{item.rank}</Avatar>}\n                            title={item.title}\n                            description={item.name}\n                        />\n                    </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_FACILITY, SINGLE_FACILITY,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddFacility extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_FACILITY, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.props.loadData();\n                    that.changeRedirect();\n                    if (that.props.history){\n                        that.props.history.replace('/web/facilities');\n                    };\n\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_FACILITY, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                if (that.props.history){\n                    that.props.history.replace('/web/facilities');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_FACILITY,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/facilities/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Facility\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/facilities'}/>)}/>\n                <Route exact path='/web/facilities/add'\n                       render={() => <TestFormLayout title=\"Add Facility\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/facilities'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {\n    BLOG_FACILITY, SINGLE_FACILITY,\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddFacility from \"./AddFacility\";\nimport {Link} from \"react-router-dom\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class FacilityList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            facility: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData =(page =1) => {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current == 1){\n                    return{\n                        facility: [...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    facility: [...prevState.facility, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams ={\n            page:page,\n        };\n        getAPI(BLOG_FACILITY, successFn, errorFn, apiParams);\n    };\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_FACILITY, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name'\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/facilities/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/facilities/add'\n                   render={(route) => <AddFacility loadData={this.loadData} {...this.state} {...route}/>}/>\n            <Route exact path='/web/facilities/edit/:id'\n                   render={(route) => <AddFacility loadData={this.loadData} {...this.state} {...route}/>}/>\n            <Card title=\"Facilities\" extra={<Link to={\"/web/facilities/add\"}> <Button type=\"primary\"><Icon\n                type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} pagination={false} dataSource={this.state.facility} columns={columns}/>\n\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_VIDEO,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddLandingPageVideo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_LANDING_PAGE_VIDEO, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Video link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n        }];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.props.loadData();\n                    that.changeRedirect();\n                    if (that.props.history){\n                        that.props.history.replace('/web/landingpagevideo');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_LANDING_PAGE_VIDEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                if (that.props.history){\n                    that.props.history.replace('/web/landingpagevideo');\n                };\n            }\n            ,\n            errorFn: function () {\n\n            },\n            action: LANDING_PAGE_VIDEO,\n            method: \"post\",\n        }\n        let defaultValues = [{\"is_active\": true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/landingpagevideo/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Video\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/landingpagevideo'}/>)}/>\n                <Route exact path='/web/landingpagevideo/add'\n                       render={() => <TestFormLayout title=\"Add video\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/landingpagevideo'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Divider, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    BLOG_VIDEOS,\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_CONTENT,\n    SINGLE_LANDING_PAGE_VIDEO\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddLandingPageVideo from \"./AddLandingPageVideo\";\nimport YouTube from 'react-youtube';\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class LandingPageVideoList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            videos:[],\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData =(page=1)=>{\n        let that =this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current ==1){\n                    return{\n                        videos:[...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    videos:[...prevState.videos, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n          that.setState({\n            loading:false\n          })\n\n        };\n        let apiParams ={\n            page:page,\n        }\n        getAPI(LANDING_PAGE_VIDEO ,successFn, errorFn, apiParams);\n    };\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_LANDING_PAGE_VIDEO, [record.id]), reqData, successFn, errorFn)\n    }\n    render(){\n        let that = this;\n        const opts = {\n            height: '200',\n            width: '300',\n            // playerVars: { // https://developers.google.com/youtube/player_parameters\n            //     autoplay: 1\n            // }\n        };\n        return<div><Switch>\n            <Route exact path='/web/landingpagevideo/add'\n                   render={(route) => <AddLandingPageVideo {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Route exact path='/web/landingpagevideo/edit/:id'\n                   render={(route) => <AddLandingPageVideo {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Card title=\"Landing Page Video\" extra={<Link to={\"/web/landingpagevideo/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <List loading={this.state.loading} dataSource={this.state.videos}\n                      itemLayout=\"vertical\"\n                      renderItem={item => <List.Item key={item.id}\n\n                                                     actions={[<Link to={\"/web/landingpagevideo/edit/\"+item.id}>Edit</Link>,\n                                                         <Popconfirm title=\"Are you sure delete this item?\"\n                                                                     onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                                             <a>Delete</a>\n                                                         </Popconfirm>]}\n                                                     extra={<YouTube videoId={item.link}\n                                                                     opts={opts}/>}>\n                          <List.Item.Meta\n                              avatar={<Avatar style={{ backgroundColor: '#87d068' }} >{item.rank}</Avatar>}\n                              title={item.name}\n                          />\n                      </List.Item>}/>\n                <Divider/>\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    LANDING_PAGE_CONTENT,\n    SINGLE_LANDING_PAGE_CONTENT,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddLandingPageContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_LANDING_PAGE_CONTENT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Image\",\n            key: \"image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/landingpagecontent');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_LANDING_PAGE_CONTENT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/landingpagecontent');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: LANDING_PAGE_CONTENT,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/landingpagecontent/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Content\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/landingpagecontent'}/>)}/>\n                <Route exact path='/web/landingpagecontent/add'\n                       render={() => <TestFormLayout title=\"Add Content\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/landingpagecontent'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Divider, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI, makeFileURL} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    BLOG_VIDEOS,\n    LANDING_PAGE_CONTENT,\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_CONTENT\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddLandingPageContent from \"./AddLandingPageContent\";\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class LandingPageContentList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pageContent:[],\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData =(page =1)=>{\n        let that =this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current == 1 ){\n                    return{\n                        pageContent:[...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    pageContent:[...prevState.pageContent, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n          that.setState({\n            loading:false\n          })\n\n        };\n        let  apiParams ={\n            page:page\n        };\n        getAPI(LANDING_PAGE_CONTENT ,successFn, errorFn, apiParams);\n    };\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_LANDING_PAGE_CONTENT, [record.id]), reqData, successFn, errorFn)\n    }\n    render(){\n        let that = this;\n        return<div><Switch>\n            <Route exact path='/web/landingpagecontent/add'\n                   render={(route) => <AddLandingPageContent {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/landingpagecontent/edit/:id'\n                   render={(route) => <AddLandingPageContent {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Landing Page Content\" extra={<Link to={\"/web/landingpagecontent/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <List loading={this.state.loading} dataSource={this.state.pageContent}\n                      itemLayout=\"vertical\"\n                      renderItem={item => <List.Item key={item.id}\n\n                                                     actions={[<Link to={\"/web/landingpagecontent/edit/\"+item.id}>Edit</Link>,\n                                                         <Popconfirm title=\"Are you sure delete this item?\"\n                                                                     onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                                             <a>Delete</a>\n                                                         </Popconfirm>]}\n                                                     extra={<img src={makeFileURL(item.image)} style={{width:'300px'}}/>}>\n                          <List.Item.Meta\n                              avatar={<Avatar style={{ backgroundColor: '#87d068' }} >{item.rank}</Avatar>}\n                              title={item.title}\n                              description={<div dangerouslySetInnerHTML={{ __html: item.content }}/>}\n\n\n                          />\n                      </List.Item>}/>\n                <Divider/>\n                <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                          loading={this.state.loading}\n                                          hidden={!this.state.next}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import React from \"react\";\nimport {Divider, Icon, Menu, Layout} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nconst Sider = Layout.Sider;\nexport default class WebAdminSider extends React.Component {\n    render() {\n        return <Sider trigger={null}\n                      collapsible\n                      style={{overflow: 'auto', minHeight: '100vh', background: '#fff'}}>\n            <Menu mode=\"inline\" defaultSelectedKeys={['web-1']}>\n                <Menu.ItemGroup key=\"g1\" title={<Divider style={{margin: '0px'}}>Web Settings</Divider>}>\n                    <Menu.Item key=\"web-1\">\n                        <Link to=\"/web/videos\">\n                            <Icon type=\"youtube\"/>\n                            <span className=\"nav-text\">Videos</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-2\">\n                        <Link to=\"/web/disease\">\n                            <Icon type=\"bell\"/>\n                            <span className=\"nav-text\">Disease</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-3\">\n                        <Link to=\"/web/blog\">\n                            <Icon type=\"pic-right\"/>\n                            <span className=\"nav-text\">Blogs</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-4\">\n                        <Link to=\"/web/event\">\n                            <Icon type=\"notification\"/>\n                            <span className=\"nav-text\">Events</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-5\">\n                        <Link to=\"/web/contact\">\n                            <Icon type=\"phone\"/>\n                            <span className=\"nav-text\">Contacts</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-6\">\n                        <Link to=\"/web/pageseo\">\n                            <Icon type=\"search\"/>\n                            <span className=\"nav-text\">Page SEO</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-7\">\n                        <Link to=\"/web/slider-image\">\n                            <Icon type=\"picture\"/>\n                            <span className=\"nav-text\">Slider Image</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-8\">\n                        <Link to=\"/web/facilities\">\n                            <Icon type=\"gift\"/>\n                            <span className=\"nav-text\">Facilities</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-9\">\n                        <Link to=\"/web/landingpagevideo\">\n                            <Icon type=\"video-camera\"/>\n                            <span className=\"nav-text\">Landing Page Videos</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-10\">\n                        <Link to=\"/web/landingpagecontent\">\n                            <Icon type=\"read\"/>\n                            <span className=\"nav-text\">Landing Page Content</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-11\">\n                        <Link to=\"/web/manageproduct\">\n                            <Icon type=\"hdd\"/>\n                            <span className=\"nav-text\">Manage Product</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-12\">\n                        <Link to=\"/web/managetherapy\">\n                            <Icon type=\"box-plot\"/>\n                            <span className=\"nav-text\">Manage Therapy</span>\n                        </Link>\n                    </Menu.Item>\n                </Menu.ItemGroup>\n            </Menu>\n        </Sider>\n    }\n}\n","import React from \"react\";\nimport {Avatar, Card, Form, Row} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD, NUMBER_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, makeFileURL} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_PRODUCT, MANAGE_SINGLE_PRODUCT} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddManageProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editProductData: this.props.editProductData ? this.props.editProductData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editProductData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editProductData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(MANAGE_SINGLE_PRODUCT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Product Name\",\n            key: \"title\",\n            required : true,\n            initialValue: this.state.editProductData ? this.state.editProductData.title : null,\n            type: INPUT_FIELD\n        },{\n            label: \"Product Price\",\n            key: \"price\",\n            required : true,\n            initialValue: this.state.editProductData ? this.state.editProductData.price : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Product Image\",\n            key: \"image\",\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n            initialValue:this.state.editProductData ? this.state.editProductData.image : null,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editProductData? this.state.editProductData.content : null,\n            required : true,\n            type: QUILL_TEXT_FIELD,\n\n        },];\n\n        let editformProp;\n        if (this.state.editProductData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                        that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/manageproduct');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(MANAGE_SINGLE_PRODUCT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/manageproduct');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: MANAGE_PRODUCT,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/manageproduct/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Product\"\n                                changeRedirect={this.changeRedirect} formProp={editformProp}\n                                    fields={fields}/> : <Redirect to={'web/manageproduct'}/>)}/>\n                <Route exact path='/web/manageproduct/add'\n                       render={() => <TestFormLayout title=\"Add Product\" defaultValues={defaultValues}\n                                changeRedirect={this.changeRedirect} formProp={formProp}\n                                    fields={fields}/>}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/manageproduct'}/>}\n        </Row>\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Icon, Table, Divider, Popconfirm, Avatar} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, makeFileURL, patchAPI} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_PRODUCT, MANAGE_SINGLE_PRODUCT} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Redirect, Link} from \"react-router-dom\";\nimport AddManageProduct from \"./AddManageProduct\"\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class ManageProductList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\tproductData:null,\n            loading:true\n\t\t};\n\t\tthis.loadData = this.loadData.bind(this);\n\t\tthis.deleteObject = this.deleteObject.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        this.loadData();\n    }\n\n    loadData =(page=1)=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (data.current ==1 ){\n                    return{\n                        productData: [...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    productData: [...prevState.productData,...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams ={\n            page:page,\n        };\n        getAPI(MANAGE_PRODUCT, successFn, errorFn, apiParams);\n    };\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(MANAGE_SINGLE_PRODUCT, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Name',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title:'image',\n            key:'image',\n            dataIndex:'image',\n            render:(item,record)=><Avatar src={makeFileURL(record.image)}/>\n        },{\n            title: 'Description',\n            render: (item)=>{\n                return <div dangerouslySetInnerHTML={{ __html: item.content }}/>\n            }\n        },{\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/manageproduct/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div>\n        \t<Switch>\n        \t\t<Route exact path='/web/manageproduct/edit/:id'\n        \t\t\t\trender={(route) => <AddManageProduct loadData={this.loadData} {...this.state} {...route}/>}/>\n\t        \t<Route exact path='/web/manageproduct/add'\n\t                   render={(route) => <AddManageProduct loadData={this.loadData} {...this.state} {...route}/>}/>\n\t            <Card title=\"Products\" extra={<Link to={\"/web/manageproduct/add\"}> <Button type=\"primary\"><Icon\n\t                type=\"plus\"/> Add</Button></Link>}>\n\t                <Table loading={this.state.loading} pagination={false} dataSource={this.state.productData} columns={columns}/>\n\n                    <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                              loading={this.state.loading}\n                                              hidden={!this.state.next}/>\n\t            </Card>\n\t        </Switch>\n        </div>\n    }\n}\n","import React from \"react\";\nimport {Card, Form, Row} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_THERAPY, MANAGE_SINGLE_THERAPY} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddManageTherapy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTherapyData: this.props.editTherapyData ? this.props.editTherapyData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editTherapyData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editTherapyData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(MANAGE_SINGLE_THERAPY, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Therapy Name\",\n            key: \"title\",\n            required: true,\n            initialValue: this.state.editTherapyData ? this.state.editTherapyData.title : null,\n            type: INPUT_FIELD\n        },{\n            label: \"Therapy Image\",\n            key: \"image\",\n            required: true,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            // required: true,\n            initialValue: this.state.editTherapyData ? this.state.editTherapyData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let editformProp;\n        if (this.state.editTherapyData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    if (that.props.history){\n                        that.props.history.replace('/web/managetherapy');\n                    };\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(MANAGE_SINGLE_THERAPY, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                if (that.props.history){\n                    that.props.history.replace('/web/managetherapy');\n                };\n            },\n            errorFn: function () {\n\n            },\n            action: MANAGE_THERAPY,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/managetherapy/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Therapy\"\n                                changeRedirect={this.changeRedirect} formProp={editformProp}\n                                    fields={fields}/> : <Redirect to={'web/managetherapy'}/>)}/>\n                <Route exact path='/web/managetherapy/add'\n                       render={() => <TestFormLayout title=\"Add Therapy\" defaultValues={defaultValues}\n                                changeRedirect={this.changeRedirect} formProp={formProp}\n                                    fields={fields}/>}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/managetherapy'}/>}\n        </Row>\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Icon, Table, Divider, Popconfirm} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_THERAPY, MANAGE_SINGLE_THERAPY} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Redirect, Link} from \"react-router-dom\";\nimport AddManageTherapy from \"./AddManageTherapy\"\nimport InfiniteFeedLoaderButton from \"../../common/InfiniteFeedLoaderButton\";\n\nexport default class ManageTherapyList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\ttherapyData:null,\n            loading:true\n\t\t};\n\t\tthis.loadData = this.loadData.bind(this);\n\t\tthis.deleteObject = this.deleteObject.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        this.loadData();\n    }\n\n    loadData =(page=1)=> {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevSate) {\n                if (data.current ==1 ){\n                    return{\n                        therapyData: [...data.results],\n                        next:data.next,\n                        loading:false\n                    }\n                }\n                return {\n                    therapyData: [...prevSate.therapyData, ...data.results],\n                    next:data.next,\n                    loading:false\n                }\n            })\n        };\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        };\n        let apiParams ={\n            page:page\n        }\n\n        getAPI(MANAGE_THERAPY, successFn, errorFn, apiParams);\n\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(MANAGE_SINGLE_THERAPY, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let columns = [{\n            title: 'Name',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title: 'Description',\n            render: (item)=> {\n                return <div dangerouslySetInnerHTML={{ __html: item.content }}/>\n            }\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/managetherapy/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div>\n        \t<Switch>\n\t        \t<Route exact path='/web/managetherapy/edit/:id'\n        \t\t\t\trender={(route) => <AddManageTherapy loadData={this.loadData} {...this.state} {...route}/>}/>\n\t        \t<Route exact path='/web/managetherapy/add'\n\t                   render={(route) => <AddManageTherapy loadData={this.loadData} {...this.state} {...route}/>}/>\n\t            <Card title=\"Therapy\" extra={<Link to={\"/web/managetherapy/add\"}> <Button type=\"primary\"><Icon\n\t                type=\"plus\"/> Add</Button></Link>}>\n\t                <Table loading={this.state.loading} dataSource={this.state.therapyData} pagination={false} columns={columns}/>\n                    <InfiniteFeedLoaderButton loaderFunction={()=>this.loadData(this.state.next)}\n                                              loading={this.state.loading}\n                                              hidden={!this.state.next}/>\n\t            </Card>\n\t        </Switch>\n        </div>\n    }\n}\n","import React from \"react\";\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport VideosList from './videos/VideosList';\nimport BlogList from \"./blog/BlogList\";\nimport ContactsList from \"./contacts/ContactsList\";\nimport DiseaseList from \"./disease/DiseaseList\";\nimport EventsList from \"./events/EventsList\";\nimport SEOList from \"./seo/SEOList\";\nimport SliderImageList from \"./sliderImages/SliderImageList\";\nimport FacilityList from \"./facilities/FacilityList\";\nimport LandingPageVideoList from \"./landingPageVideos/LandingPageVideoList\";\nimport LandingPageContentList from \"./landingPageContent/LandingPageContentList\";\nimport WebAdminSider from \"./WebAdminSider\";\nimport ManageProductList from \"./manageProduct/ManageProductList\";\nimport ManageTherapyList from \"./manageTherapy/ManageTherapyList\";\nimport Error404 from \"../common/errors/Error404\";\n\nconst Content = Layout.Content;\n\n\nexport default class WebAdminHome extends React.Component {\n\n    render() {\n        return <Content className=\"main-container\" style={{\n            // margin: '24px 16px',\n            // padding: 24,\n            minHeight: 280,\n            // marginLeft: '200px'\n        }}>\n            <Layout>\n                <WebAdminSider {...this.props}/>\n                <Content style={{\n                    margin: '24px 16px',\n                    // padding: 24,\n                    minHeight: 280,\n                    // marginLeft: '200px'\n                }}>\n                    <Switch>\n                        <Route path=\"/web/videos\" render={(route) => <VideosList/>}/>\n                        <Route path=\"/web/blog\" render={(route) => <BlogList/>}/>\n                        <Route path=\"/web/contact\" render={(route) => <ContactsList/>}/>\n                        <Route path=\"/web/disease\" render={(route) => <DiseaseList/>}/>\n                        <Route path=\"/web/event\" render={(route) => <EventsList/>}/>\n                        <Route path=\"/web/pageseo\" render={(route) => <SEOList/>}/>\n                        <Route path=\"/web/slider-image\" render={(route) => <SliderImageList/>}/>\n                        <Route path=\"/web/facilities\" render={(route) => <FacilityList/>}/>\n                        <Route path=\"/web/landingpagevideo\" render={(route) => <LandingPageVideoList/>}/>\n                        <Route path=\"/web/landingpagecontent\" render={(route) => <LandingPageContentList/>}/>\n                        <Route path=\"/web/manageproduct\" render={(route) => <ManageProductList/>}/>\n                        <Route path=\"/web/managetherapy\" render={(route) => <ManageTherapyList/>}/>\n                        <Route component={Error404}/>\n                    </Switch>\n                </Content>\n            </Layout>\n        </Content>\n    }\n}\n","import {Button, Row, Spin} from \"antd\";\nimport React from \"react\";\n\nexport default class InfiniteFeedLoaderButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            extraLoadingLabel: '',\n        }\n    }\n\n    startLoading = () => {\n        if (this.props.loaderFunction) {\n            this.props.loaderFunction();\n            this.startMakingExtraLabels();\n        }\n    }\n    startMakingExtraLabels = () => {\n        let that = this;\n        this.setState(function (prevState) {\n            if (prevState.extraLoadingLabel.length > 2) {\n                return {extraLoadingLabel: ''}\n            } else {\n                return {extraLoadingLabel: prevState.extraLoadingLabel + '.'}\n            }\n        }, function () {\n            if (that.props.loading)\n                setTimeout(function () {\n                    that.startMakingExtraLabels();\n                }, 500)\n        })\n    }\n\n    render() {\n        if (this.props.loading) {\n            return <Spin spinning={this.props.loading}>\n                <Row style={{minHeight: 200}}/>\n            </Spin>\n        }\n        if (this.props.hidden) {\n            return <Row>\n                <div style={{textAlign: 'center', margin: '15px 0px'}}>\n                    <small>No More Data Found</small>\n                </div>\n            </Row>\n        }\n        return <Row>\n            <div style={{textAlign: 'center', margin: '15px 0px'}}>\n                <Button type={'primary'} onClick={this.startLoading} loading={this.props.loading}>\n                    {this.props.loading ? 'Loading' + this.state.extraLoadingLabel : 'Load More'}\n                </Button>\n            </div>\n        </Row>\n    }\n}\n"],"sourceRoot":""}