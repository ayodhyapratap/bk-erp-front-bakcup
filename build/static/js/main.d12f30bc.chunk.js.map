{"version":3,"sources":["app/utils/auth.js","app/constants/dataKeys.js","App.js","serviceWorker.js","index.js","app/utils/common.js","app/constants/messages.js","app/constants/api.js","app/config/connect.js","app/constants/formLabels.js","app.config.js"],"names":["loggedInUser","role","lockr","get","ROLE","token","AUTH_TOKEN","setCurrentPractice","practice","set","CURRENT_PRACTICE","loggedInUserPractices","PRACTICE","loggedInactivePractice","currentPractice","length","console","log","id","logInUser","data","successFn","errorFn","reqData","email","PASSWORD","password","axios","post","makeURL","LOGIN_URL","then","response","user","practice_list","catch","error","handleErrorResponse","logInUserWithOtp","phone_no","otp","OTP_LOGIN_URL","loadUserDetails","callBackFn","callBackErrorFn","getAPI","USER_DATA","displayMessage","ERROR_MSG_TYPE","logOutUser","rm","GROUP","getAuthToken","sendLoginOTP","url","phone","SUCCESS_MSG_TYPE","WARNING_MSG_TYPE","INFO_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","MULTI_SELECT_FIELD","CHECKBOX_FIELD","SINGLE_CHECKBOX_FIELD","NUMBER_FIELD","DATE_PICKER","DATE_TIME_PICKER","TEXT_FIELD","TIME_PICKER","COLOR_PICKER","QUILL_TEXT_FIELD","SINGLE_IMAGE_UPLOAD_FIELD","MULTI_IMAGE_UPLOAD_FIELD","COUNTRY_FIELD","STATE_FIELD","CITY_FIELD","PASSWORD_FIELD","EMAIL_FIELD","SMS_FIELD","DIVIDER_FIELD","MAIL_TEMPLATE_FIELD","LABEL_FIELD","DOCTORS_ROLE","CALENDAR_SETTINGS","NEW_PATIENTS","DAILY_NEW_PATIENTS","EXPIRING_MEMBERSHIP","PATIENTS_FIRST_APPOINTMENT","MONTHLY_NEW_PATIENTS","NEW_MEMBERSHIP","ACTIVE_PATIENTS","FOLLOW_UP","MEDICINE","ALL_APPOINTMENT","APPOINTMENT_FOR_EACH_CATEGORY","CANCELLATION_NUMBERS","AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE","AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE","DAILY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_DOCTOR","MONTHLY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_PATIENT_GROUP","APPOINTMENT_FOR_PATIENT_CONVERSION","TOTAL_AMOUNT_DUE","AGEING_AMOUNT_DUE","AMOUNT_DUE_PER_DOCTOR","ALL_TREATMENTS","DAILY_TREATMENT_COUNT","TREATMENTS_FOR_EACH_DOCTOR","MONTHLY_TREATMENT_COUNT","TREATMENT_FOR_EACH_CATEGORY","ALL","ALL_EXPENSES","DAILY_EXPENSES","MONTHLY_EXPENSES","EXPENSES_EACH_TYPE","ALL_INVENTORY","DAILY_INVENTORY","MONTHLY_INVENTORY","TOP_INVENTORY","DAILY_BOOKING_COUNT","MONTHLY_BOOKING_COUNT","MEDICINE_USAGE_COUNT","BED_BOOKING_PACKAGE_COUNT","MARGIN_TYPE_WISE","WALLET_BALANCE_AMOUNT","AGENT_TREE_VIEW","ALL_PAYMENTS","PAYMENT_RECEIVED_PATIENT_GROUP","PATIENTS_UNSETTLED_ADVANCE","MODE_OF_PAYMENTS","PAYMENT_RECEIVED_PER_MONTH","PAYMENT_RECEIVED_PER_DAY","PAYMENT_RECEIVED_PER_DOCTOR","PAYMENT_SETTLEMENT","ALL_INVOICE","DAILY_INCOME","MONTHLY_INCOME","TAXED_INCOME","DOCTOR_EACH_INCOME","PROCEDURE_INCOME","PRODUCT_INCOME","PATIENT_GROUPS_INCOME","ALL_INVOICE_RETURN","DAILY_WISE_RETURN_INVOICE","MONTHLY_WISE_RETURN_INVOICE","RETURN_INVOICE_FOR_EACH_TAX","RETURN_INVOICE_FOR_EACH_PROCEDURE","RETURN_INVOICE_FOR_EACH_PRODUCT","RETURN_INVOICE_FOR_EACH_DOCTOR","RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS","RELATION","CHOOSE","OTP_DELAY_TIME","ASCENDING_ORDER","Auth","loadable","AppBase","App","props","ReactGA","initialize","state","redirect","production","window","location","hostname","login","bind","logout","withOtp","that","this","setState","pageview","pathname","search","message","banner","closable","exact","path","render","route","Component","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","URL","API_URL","makeFileURL","IMAGE_BASE_URL","putAPI","headerConfig","method","headers","Authorization","detail","postAPI","postOuterAPI","patchAPI","params","info","status","ERROR_MESSAGE_404","ERROR_MESSAGE_500","interpolate","theString","argumentArray","regex","reduce","p","c","replace","type","msg","success","warning","startLoadingMessage","loading","stopLoadingMessage","msgFn","finishMsgType","finishMsg","validatePassword","rule","value","callback","PASS_LEN","toLowerCase","PASS_UPPER","toUpperCase","PASS_LOWER","PASS_DIGIT","test","PASS_SPEC","saveCommonSettings","getCommonSettings","savedStates","removeEmpty","obj","Object","keys","forEach","k","undefined","fildFileExtension","name","split","SUCCESS","REQUIRED_FIELD_MESSAGE","MAIL_SEND_MSG","MAIL_SEND_ERROR_MSG","BACKEND_BASE_URL","CONFIG_API","FILE_UPLOAD_API","FILE_UPLOAD_BASE64","LOGIN_SEND_OTP","LOGIN_RESEND_OTP","RESET_PASSWORD","CHANGE_PASSWORD","RESET_PASSWORD_MAIL","PRACTICESTAFF","ENABLE_STAFF_IN_PRACTICE","DOCTOR_VISIT_TIMING_API","USER_PRACTICE_PERMISSIONS","SET_USER_PERMISSION","SET_SPECIFIC_USER_PERMISSION","ALL_PRACTICE","ALL_PERMISSIONS","UPDATE_BULK_PERMISSIONS","PRACTICE_DELETE","TAXES","OFFERS","PAYMENT_MODES","PROCEDURE_CATEGORY","PROMO_CODE","SINGLE_PROMO_CODE","SEND_PROMO_CODE_SMS","CHECK_PROMO_CODE","EMR_DIAGNOSES","EMR_COMPLAINTS","EMR_OBSERVATIONS","EMR_TREATMENTNOTES","EMR_INVESTIGATIONS","EMR_FILETAGS","EMR_VITAL_SIGNS","EMR_MEDICATION","APPOINTMENT_CATEGORIES","ALL_PRACTICE_STAFF","SINGLE_PRACTICE_STAFF_API","PATIENTS_LIST","PATIENT_PROFILE","MERGE_PATIENTS","STAFF_ROLES","MEDICAL_HISTORY","PATIENT_FILES","PATIENT_LEDGER","EXPENSE_TYPE","DRUG_CATALOG","SINGLE_DRUG_CATALOG","LABTEST_API","COMMUNICATONS_API","EMAIL_COMMUNICATONS_API","CALENDER_SETTINGS","ALL_APPOINTMENT_API","APPOINTMENT_API","APPOINTMENT_PERPRACTICE_API","PATIENT_GROUPS","VITAL_SIGNS_API","PRESCRIPTIONS_API","BLOCK_CALENDAR","APPOINTMENT_SCHEDULE","PATIENT_NOTES","LABPANEL_API","PATIENT_TIMELINE_API","PATIENT_TIMELINE_PDF","ALL_MEDICAL_CERITICATE_API","MEDICAL_CERTIFICATE_API","MEDICAL_MEMBERSHIP_CANCEL_API","PATIENTS_MEMBERSHIP_API","PATIENT_MAILEDFILES","TREATMENTPLANS_API","TREATMENTPLANS_MARK_COMPLETE_API","INVOICES_API","SINGLE_INVOICES_API","INVOICE_PDF_API","CREATE_OR_EDIT_INVOICES","SINGLE_INVOICE_API","PATIENT_CLINIC_NOTES_API","PATIENT_PAYMENTS_API","SINGLE_PAYMENT_API","BULK_PAYMENT_API","PRACTICE_PRINT_SETTING_API","SAVE_ALL_PRINT_SETTINGS","PATIENT_COMMUNICATION_HISTORY_API","PRESCRIPTION_TEMPLATE","UNPAID_PRESCRIPTIONS","CANCELINVOICE_GENERATE_OTP","CANCELINVOICE_VERIFY_OTP","CANCELINVOICE_RESENT_OTP","INVOICE_RETURN_API","SINGLE_RETURN_API","RETURN_INVOICE_PDF_API","ADVANCED_SEARCH_PATIENT","SEARCH_PATIENT","PATIENT_PENDING_AMOUNT","AVAILABLE_ADVANCE","EXTRA_DATA","COUNTRY","STATE","CITY","SOURCE","PATIENTS_REPORTS","ACTIVE_PATIENTS_REPORTS","MEMBERSHIP_REPORTS","FIRST_APPOINTMENT_REPORTS","PATIENT_APPOINTMENTS_REPORTS","EMR_REPORTS","PRODUCTS_API","INVENTORY_RETAILS_REPORT","EXPENSE_PAYMENT_MODE_API","EXPENSE_REPORT_API","INVENTORY_REPORT_API","MLM_Reports","MLM_Agent_Wallet","PAYMENT_REPORTS","INCOME_REPORTS","RETURN_INVOICE_REPORTS","AMOUNT_DUE_REPORTS","APPOINTMENT_REPORTS","DRUG_TYPE_API","DRUG_UNIT_API","PRINT_PREVIEW_RENDER","MEMBERSHIP_API","BED_BOOKING_REPORTS","ACCEPT_PAYMENT","MAILING_USERS_LIST","BLOG_POST","SINGLE_POST","BLOG_VIDEOS","SINGLE_VIDEO","BLOG_DISEASE","SINGLE_DISEASE","BLOG_EVENTS","SINGLE_EVENTS","BLOG_CONTACTUS","SINGLE_CONTACT","BLOG_PAGE_SEO","SINGLE_PAGE_SEO","BLOG_SLIDER","SINGLE_SLIDER","BLOG_FACILITY","SINGLE_FACILITY","LANDING_PAGE_CONTENT","SINGLE_LANDING_PAGE_CONTENT","LANDING_PAGE_VIDEO","SINGLE_LANDING_PAGE_VIDEO","MANAGE_PRODUCT","MANAGE_SINGLE_PRODUCT","MANAGE_THERAPY","MANAGE_SINGLE_THERAPY","EXPENSES_API","SINGLE_EXPENSES_API","VENDOR_API","SINGLE_VENDOR_API","ACTIVITY_API","LAB_API","SINGLE_LAB_API","MANUFACTURER_API","SINGLE_MANUFACTURER_API","INVENTORY_ITEM_API","SINGLE_INVENTORY_ITEM_API","STOCK_ENTRY","BULK_STOCK_ENTRY","SUPPLIER_API","SEARCH_THROUGH_QR","BILL_SUPPLIER","INVENTORY_ITEM_EXPORT","PRODUCT_MARGIN","SINGLE_PRODUCT_MARGIN","GENERATE_MLM_COMMISSON","AGENT_ROLES","AGENT_WALLET","WALLET_LEDGER","WALLET_LEDGER_SUM","MY_AGENTS","PRESCRIPTION_PDF","VITAL_SIGN_PDF","CLINIC_NOTES_PDF","TREATMENTPLANS_PDF","MEDICAL_CERTIFICATE_PDF","PAYMENT_PDF","ROOM_TYPE","BED_PACKAGES","MEDICINE_PACKAGES","BOOK_SEAT","CHECK_SEAT_AVAILABILITY","DISEASE_LIST","AGENT_TREE","SUGGESTIONS","CREDENTIALS","SAVE_CREDENTIALS","MEETING_USER","MEETINGS","MEETING_DETAILS","SINGLE_MEETING","PATIENT_CALL_NOTES","CONFIG","backendBaseUrl","imageBaseUrl","RAZORPAY_KEY","EMAIL","OLD_PASSWORD","NEW_PASSWORD","prodDomain","crashHandling","slack","sendOnProduction","sendOnDevelopment","webHookUrl"],"mappings":"mlBAQaA,EAAe,WACxB,IAAIC,EAAOC,IAAMC,IAAIC,MACjBC,EAAQH,IAAMC,IAAIG,KACtB,OAAIL,GAAQI,EACDJ,EAEJ,MAMEM,EAAqB,SAAUC,GACxCN,IAAMO,IAAIC,IAAkBF,IAWnBG,EAAwB,WACjC,IAAIV,EAAOC,IAAMC,IAAIC,MACjBC,EAAQH,IAAMC,IAAIG,KAClBE,EAAWN,IAAMC,IAAIS,MACzB,OAAIX,GAAQI,GAASG,EACVA,EAEJ,IAEEK,EAAyB,SAAzBA,IACT,IAAIC,EAAkBZ,IAAMC,IAAIO,KAChC,GAAII,GAAmBA,GAAmB,GACtC,OAAOA,EAEP,IAAIN,EAAWN,IAAMC,IAAIS,MACzB,OAAIJ,GAAYA,EAASO,QACrBC,QAAQC,IAAIT,GACZD,EAAmBC,EAAS,GAAGA,SAASU,IACjCL,KAGR,MAiCEM,EAAY,SAAUC,EAAMC,EAAWC,GAChDN,QAAQC,IAAI,WACZ,IAAIM,EAAO,aACP,OAAUH,EAAKI,OACdC,KAAWL,EAAKM,UAErBC,IAAMC,KAAKC,YAAQC,MAAYP,GAASQ,MAAK,SAAUC,GAEnD,IAAIZ,EAAOY,EAASZ,KACpBlB,IAAMO,IAAIL,KAAMgB,EAAKa,MACrB/B,IAAMO,IAAIH,IAAYc,EAAKf,OAC3BH,IAAMO,IAAIG,KAAUQ,EAAKc,eAEzBb,OACDc,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,YAAoBD,GACpBd,QAGKgB,EAAmB,SAAUlB,EAAMC,EAAWC,GACvD,IAAIC,EAAU,CACV,SAAYH,EAAKmB,SACjB,IAAOnB,EAAKoB,KAEhBb,IAAMC,KAAKC,YAAQY,MAAgBlB,GAASQ,MAAK,SAAUC,GAEvD,IAAIZ,EAAOY,EAASZ,KACpBlB,IAAMO,IAAIL,KAAMgB,EAAKa,MACrB/B,IAAMO,IAAIH,IAAYc,EAAKf,OAC3BH,IAAMO,IAAIG,KAAUQ,EAAKc,eAEzBb,OACDc,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,YAAoBD,GACpBd,QAGKoB,EAAkB,SAAUlC,EAAUmC,EAAWC,GAW1DC,YAAOC,MAVS,SAAU1B,GACtBlB,IAAMO,IAAIL,KAAMgB,EAAKa,MAErB/B,IAAMO,IAAIG,KAAUQ,EAAKc,eACzBS,EAAWvB,MAED,WACV2B,YAAeC,IAAgB,kFAC/BJ,MAEkC,CAACpC,SAAUA,KASxCyC,EAAa,SAAU5B,EAAWC,GAC3CpB,IAAMgD,GAAG9C,MACTF,IAAMgD,GAAG5C,KACTJ,IAAMgD,GAAGtC,MACTV,IAAMgD,GAAGC,KACT9B,KAES+B,EAAe,WAExB,OADYlD,IAAMC,IAAIG,MAab+C,EAAe,SAASC,EAAIC,EAAMlC,EAAUC,GACrD,IAAIC,EAAU,CACV,SAAYgC,GAEhB5B,IAAMC,KAAK0B,EAAK/B,GAASQ,MAAK,SAAUC,GAEpCX,EAAUW,MACXG,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,YAAoBD,GACpBd,S,+BChLR,ioHAIO,IAAMkC,EAAmB,UACnBC,EAAmB,UACnBT,EAAiB,QACjBU,EAAgB,OAMhBjC,EAAW,WAOXnB,EAAa,QACbF,EAAO,OACP+C,EAAQ,QACRvC,EAAW,WAOX+C,EAAc,QACdC,EAAc,QACdC,EAAe,SACfC,EAAqB,cACrBC,EAAiB,WACjBC,EAAwB,iBACxBC,EAAe,SACfC,EAAc,aACdC,EAAmB,iBACnBC,EAAa,YACbC,EAAc,aACdC,EAAe,cACfC,EAAmB,iBACnBC,EAA4B,oBAC5BC,EAA2B,mBAC3BC,EAAgB,UAChBC,EAAc,QACdC,EAAa,OACbC,EAAiB,WACjBC,EAAc,QACdC,EAAY,YACZC,EAAgB,gBAChBC,EAAsB,aACtBC,EAAa,cAIbC,EAAe,IACfC,EAAoB,oBAKpBC,EAAa,WACbC,EAAmB,QACnBC,EAAoB,UACpBC,EAA2B,2BAC3BC,EAAqB,UACrBC,EAAe,MACfC,EAAgB,SAChBC,EAAU,YACVC,EAAS,WAGTC,EAAgB,MAChBC,EAA8B,WAC9BC,EAAqB,iBACrBC,EAAsC,aACtCC,EAAwC,eAExCC,EAAwB,QACxBC,EAA4B,SAC5BC,GAA0B,UAC1BC,GAAmC,iBACnCC,GAAmC,oBAInCC,GAAiB,MACjBC,GAAkB,SAClBC,GAAsB,SAMtBC,GAAe,MACfC,GAAsB,QACtBC,GAA2B,SAC3BC,GAAwB,UACxBC,GAA4B,WAG5BC,GAAI,MAGJC,GAAc,MACdC,GAAgB,QAChBC,GAAkB,UAClBC,GAAmB,eAGnBC,GAAc,MACdC,GAAgB,QAChBC,GAAkB,UAClBC,GAAc,MAGdC,GAAoB,QACpBC,GAAsB,UACtBC,GAAqB,iBACrBC,GAA0B,oBAG1BC,GAAiB,SAEjBC,GAAsB,SACtBC,GAAgB,YAGhBC,GAAa,MACbC,GAA+B,iBAC/BC,GAA2B,oBAC3BC,GAAiB,mBAEjBC,GAA2B,UAC3BC,GAAyB,QACzBC,GAA4B,SAQ5BC,GAAmB,kBAQnBC,GAAY,MACZC,GAAa,QACbC,GAAe,UACfC,GAAa,MACbC,GAAmB,SACnBC,GAAiB,YACjBC,GAAe,UACfC,GAAsB,iBAGtBC,GAAmB,MACnBC,GAA0B,QAC1BC,GAA4B,UAC5BC,GAA4B,MAC5BC,GAAkC,YAClCC,GAAgC,UAChCC,GAA+B,SAC/BC,GAAuC,iBAEvCC,GAAS,WAETC,GAAQ,SAERC,GAAe,IAEfC,GAAgB,O,u0BC1K7B,IAAMC,EAAOC,aAAS,kBAAM,iEACtBC,EAAUD,aAAS,kBAAM,gEAqEhBE,E,YAlEX,WAAYC,GAAQ,IAAD,6BACf,4CAAMA,IACNC,IAAQC,WAAW,kBAEnB,EAAKC,MAAQ,CACTlI,KAAMjC,cACNoK,UAAU,EACVC,WAAyC,wBAA5BC,OAAOC,SAASC,UAIjC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBAZC,E,mEAebtJ,GAAuB,IAAjBwJ,IAAgB,yDACpBC,EAAOC,KACPzJ,EAAY,WACZ,IAAIY,EAAOjC,cACX6K,EAAKE,SAAS,CACV9I,KAAMA,KAGVX,EAAU,aAGVsJ,EACAzJ,YAAUC,EAAMC,EAAWC,GAE3BgB,YAAiB,EAAD,GAAKlB,GAAOC,EAAWC,K,+BAI3C,IAAIuJ,EAAOC,KAQX7H,aAPgB,WACZ4H,EAAKE,SAAS,CACV9I,KAAM,UAGA,iB,+BAKR,IAAD,OAEL,OADAgI,IAAQe,SAASV,OAAOC,SAASU,SAAWX,OAAOC,SAASW,QACrD,2BACFJ,KAAKX,MAAME,WAAa,KAAO,2BAC5B,uBACIc,QAAQ,2CACRC,QAAM,EACNC,UAAQ,KAGhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAAC5B,EAAD,iBAAU,EAAKO,MAAf,CAAsBM,MAAO,EAAKA,YAC3E,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,yBACXC,OAAQ,SAACC,GAAD,OAAW,kBAAC7B,EAAD,iBAAU6B,EAAW,EAAKtB,MAA1B,CAAiCM,MAAO,EAAKA,YACvE,kBAAC,IAAD,CAAOe,OAAQ,SAACC,GAAD,OAAY,EAAKtB,MAAMlI,KAClC,kBAAC6H,EAAD,iBAAa,EAAKK,MAAWsB,EAAW,EAAKzB,MAA7C,CAAoDW,OAAQ,EAAKA,UACjE,kBAACf,EAAD,iBAAU,EAAKO,MAAf,CAAsBM,MAAO,EAAKA,kB,GA7DpCiB,aCCEC,QACW,cAA7BrB,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASoB,MACvB,2D,0BCRNC,IAASL,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAiBM,SAASC,eAAe,SDuH3D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnK,MAAK,SAAAoK,GACjCA,EAAaC,iB,qvCE7GZ,IAAMvK,EAAU,SAAUwK,GAC7B,OAAOC,IAAU,IAAMD,GAEdE,EAAc,SAAUF,GACjC,OAAOG,IAAiB,IAAMH,GAErBI,EAAS,SAAUJ,EAAKjL,EAAMC,EAAWC,GAA6B,IAApBoL,EAAmB,uDAAJ,GAE1E/K,IAAM,CACFgL,OAAQ,MACRrJ,IAAKzB,EAAQwK,GACbjL,KAAMA,EACNwL,QAAQ,EAAD,CACHC,cAAe,SAAWzJ,eACvBsJ,KAER3K,MAAK,SAAUC,GAEd,IAAIZ,EAAOY,EAASZ,KACpBC,EAAUD,GACNA,EAAK0L,QACL/J,EAAeS,KAAkBpC,EAAK0L,WAC3C3K,OAAM,SAAUC,GACfC,EAAoBD,GACpBd,EAAQF,OAIH2L,EAAU,SAAUV,EAAKjL,EAAMC,EAAWC,GAA6B,IAApBoL,EAAmB,uDAAJ,GAE3E/K,IAAM,CACFgL,OAAQ,OACRrJ,IAAKzB,EAAQwK,GACbjL,KAAMA,EACNwL,QAAQ,EAAD,CACHC,cAAe,SAAWzJ,eACvBsJ,KAER3K,MAAK,SAAUC,GAGd,IAAIZ,EAAOY,EAASZ,KACpBC,EAAUD,GACNA,EAAK0L,QACL/J,EAAeS,KAAkBpC,EAAK0L,WAC3C3K,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,EAAoBD,GACpBd,QAGK0L,EAAe,SAAUX,EAAKjL,EAAMC,EAAWC,GAA6B,IAApBoL,EAAmB,uDAAJ,GAEhF/K,IAAM,CACFgL,OAAQ,OACRrJ,IAAK+I,EACLjL,KAAMA,EACNwL,QAAQ,EAAD,GACAF,KAER3K,MAAK,SAAUC,GAEd,IAAIZ,EAAOY,EAASZ,KACpBC,EAAUD,GACNA,EAAK0L,QACL/J,EAAeS,KAAkBpC,EAAK0L,WAC3C3K,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,EAAoBD,GACpBd,QAGK2L,EAAW,SAAUZ,EAAKjL,EAAMC,EAAWC,GAA6B,IAApBoL,EAAmB,uDAAJ,GAE5E/K,IAAM,CACFgL,OAAQ,QACRrJ,IAAKzB,EAAQwK,GACbjL,KAAMA,EACNwL,QAAQ,EAAD,CACHC,cAAe,SAAWzJ,eACvBsJ,KAER3K,MAAK,SAAUC,GAEd,IAAIZ,EAAOY,EAASZ,KACpBC,EAAUD,MACXe,OAAM,SAAUC,GACfpB,QAAQC,IAAImB,GACZC,EAAoBD,GACpBd,QAGKuB,EAAS,SAAUwJ,EAAKhL,EAAWC,GAAuB,IAAd4L,EAAa,uDAAJ,GAE9DvL,IAAM,CACFgL,OAAQ,MACRrJ,IAAKzB,EAAQwK,GACbO,QAAS,CACLC,cAAe,SAAWzJ,eAE9B8J,OAAQA,IACTnL,MAAK,SAAUC,GAEd,IAAIZ,EAAOY,EAASZ,KACpBC,EAAUD,GACNA,EAAK0L,QACL/J,EAAeS,KAAkBpC,EAAK0L,WAC3C3K,OAAM,SAAUC,GAEfC,EAAoBD,GACpBd,QAwBKe,EAAsB,SAAUD,GACzC,IAAIJ,EAAWI,EAAMJ,SACrB,GAAIA,EAAU,CACVhB,QAAQmM,KAAK,0BAA2BnL,GACxC,IAAIoL,EAASpL,EAASoL,OACR,KAAVA,EACIpL,EAASZ,KAAK0L,QACd,IAAQ1K,MAAMJ,EAASZ,KAAK0L,QAEf,KAAVM,EACHpL,EAASZ,KAAK0L,QACd,IAAQ1K,MAAMJ,EAASZ,KAAK0L,QAEf,KAAVM,EACHpL,EAASZ,KAAK0L,QACd,IAAQ1K,MAAMJ,EAASZ,KAAK0L,QAEf,KAAVM,EACHpL,EAASZ,KAAK0L,OACd,IAAQ1K,MAAMJ,EAASZ,KAAK0L,QAE5B,IAAQ1K,MAAMiL,KAED,KAAVD,GACP,IAAQhL,MAAMkL,UAIlBtM,QAAQoB,MAAMJ,IAITuL,EAAc,SAAUC,EAAWC,GAC5C,IAAIC,EAAQ,KAIZ,OAAOD,EAAcE,QAHZ,SAAUC,EAAGC,GAClB,OAAOD,EAAEE,QAAQJ,EAAOG,KAEIL,IAIvBzK,EAAiB,SAAUgL,EAAMC,GACtCD,GAAQvK,KACR,IAAQyK,QAAQD,GACXD,GAAQrK,IACb,IAAQyJ,KAAKa,GACRD,GAAQtK,KACb,IAAQyK,QAAQF,GACXD,GAAQ/K,KACb,IAAQZ,MAAM4L,IAGTG,EAAsB,SAAUH,GACzC,OAAO,IAAQI,QAAQJ,EAAK,IAEnBK,EAAqB,SAAUC,EAAOC,EAAeC,GAI9D,OAHAF,IACIC,GACAxL,EAAewL,EAAeC,IAC3B,GAqBEC,EAAmB,SAAUC,EAAMC,EAAOC,GAEnD,OAAID,EAAM5N,OAAS,GAAqB,GAAhB4N,EAAM5N,OAClB8N,IAERF,GAASA,EAAMG,eAAiC,GAAhBH,EAAM5N,OAC9BgO,IACDJ,GAASA,EAAMK,eAAiC,GAAhBL,EAAM5N,OACrCkO,IACDN,EAAMzD,OAAO,SAAW,GAAqB,GAAhByD,EAAM5N,OAClCmO,IACkC,GAAjC,kBAAkBC,KAAKR,IAAkC,GAAhBA,EAAM5N,OAEhDqO,SAFL,GAOEC,EAAqB,SAAUtB,EAAMY,GAC9CzO,MAAU6N,EAAMY,IAEPW,EAAoB,SAAUvB,GACvC,IAAIwB,EAAcrP,MAAU6N,GAC5B,OAAIwB,IAEG,GAGEC,EAAc,SAAdA,EAAeC,GAKxB,OAJAC,OAAOC,KAAKF,GAAKG,SAAQ,SAAAC,GAAC,OACrBJ,EAAII,IAAwB,kBAAXJ,EAAII,IAAoBL,EAAYC,EAAII,MACxDJ,EAAII,SAAiBC,IAAXL,EAAII,WAA4BJ,EAAII,MAE7CJ,GAGEM,EAAoB,SAAUxE,GACvC,IAAIA,EACA,OAAO,KACX,IAAIyE,EAAOzE,EAAK0E,MAAM,KACtB,OAAID,EAAKjP,OACEiP,EAAKA,EAAKjP,OAAS,GAEvB,O,gCCvRX,sXAAO,IAGMmP,EAAU,UAuBVC,EAAyB,0BAGzB7C,EAAoB,wBACpBD,EAAoB,YAGpBwB,EAAW,8CACXE,EAAa,gDACbE,EAAa,gDACbC,EAAa,wCACbE,EAAa,iDAEbgB,EAAe,yBACfC,EAAqB,iC,gCCxClC,k6NAKa/D,EAAUgE,IAAmB,WAC7BC,EAAa,gBACbC,EAAkB,aAClBC,EAAqB,gCACrBC,EAAiB,wBACjBC,EAAmB,0BAEnBC,EAAiB,wBACjBC,EAAkB,wBAClBC,EAAsB,0BACtBhP,EAAY,eACZW,EAAgB,0BAChBK,EAAY,oBACZiO,EAAgB,6BAChBC,EAA2B,0BAC3BC,EAA0B,4BAC1BC,EAA4B,yCAC5BC,EAAsB,oBACtBC,EAA+B,uBAC/BC,EAAe,WACfC,EAAkB,yBAClBC,EAA0B,yBAC1B3Q,EAAW,cACX4Q,EAAkB,4BAClBC,EAAQ,oBACRC,EAAS,qBACTC,EAAgB,4BAChBC,EAAqB,iCACrBC,EAAY,aACZC,EAAmB,gBACnBC,EAAqB,+BACrBC,EAAkB,yBAElBC,EAAgB,wBAChBC,EAAiB,yBACjBC,EAAmB,2BACnBC,EAAqB,6BACrBC,EAAqB,6BACrBC,EAAe,uBACfC,EAAkB,yBAClBC,EAAiB,yBACjBC,EAAyB,mCACzBC,EAAqB,SACrBC,EAA4B,YAE5BC,EAAgB,YAChBC,EAAkB,eAClBC,EAAiB,2BACjBC,EAAc,eACdC,EAAkB,0BAElBC,EAAgB,kBAEhBC,EAAiB,sBACjBC,EAAe,2BACfC,GAAe,0BACfC,GAAsB,gCACtBC,GAAc,sBACdC,GAAoB,6BACpBC,GAA0B,mCAC1BC,GAAoB,gCACpBC,GAAsB,eACtBC,GAAkB,kBAClBC,GAA8B,qBAE9BC,GAAiB,wBACjBC,GAAkB,uBAClBC,GAAoB,0BAEpBC,GAAiB,8BACjBC,GAAuB,2BAEvBC,GAAgB,iDAEhBC,GAAe,uBACfC,GAAuB,sCACvBC,GAAuB,4BACvBC,GAA6B,oDAC7BC,GAA0B,uDAC1BC,GAAgC,8BAChCC,GAA0B,kCAC1BC,GAAsB,kBAEtBC,GAAqB,sBACrBC,GAAmC,iDAEnCC,GAAe,WACfC,GAAsB,cACtBC,GAAkB,qBAClBC,GAA0B,WAC1BC,GAAqB,cACrBC,GAA2B,yBAC3BC,GAAuB,WACvBC,GAAqB,cACrBC,GAAmB,yBACnBC,GAA6B,0DAC7BC,GAA0B,iCAC1BC,GAAoC,mCACpCC,GAAwB,oCACxBC,GAAuB,uCACvBC,GAA6B,yBAC7BC,GAA2B,uBAC3BC,GAA2B,uBAC3BC,GAAqB,UACrBC,GAAoB,aACpBC,GAAyB,oBAEzBC,GAA0B,2BAC1BC,GAAiB,2BACjBC,GAAyB,8BACzBC,GAAoB,+BAEpBC,GAAa,sBACbC,GAAU,oBACVC,GAAQ,kBACRC,GAAO,iBACPC,GAAS,mBAMTC,GAAmB,wBACnBC,GAA0B,2BAC1BC,GAAqB,6BACrBC,GAA4B,6BAG5BC,GAA+B,iCAG/BC,GAAc,wBAGdC,GAAe,2BACfC,GAA2B,kCAG3BC,GAA2B,WAC3BC,GAAqB,kBAErBC,GAAuB,kCAGvBC,GAAc,sBACdC,GAAmB,gCAEnBC,GAAkB,2BAGlBC,GAAiB,0BAIjBC,GAAwB,yBAGxBC,GAAoB,sBAEpBC,GAAsB,iCAMtBC,GAAgB,uBAChBC,GAAgB,uBAChBC,GAAuB,kBACvBC,GAAiB,sBACjBC,GAAsB,8BACtBC,GAAiB,mBAEjBC,GAAqB,uBAKrBC,GAAY,QACZC,GAAc,WACdC,GAAc,SACdC,GAAe,YACfC,GAAe,WACfC,GAAiB,cACjBC,GAAc,UACdC,GAAgB,aAChBC,GAAiB,aACjBC,GAAiB,gBACjBC,GAAgB,YAChBC,GAAkB,eAClBC,GAAc,UACdC,GAAgB,aAChBC,GAAgB,YAChBC,GAAkB,eAClBC,GAAuB,wBACvBC,GAA8B,2BAC9BC,GAAqB,sBACrBC,GAA4B,yBAC5BC,GAAiB,mBACjBC,GAAwB,sBACxBC,GAAiB,mBACjBC,GAAwB,sBAOxBC,GAAe,YACfC,GAAsB,eACtBC,GAAa,qBACbC,GAAoB,aACpBC,GAAe,YAEfC,GAAU,OACVC,GAAiB,UACjBC,GAAmB,gBACnBC,GAA0B,mBAC1BC,GAAqB,kBACrBC,GAA4B,qBAK5BC,GAAc,kBACdC,GAAmB,oBACnBC,GAAe,gCACfC,GAAoB,4BACpBC,GAAgB,+BAChBC,GAAwB,wBAOxBC,GAAiB,kBACjBC,GAAwB,qBACxBC,GAAyB,+BACzBC,GAAc,+BACdC,GAAe,6BACfC,GAAgB,4BAChBC,GAAoB,uCACpBC,GAAY,yBAMZC,GAAmB,oCACnBC,GAAiB,iCACjBC,GAAmB,mCACnBC,GAAqB,qCACrBC,GAA0B,0CAC1BC,GAAc,sBAKdC,GAAY,yBACZC,GAAe,2BACfC,GAAoB,gCACpBC,GAAY,2BACZC,GAA0B,gCAC1BC,GAAe,6BAIfC,GAAa,4BAGbC,GAAc,eAGdC,GAAc,6CAEdC,GAAmB,uBAGnBC,GAAe,sBACfC,GAAW,YACXC,GAAkB,mBAClBC,GAAiB,eAMjBC,GAAqB,2C,gCCpSlC,kHAKalM,EAAmBmM,IAAOC,eAC1BlQ,EAAiBiQ,IAAOE,aACxBC,EAAe,2B,gCCN5B,0KAAO,IAAMC,EAAQ,QACRpb,EAAW,WAGXf,EAAmB,mBACnBoc,EAAe,eACfC,EAAe,gB,gCCSbN,IAZA,CACXC,eAAgB,GAChBC,aAAe,SACfK,WAAa,CAAC,uBAAuB,yBACrCC,cAAgB,CACZC,MAAQ,CACJC,kBAAmB,EACnBC,mBAAoB,EACpBC,WAAa,qF","file":"static/js/main.d12f30bc.chunk.js","sourcesContent":["import lockr from 'lockr';\nimport axios from 'axios';\nimport {AUTH_TOKEN, PASSWORD, ROLE, EMAIL, PRACTICE, GROUP, ERROR_MSG_TYPE} from \"../constants/dataKeys\";\nimport {displayMessage, getAPI, handleErrorResponse, makeURL} from \"./common\";\nimport {LOGIN_URL, OTP_LOGIN_URL, USER_DATA} from \"../constants/api\";\nimport {CURRENT_PRACTICE} from \"../constants/formLabels\";\n\n\nexport const loggedInUser = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    if (role && token) {\n        return role;\n    }\n    return null;\n};\n\nexport const currentPractice = function () {\n\n}\nexport const setCurrentPractice = function (practice) {\n    lockr.set(CURRENT_PRACTICE, practice);\n}\nexport const loggedInUserGroup = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let group = lockr.get(GROUP);\n    if (role && token && group) {\n        return group;\n    }\n    return null;\n};\nexport const loggedInUserPractices = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let practice = lockr.get(PRACTICE);\n    if (role && token && practice) {\n        return practice;\n    }\n    return [];\n};\nexport const loggedInactivePractice = function () {\n    let currentPractice = lockr.get(CURRENT_PRACTICE);\n    if (currentPractice && currentPractice != {}) {\n        return currentPractice;\n    } else {\n        let practice = lockr.get(PRACTICE);\n        if (practice && practice.length) {\n            console.log(practice);\n            setCurrentPractice(practice[0].practice.id);\n            return loggedInactivePractice();\n        }\n    }\n    return null\n}\n\n\nexport const loggedInPermissions = function () {\n    let groups = lockr.get(GROUP);\n    let permissions = {};\n    if (groups)\n        groups.forEach(function (group) {\n            group.permissions.forEach(function (permission) {\n                permissions[permission.codename] = true\n            });\n        })\n    return permissions;\n}\n\nexport const getAllPermissions = function () {\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.ADMIN && lockrPermissions.ADMIN.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\n\nexport const getSuperUserPermissions = function () {\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.SUPERUSER && lockrPermissions.SUPERUSER.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\nexport const logInUser = function (data, successFn, errorFn) {\n    console.log(\"workign\");\n    var reqData = {\n        'mobile': data.email,\n        [PASSWORD]: data.password\n    };\n    axios.post(makeURL(LOGIN_URL), reqData).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        lockr.set(ROLE, data.user);\n        lockr.set(AUTH_TOKEN, data.token);\n        lockr.set(PRACTICE, data.practice_list);\n        // lockr.set('PERMISSIONS', data.permissions_list);\n        successFn()\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n};\nexport const logInUserWithOtp = function (data, successFn, errorFn) {\n    var reqData = {\n        'phone_no': data.phone_no,\n        'otp': data.otp\n    };\n    axios.post(makeURL(OTP_LOGIN_URL), reqData).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        lockr.set(ROLE, data.user);\n        lockr.set(AUTH_TOKEN, data.token);\n        lockr.set(PRACTICE, data.practice_list);\n        // lockr.set('PERMISSIONS', data.permissions_list);\n        successFn()\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n};\nexport const loadUserDetails = function (practice, callBackFn,callBackErrorFn) {\n    let successFn = function (data) {\n        lockr.set(ROLE, data.user);\n        // lockr.set(PRACTICE, data.practice_permissions);\n        lockr.set(PRACTICE, data.practice_list);\n        callBackFn(data);\n    }\n    let errorFn = function () {\n        displayMessage(ERROR_MSG_TYPE, \"Permission Loading Failed. Kindly refresh or check your internet connection...\");\n        callBackErrorFn();\n    }\n    getAPI(USER_DATA, successFn, errorFn, {practice: practice});\n}\nexport const saveAuthToken = function (response, successFn) {\n    let data = response;\n    lockr.set(ROLE, data.id);\n    lockr.set(AUTH_TOKEN, data.token);\n    successFn()\n}\n\nexport const logOutUser = function (successFn, errorFn) {\n    lockr.rm(ROLE);\n    lockr.rm(AUTH_TOKEN);\n    lockr.rm(PRACTICE);\n    lockr.rm(GROUP);\n    successFn();\n};\nexport const getAuthToken = function () {\n    let token = lockr.get(AUTH_TOKEN);\n    return token;\n};\n\nexport const checkRole = function (role) {\n    let roles = lockr.get(ROLE);\n    if (roles[role] === undefined || roles[role] === '' || !roles[role]) {\n        return false;\n    }\n    return roles[role];\n}\n\n\nexport const sendLoginOTP = function(url,phone,successFn,errorFn){\n    let reqData = {\n        \"phone_no\": phone\n    };\n    axios.post(url, reqData).then(function (response) {\n        // console.log(response);\n        successFn(response)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n}\n","/***\n * Status Constants\n * */\n\nexport const SUCCESS_MSG_TYPE = 'success';\nexport const WARNING_MSG_TYPE = 'warning';\nexport const ERROR_MSG_TYPE = 'error';\nexport const INFO_MSG_TYPE = 'info';\n\n/***\n * Data Keys Constants\n * */\nexport const USERNAME = 'username';\nexport const PASSWORD = 'password';\nexport const PHONE = 'mob';\nexport const EMAIL = 'email';\nexport const DOB = 'dob';\nexport const GENDER = 'gender';\nexport const FIRST_NAME = 'firstname';\nexport const LAST_NAME = 'lastname';\nexport const AUTH_TOKEN = 'token';\nexport const ROLE = 'role';\nexport const GROUP = 'group';\nexport const PRACTICE = 'practice';\nexport const MEDICAL_HISTORY_KEY = 'Medical History';\nexport const PATIENT_GROUP_KEY = 'Patient Group';\n\n/***\n * Form Data Types\n * */\nexport const INPUT_FIELD = 'input';\nexport const RADIO_FIELD = 'radio';\nexport const SELECT_FIELD = 'select';\nexport const MULTI_SELECT_FIELD = 'multiselect';\nexport const CHECKBOX_FIELD = 'checkbox';\nexport const SINGLE_CHECKBOX_FIELD = 'singlecheckbox';\nexport const NUMBER_FIELD = 'number';\nexport const DATE_PICKER = 'datepicker';\nexport const DATE_TIME_PICKER = 'datetimepicker';\nexport const TEXT_FIELD = 'textfield';\nexport const TIME_PICKER = 'timepicker';\nexport const COLOR_PICKER = 'colorpicker';\nexport const QUILL_TEXT_FIELD = 'quilltextfield';\nexport const SINGLE_IMAGE_UPLOAD_FIELD = 'singleimageupload';\nexport const MULTI_IMAGE_UPLOAD_FIELD = 'multiimageupload';\nexport const COUNTRY_FIELD = 'country';\nexport const STATE_FIELD = 'state';\nexport const CITY_FIELD = 'city';\nexport const PASSWORD_FIELD = 'password';\nexport const EMAIL_FIELD = 'email';\nexport const SMS_FIELD = 'sms_field';\nexport const DIVIDER_FIELD = 'divider_field';\nexport const MAIL_TEMPLATE_FIELD = 'mail_field';\nexport const LABEL_FIELD ='label_field';\n/***\n *Role\n **/\nexport const DOCTORS_ROLE = '3';\nexport const CALENDAR_SETTINGS = 'calendar_settings';\n\n/***Reports***/\n\n/*Patient Reports*/\nexport const NEW_PATIENTS='DETAILED';\nexport const DAILY_NEW_PATIENTS='DAILY';\nexport const EXPIRING_MEMBERSHIP='EXPIRED';\nexport const PATIENTS_FIRST_APPOINTMENT='patientsfirstappointment';\nexport const MONTHLY_NEW_PATIENTS='MONTHLY';\nexport const NEW_MEMBERSHIP='NEW';\nexport const ACTIVE_PATIENTS='ACTIVE';\nexport const FOLLOW_UP='FOLLOW_UP';\nexport const MEDICINE='MEDICINE';\n\n/*Appointment Reports*/\nexport const ALL_APPOINTMENT='ALL';\nexport const APPOINTMENT_FOR_EACH_CATEGORY='CATEGORY' ;\nexport const CANCELLATION_NUMBERS='CANCEL_NUMBERS';\nexport const AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE='DAILY_WAIT';\nexport const AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE='MONTHLY_WAIT';\nexport const REASONS_FOR_CANCELLATIONS='reasonsforcancellations';\nexport const DAILY_APPOINTMENT_COUNT='DAILY';\nexport const APPOINTMENT_FOR_EACH_DOCTOR='DOCTOR';\nexport const MONTHLY_APPOINTMENT_COUNT='MONTHLY';\nexport const APPOINTMENT_FOR_EACH_PATIENT_GROUP='PATIENT_GROUPS';\nexport const APPOINTMENT_FOR_PATIENT_CONVERSION='CONVERSION_REPORT';\n\n\n/*Amount Due Reports*/\nexport const TOTAL_AMOUNT_DUE='ALL';\nexport const AGEING_AMOUNT_DUE='AGEING';\nexport const AMOUNT_DUE_PER_DOCTOR='DOCTOR';\n// export const AMOUNT_DUE_PER_PROCEDURE='c';\n// export const UNSETTLED_INVOICE='d';\n\n\n/*EMR Reports*/\nexport const ALL_TREATMENTS='ALL';\nexport const DAILY_TREATMENT_COUNT='DAILY';\nexport const TREATMENTS_FOR_EACH_DOCTOR='DOCTOR';\nexport const MONTHLY_TREATMENT_COUNT='MONTHLY';\nexport const TREATMENT_FOR_EACH_CATEGORY='CATEGORY';\n\n/*Inventory Retails*/\nexport const ALL='ALL';\n\n/*Expenses Reports*/\nexport const ALL_EXPENSES ='ALL';\nexport const DAILY_EXPENSES ='DAILY';\nexport const MONTHLY_EXPENSES ='MONTHLY';\nexport const EXPENSES_EACH_TYPE='EXPENSE_TYPE';\n\n/*Inventory Reports*/\nexport const ALL_INVENTORY='ALL';\nexport const DAILY_INVENTORY='DAILY';\nexport const MONTHLY_INVENTORY='MONTHLY';\nexport const TOP_INVENTORY='TOP';\n\n/** Bed Booking Reports**/\nexport const DAILY_BOOKING_COUNT='DAILY';\nexport const MONTHLY_BOOKING_COUNT='MONTHLY';\nexport const MEDICINE_USAGE_COUNT='MEDICINE_COUNT';\nexport const BED_BOOKING_PACKAGE_COUNT='BED_PACKAGE_COUNT';\n\n/** MLM Reports***/\nexport const MARGIN_TYPE_WISE='MARGIN';\nexport const PRODUCT_WISE='PRODUCT';\nexport const WALLET_BALANCE_AMOUNT='WALLET';\nexport const AGENT_TREE_VIEW='AGENTVIEW'\n\n/** Payments Reports**/\nexport const ALL_PAYMENTS='ALL';\nexport const PAYMENT_RECEIVED_PATIENT_GROUP='PATIENT_GROUPS';\nexport const PATIENTS_UNSETTLED_ADVANCE='UNSETTLED_ADVANCE';\nexport const MODE_OF_PAYMENTS='MODE_OF_PAYMENTS';\n\nexport const PAYMENT_RECEIVED_PER_MONTH='MONTHLY';\nexport const PAYMENT_RECEIVED_PER_DAY='DAILY';\nexport const PAYMENT_RECEIVED_PER_DOCTOR='DOCTOR';\n\nexport const CREDIT_NOTES='NOTES';\nexport const CREDIT_AMOUNT_PER_DOCTOR='DOCTOR';\n// export const PATIENTS_UNSETTLED_ADVANCE='ADVANCE';\n\n// export const PAYMENT_RECEIVED_PER_DOCTOR='DOCTOR';\n\nexport const PAYMENT_SETTLEMENT='SETTLED_ADVANCE';\n\n\nexport const PAYMENT_SETTLEMENT_PER_DOCTOR='SETTLEMENT_DOCTOR';\nexport const PAYMENT_REFUND='REFUND';\n\n\n/*Income Reports*/\nexport const ALL_INVOICE='ALL';\nexport const DAILY_INCOME=\"DAILY\";\nexport const MONTHLY_INCOME=\"MONTHLY\";\nexport const TAXED_INCOME=\"TAX\";\nexport const DOCTOR_EACH_INCOME='DOCTOR';\nexport const PROCEDURE_INCOME=\"PROCEDURE\";\nexport const PRODUCT_INCOME=\"PRODUCT\";\nexport const PATIENT_GROUPS_INCOME=\"PATIENT_GROUPS\";\n\n/*Invoice Return Reports */\nexport const ALL_INVOICE_RETURN='ALL';\nexport const DAILY_WISE_RETURN_INVOICE='DAILY';\nexport const MONTHLY_WISE_RETURN_INVOICE='MONTHLY';\nexport const RETURN_INVOICE_FOR_EACH_TAX='TAX';\nexport const RETURN_INVOICE_FOR_EACH_PROCEDURE='PROCEDURE';\nexport const RETURN_INVOICE_FOR_EACH_PRODUCT='PRODUCT';\nexport const RETURN_INVOICE_FOR_EACH_DOCTOR='DOCTOR';\nexport const RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS='PATIENT_GROUPS';\n\nexport const RELATION='Relation';\n\nexport const CHOOSE ='Choose';\n\nexport const OTP_DELAY_TIME=130;\nexport const MAX_PARTICIPANT=100;\nexport const ASCENDING_ORDER='asc';\n","import React, {Component} from 'react';\nimport loadable from '@loadable/component';\nimport {Affix, Alert, Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {loggedInUser, logInUser, logInUserWithOtp, logOutUser,} from \"./app/utils/auth\";\nimport ReactGA from 'react-ga';\n\n\nconst Auth = loadable(() => import('./app/components/auth/Auth'));\nconst AppBase = loadable(() => import('./app/components/core/AppBase'));\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        ReactGA.initialize('UA-143616458-1');\n\n        this.state = {\n            user: loggedInUser(),\n            redirect: false,\n            production: (window.location.hostname == \"clinic.bkarogyam.com\")\n        };\n        // momenttz.tz.setDefault('Asia/Kolkata');\n\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    login(data, withOtp = true) {\n        let that = this;\n        let successFn = function () {\n            let user = loggedInUser();\n            that.setState({\n                user: user,\n            });\n        };\n        let errorFn = function () {\n\n        };\n        if (withOtp)\n            logInUser(data, successFn, errorFn);\n        else\n            logInUserWithOtp({...data}, successFn, errorFn)\n    }\n\n    logout() {\n        let that = this;\n        let successFn = function () {\n            that.setState({\n                user: null\n            });\n        };\n        let errorFn = function () {\n        };\n        logOutUser(successFn, errorFn);\n    }\n\n    render() {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        return <Layout>\n            {this.state.production ? null : <Affix>\n                <Alert\n                    message=\"Demo Version (Only for testing purposes)\"\n                    banner\n                    closable\n                />\n            </Affix>}\n            <Switch>\n                <Route exact path=\"/login\" render={() => <Auth {...this.state} login={this.login}/>}/>\n                <Route exact path=\"/password-reset/:token\"\n                       render={(route) => <Auth {...route} {...this.state} login={this.login}/>}/>\n                <Route render={(route) => (this.state.user ?\n                    <AppBase {...this.state} {...route} {...this.props} logout={this.logout}/> :\n                    <Auth {...this.state} login={this.login}/>)}/>\n            </Switch>\n        </Layout>\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './app/assets/theme.less';\nimport './app/assets/custom.css';\n\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios/index\";\nimport {message} from 'antd';\nimport {getAuthToken} from \"./auth\";\nimport {API_URL} from \"../constants/api\";\nimport {IMAGE_BASE_URL} from \"../config/connect\";\nimport {\n    ERROR_MESSAGE_404,\n    ERROR_MESSAGE_500,\n    PASS_DIGIT,\n    PASS_LEN,\n    PASS_LOWER, PASS_SPEC,\n    PASS_UPPER\n} from \"../constants/messages\";\nimport {\n    CALENDAR_SETTINGS,\n    ERROR_MSG_TYPE,\n    INFO_MSG_TYPE,\n    SUCCESS_MSG_TYPE,\n    WARNING_MSG_TYPE\n} from \"../constants/dataKeys\";\nimport * as lockr from \"lockr\";\n\nexport const makeURL = function (URL) {\n    return API_URL + '/' + URL;\n};\nexport const makeFileURL = function (URL) {\n    return IMAGE_BASE_URL + '/' + URL;\n}\nexport const putAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'put',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        handleErrorResponse(error);\n        errorFn(data);\n    });\n};\n\nexport const postAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'post',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const postOuterAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'post',\n        url: URL,\n        data: data,\n        headers: {\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const patchAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'patch',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const getAPI = function (URL, successFn, errorFn, params = {}) {\n    // console.log(getAuthToken());\n    axios({\n        method: 'get',\n        url: makeURL(URL),\n        headers: {\n            Authorization: 'Token ' + getAuthToken()\n        },\n        params: params\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        // console.log(\"Error aa rhi \", error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const deleteAPI = function (URL, successFn, errorFn) {\n    // console.log(getAuthToken());\n    axios({\n        method: 'delete',\n        url: makeURL(URL),\n        headers: {\n            Authorization: 'Token ' + getAuthToken()\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(\"Error aa rhi \", error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\n\nexport const handleErrorResponse = function (error) {\n    let response = error.response;\n    if (response) {\n        console.info(\"Error Response Received\", response);\n        let status = response.status;\n        if (status == 400) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 401) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 403) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 404) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            } else {\n                message.error(ERROR_MESSAGE_404);\n            }\n        } else if (status == 500) {\n            message.error(ERROR_MESSAGE_500);\n        }\n    } else {\n        // message.error(ERROR_INTERNET_CONNECTIVITY);\n        console.error(response);\n    }\n};\n\nexport const interpolate = function (theString, argumentArray) {\n    var regex = /%s/;\n    var _r = function (p, c) {\n        return p.replace(regex, c);\n    };\n    return argumentArray.reduce(_r, theString);\n};\n\n\nexport const displayMessage = function (type, msg) {\n    if (type == SUCCESS_MSG_TYPE)\n        message.success(msg);\n    else if (type == INFO_MSG_TYPE)\n        message.info(msg);\n    else if (type == WARNING_MSG_TYPE)\n        message.warning(msg);\n    else if (type == ERROR_MSG_TYPE)\n        message.error(msg);\n};\n\nexport const startLoadingMessage = function (msg) {\n    return message.loading(msg, 0);\n};\nexport const stopLoadingMessage = function (msgFn, finishMsgType, finishMsg) {\n    msgFn();\n    if (finishMsgType)\n        displayMessage(finishMsgType, finishMsg);\n    return true;\n}\n\nexport const parseQueryString = function (query) {\n    var obj = {};\n    // console.log(query, query.length);\n    if (query.length) {\n        if (query[0] == '?' || query[0] == '#') {\n            query = query.substring(1, query.length)\n        }\n        var tempArr = query.split('&');\n        console.log(tempArr);\n        tempArr.forEach(function (str) {\n            var arr = str.split('=');\n            if (arr.length == 2) {\n                obj[arr[0]] = arr[1]\n            }\n        });\n    }\n    return obj;\n}\nexport const validatePassword = function (rule, value, callback) {\n\n    if (value.length < 6 && value.length != 0) {\n        return (PASS_LEN);\n    }\n    if (value == value.toLowerCase() && value.length != 0) {\n        return (PASS_UPPER);\n    } else if (value == value.toUpperCase() && value.length != 0) {\n        return (PASS_LOWER);\n    } else if (value.search(/[0-9]/) < 0 && value.length != 0) {\n        return (PASS_DIGIT);\n    } else if (!(/^[a-zA-Z0-9 ]*$/.test(value) == true && value.length != 0)) {\n    } else {\n        return (PASS_SPEC);\n    }\n    return;\n}\n\nexport const saveCommonSettings = function (type, value) {\n    lockr.set(type, value);\n}\nexport const getCommonSettings = function (type) {\n    let savedStates = lockr.get(type);\n    if (savedStates)\n        return savedStates;\n    return false;\n}\n\nexport const removeEmpty = (obj) => {\n    Object.keys(obj).forEach(k =>\n        (obj[k] && typeof obj[k] === 'object') && removeEmpty(obj[k]) ||\n        (!obj[k] && obj[k] !== undefined) && delete obj[k]\n    );\n    return obj;\n};\n\nexport const fildFileExtension = function (path) {\n    if(!path)\n        return null;\n    let name = path.split('.');\n    if (name.length) {\n        return name[name.length - 1]\n    }\n    return null;\n}\n","export const ERROR = 'error';\nexport const ENTERUSERNAME = 'enter username';\nexport const VALID = 'validating';\nexport const SUCCESS = 'success';\nexport const USERAVAIL = 'Username available';\nexport const USEREXIST = 'Username already exist';\nexport const USERVALIDALPHA = \"Username can be only 'a-z', 'A-Z', '_' '0-9'\" ;\nexport const USERVALIDLEN=\"Too short username\";\nexport const PASSLEN = 'Password should be more than 6 character';\nexport const PASSUPER = 'Password must have atleast 1 uppercase letter';\nexport const PASSLOWER = 'Password must have atleast 1 lowercase letter';\nexport const PASSDIGIT = 'Password must contain atleast 1 digit';\nexport const PASSSPEC =  'Password must have atleast 1 special character';\nexport const SUBSUCCESS= 'Submission sucessful';\nexport const SUBFAILED= 'submission failed';\nexport const CHECKUSERORMOB= 'Check username or Mobile Number';\nexport const INPUTUSERNAME= 'Please input your username!';\nexport const INPUTFIRSTNAME= 'Please input your First Name!';\nexport const INPUTFULLNAME= 'Please input your fullName!';\nexport const NOTVALIDEMAIL= 'Not  Valid  email!';\nexport const INPUTEMAIL= 'Please input your email!';\nexport const INPUTDOB= 'Please input your Date Of Birth!';\nexport const INPUTPHNO= 'Please input your phone number!';\nexport const INPUTPASS= 'Please input your password!';\nexport const INPUTCITY= 'Please input your City!';\nexport const INPUTCOMPANY= 'Please input your Company Name!';\nexport const REQUIRED_FIELD_MESSAGE = 'This field is required!'\n\nexport const ERROR_INTERNET_CONNECTIVITY = 'Connection Failed';\nexport const ERROR_MESSAGE_500 = 'Internal Server Error';\nexport const ERROR_MESSAGE_404 = 'Not Found';\n\n\nexport const PASS_LEN = 'Password should be atleast 6 character long';\nexport const PASS_UPPER = 'Password must have atleast 1 uppercase letter';\nexport const PASS_LOWER = 'Password must have atleast 1 lowercase letter';\nexport const PASS_DIGIT = 'Password must contain atleast 1 digit';\nexport const PASS_SPEC =  'Password must have atleast 1 special character';\n\nexport const MAIL_SEND_MSG =\"Mail Sent Successfully\";\nexport const MAIL_SEND_ERROR_MSG =\"No data available for mailing\";\n","import {BACKEND_BASE_URL} from \"../config/connect\";\n\n/***\n * API Connection URLs\n * */\nexport const API_URL = BACKEND_BASE_URL + '/erp-api';\nexport const CONFIG_API = 'users/config/';\nexport const FILE_UPLOAD_API = 'blogImage/';\nexport const FILE_UPLOAD_BASE64 = 'blogImage/create_with_base64/';\nexport const LOGIN_SEND_OTP = 'staff_login/send_otp/';\nexport const LOGIN_RESEND_OTP = 'staff_login/resend_otp/';\nexport const SIGNUP_URL = '';\nexport const RESET_PASSWORD = 'users/reset_password/';\nexport const CHANGE_PASSWORD = 'users/passwordchange/';\nexport const RESET_PASSWORD_MAIL = 'users/staff_reset_mail/';\nexport const LOGIN_URL = 'users/login/';\nexport const OTP_LOGIN_URL = 'staff_login/verify_otp/';\nexport const USER_DATA = 'users/user_clone/';\nexport const PRACTICESTAFF = 'clinics/%s/practice_staff/';\nexport const ENABLE_STAFF_IN_PRACTICE = 'staff/%s/practice_list/'\nexport const DOCTOR_VISIT_TIMING_API = 'clinics/%s/doctor_timing/';\nexport const USER_PRACTICE_PERMISSIONS = 'user_permissions/?staff=%s&practice=%s';\nexport const SET_USER_PERMISSION = 'user_permissions/';\nexport const SET_SPECIFIC_USER_PERMISSION = 'user_permissions/%s/';\nexport const ALL_PRACTICE = 'clinics/';\nexport const ALL_PERMISSIONS = 'users/all_permissions/';\nexport const UPDATE_BULK_PERMISSIONS = 'user_permissions/bulk/';\nexport const PRACTICE = 'clinics/%s/';\nexport const PRACTICE_DELETE = 'clinics/%s/delete_clinic/';\nexport const TAXES = 'clinics/%s/taxes/';\nexport const OFFERS = 'clinics/%s/offers/';\nexport const PAYMENT_MODES = 'clinics/%s/payment_modes/';\nexport const PROCEDURE_CATEGORY = 'clinics/%s/procedure_category/';\nexport const PROMO_CODE ='promocode/';\nexport const SINGLE_PROMO_CODE ='promocode/%s/';\nexport const SEND_PROMO_CODE_SMS ='promocode/%s/promo_code_sms/';\nexport const CHECK_PROMO_CODE ='promocode/promo_value/';\n\nexport const EMR_DIAGNOSES = 'clinics/%s/diagnoses/';\nexport const EMR_COMPLAINTS = 'clinics/%s/complaints/';\nexport const EMR_OBSERVATIONS = 'clinics/%s/observations/';\nexport const EMR_TREATMENTNOTES = 'clinics/%s/treatmentnotes/';\nexport const EMR_INVESTIGATIONS = 'clinics/%s/investigations/';\nexport const EMR_FILETAGS = 'clinics/%s/filetags/';\nexport const EMR_VITAL_SIGNS = 'clinics/%s/vital_sign/';\nexport const EMR_MEDICATION = 'clinics/%s/medication/';\nexport const APPOINTMENT_CATEGORIES = 'clinics/%s/appointment_category/';\nexport const ALL_PRACTICE_STAFF = 'staff/';\nexport const SINGLE_PRACTICE_STAFF_API = 'staff/%s/';\n\nexport const PATIENTS_LIST = 'patients/';\nexport const PATIENT_PROFILE = 'patients/%s/';\nexport const MERGE_PATIENTS = 'patients/merge_patients/';\nexport const STAFF_ROLES = 'staff/roles/';\nexport const MEDICAL_HISTORY = 'patients/history/?id=%s';\n// export const PATIENT_MEDICAL_HISTORY = 'patients/history/?id=%s';\nexport const PATIENT_FILES = 'patients/files/';\nexport const ALL_PATIENT_FILES = 'patients/files/';\nexport const PATIENT_LEDGER = 'patients/%s/ledger/';\nexport const EXPENSE_TYPE = 'clinics/%s/expense_type/';\nexport const DRUG_CATALOG = 'clinics/%s/drugcatalog/';\nexport const SINGLE_DRUG_CATALOG = 'clinics/%s/drugcatalog/?id=%s';\nexport const LABTEST_API = 'clinics/%s/labtest/';\nexport const COMMUNICATONS_API = 'clinics/%s/communications/';\nexport const EMAIL_COMMUNICATONS_API = 'clinics/%s/email_communications/';\nexport const CALENDER_SETTINGS = 'clinics/%s/calender_settings/';\nexport const ALL_APPOINTMENT_API = 'appointment/';\nexport const APPOINTMENT_API = 'appointment/%s/';\nexport const APPOINTMENT_PERPRACTICE_API = 'appointment/?id=%s';\nexport const SINGLE_APPOINTMENT_PERPRACTICE_API = 'appointment/?id=%s&patient=%s';\nexport const PATIENT_GROUPS = 'patients/group/?id=%s';\nexport const VITAL_SIGNS_API = 'patients/vital_sign/'; //?patient=patientId&practice=practiceId\nexport const PRESCRIPTIONS_API = 'patients/prescriptions/'; //?id=patientId&practice=practiceId\nexport const SINGLE_REATMENTPLANS_API = 'patients/procedure/?id=%s';\nexport const BLOCK_CALENDAR = 'appointment/block_calendar/';\nexport const APPOINTMENT_SCHEDULE = 'appointment/?practice=%s';\n\nexport const PATIENT_NOTES = 'patients/patient_notes/?patient=%s&practice=%s';\n\nexport const LABPANEL_API = 'clinics/%s/labpanel/';\nexport const PATIENT_TIMELINE_API = 'patients/%s/combine_patient_report/';\nexport const PATIENT_TIMELINE_PDF = 'patients/%s/timeline_pdf/';\nexport const ALL_MEDICAL_CERITICATE_API = 'patients/medical_certificate/?practice=%s&page=%s'\nexport const MEDICAL_CERTIFICATE_API = 'patients/medical_certificate/?practice=%s&patient=%s';\nexport const MEDICAL_MEMBERSHIP_CANCEL_API = 'patients/cancel_membership/'\nexport const PATIENTS_MEMBERSHIP_API = 'patients/membership/?patient=%s'\nexport const PATIENT_MAILEDFILES = 'patients/files/';\n/*DELETE OBJECT*/\nexport const TREATMENTPLANS_API = 'patients/procedure/'; //?id=patientId&complete=true/false\nexport const TREATMENTPLANS_MARK_COMPLETE_API = 'patients/complete_procedure/?id=%s&complete=%s';\nexport const ALL_PRESCRIPTIONS_API = 'patients/prescriptions/%s/';\nexport const INVOICES_API = 'invoice/';\nexport const SINGLE_INVOICES_API = 'invoice/%s/'\nexport const INVOICE_PDF_API = 'invoice/%s/get_pdf';\nexport const CREATE_OR_EDIT_INVOICES = 'invoice/';\nexport const SINGLE_INVOICE_API = 'invoice/%s/';\nexport const PATIENT_CLINIC_NOTES_API = 'patients/clinic_notes/';\nexport const PATIENT_PAYMENTS_API = 'payment/';\nexport const SINGLE_PAYMENT_API = 'payment/%s/';\nexport const BULK_PAYMENT_API = 'payment/bulk_payments/';\nexport const PRACTICE_PRINT_SETTING_API = 'clinics/%s/practice_print_settings/?type=%s&sub_type=%s';\nexport const SAVE_ALL_PRINT_SETTINGS = 'clinics/%s/all_print_settings/';\nexport const PATIENT_COMMUNICATION_HISTORY_API = 'users/sms_status_update/?user=%s';\nexport const PRESCRIPTION_TEMPLATE = \"clinics/%s/prescription_template/\";\nexport const UNPAID_PRESCRIPTIONS = \"patients/unpaid_prescriptions/?id=%s\";\nexport const CANCELINVOICE_GENERATE_OTP = \"patients/generate_otp/\";\nexport const CANCELINVOICE_VERIFY_OTP = 'patients/verify_otp/';\nexport const CANCELINVOICE_RESENT_OTP = 'patients/resend_otp/'\nexport const INVOICE_RETURN_API = 'return/';\nexport const SINGLE_RETURN_API = 'return/%s/'\nexport const RETURN_INVOICE_PDF_API = 'return/%s/get_pdf'\n//search and advanced search API\nexport const ADVANCED_SEARCH_PATIENT = 'patients/advance_search/'\nexport const SEARCH_PATIENT = 'patients/search/?name=%s';\nexport const PATIENT_PENDING_AMOUNT = 'patients/%s/pending_amount/';\nexport const AVAILABLE_ADVANCE = 'patients/%s/advance_payment/';\n//extra data\nexport const EXTRA_DATA = 'clinics/extra_data/';\nexport const COUNTRY = 'patients/country/';\nexport const STATE = 'patients/state/';\nexport const CITY = 'patients/city/';\nexport const SOURCE = 'patients/source/';\n/**\n * Reports API\n * */\n\n/** *Patient Reports* **/\nexport const PATIENTS_REPORTS = 'patients/new_patients';\nexport const ACTIVE_PATIENTS_REPORTS = 'patients/active_patients';\nexport const MEMBERSHIP_REPORTS = 'patients/membership_report';\nexport const FIRST_APPOINTMENT_REPORTS = 'patients/first_appointment';\n\n/** Appointment Reports**/\nexport const PATIENT_APPOINTMENTS_REPORTS = 'appointment/appointment_report';\n\n/** EMR Reports**/\nexport const EMR_REPORTS = 'clinics/%s/emr_report';\n\n/** Inventory Retails Reports**/\nexport const PRODUCTS_API = 'inventory_item/products/';\nexport const INVENTORY_RETAILS_REPORT = 'inventory_item/inventory_retail';\n\n/** Expense Reports ***/\nexport const EXPENSE_PAYMENT_MODE_API = 'expenses';\nexport const EXPENSE_REPORT_API = 'expenses/report';\n/** Inventory Reports***/\nexport const INVENTORY_REPORT_API = 'inventory_item/inventory_report';\n\n/** MLM Reports**/\nexport const MLM_Reports = 'patients/mlm_report';\nexport const MLM_Agent_Wallet = 'patients/agent_wallet_balance';\n/** Payment Reports**/\nexport const PAYMENT_REPORTS = 'payment/payment_reports/';\n\n/** Income Reports**/\nexport const INCOME_REPORTS = \"invoice/invoice_reports\";\n\n/** Return Invoice**/\n\nexport const RETURN_INVOICE_REPORTS =\"return/return_reports/\";\n\n/** Amount Due Reports **/\nexport const AMOUNT_DUE_REPORTS ='invoice/amount_due/';\n\nexport const APPOINTMENT_REPORTS = 'clinics/%s/appointment_report/';\nexport const EXPENSE_REPORT = 'clinics/%s/expense_report/';\nexport const INVOICE_REPORTS = 'clinics/%s/invoice_report/';\n// export const PATIENTS_REPORTS = 'clinics/%s/patients_report/';\nexport const PAYMENTS_REPORTS = 'clinics/%s/payments_report/';\nexport const TREATMENT_REPORTS = 'clinics/%s/treatment_report/';\nexport const DRUG_TYPE_API = 'clinics/%s/drugtype/';\nexport const DRUG_UNIT_API = 'clinics/%s/drugunit/';\nexport const PRINT_PREVIEW_RENDER = 'patients/print/';\nexport const MEMBERSHIP_API = 'clinics/membership/';\nexport const BED_BOOKING_REPORTS = 'clinics/seat_booking_report';\nexport const ACCEPT_PAYMENT = 'clinics/payment/';\n\nexport const MAILING_USERS_LIST = '/users/reports_mail/';\n/**\n * Blogs API\n * */\n\nexport const BLOG_POST = 'post/';\nexport const SINGLE_POST = 'post/%s/';\nexport const BLOG_VIDEOS = 'video/';\nexport const SINGLE_VIDEO = 'video/%s/';\nexport const BLOG_DISEASE = 'disease/';\nexport const SINGLE_DISEASE = 'disease/%s/';\nexport const BLOG_EVENTS = 'events/';\nexport const SINGLE_EVENTS = 'events/%s/';\nexport const BLOG_CONTACTUS = 'contactus/';\nexport const SINGLE_CONTACT = 'contactus/%s/';\nexport const BLOG_PAGE_SEO = 'page_seo/';\nexport const SINGLE_PAGE_SEO = 'page_seo/%s/';\nexport const BLOG_SLIDER = 'slider/';\nexport const SINGLE_SLIDER = 'slider/%s/';\nexport const BLOG_FACILITY = 'facility/';\nexport const SINGLE_FACILITY = 'facility/%s/';\nexport const LANDING_PAGE_CONTENT = 'landing_page_content/';\nexport const SINGLE_LANDING_PAGE_CONTENT = 'landing_page_content/%s/';\nexport const LANDING_PAGE_VIDEO = 'landing_page_video/';\nexport const SINGLE_LANDING_PAGE_VIDEO = 'landing_page_video/%s/';\nexport const MANAGE_PRODUCT = 'product_content/';\nexport const MANAGE_SINGLE_PRODUCT = 'product_content/%s/';\nexport const MANAGE_THERAPY = 'therapy_content/';\nexport const MANAGE_SINGLE_THERAPY = 'therapy_content/%s/';\n\n\n/**\n * INVENTORY API\n * */\n\nexport const EXPENSES_API = \"expenses/\";\nexport const SINGLE_EXPENSES_API = \"expenses/%s/\";\nexport const VENDOR_API = \"clinics/%s/vendor/\";\nexport const SINGLE_VENDOR_API = \"vendor/%s/\";\nexport const ACTIVITY_API = \"activity/\";\nexport const SINGLE_ACTIVITY_API = \"activity/%s/\";\nexport const LAB_API = \"lab/\";\nexport const SINGLE_LAB_API = \"lab/%s/\";\nexport const MANUFACTURER_API = \"manufacturer/\";\nexport const SINGLE_MANUFACTURER_API = \"manufacturer/%s/\";\nexport const INVENTORY_ITEM_API = \"inventory_item/\";\nexport const SINGLE_INVENTORY_ITEM_API = \"inventory_item/%s/\";\nexport const INVENTORY_API = \"inventory/\";\nexport const SINGLE_INVENTORY_API = \"inventory/%s/\";\nexport const ITEM_TYPE_STOCK = \"item_type_stock/\";\nexport const SINGLE_ITEM_TYPE_STOCK = \"item_type_stock/%s/\";\nexport const STOCK_ENTRY = \"stock_entry/%s/\";\nexport const BULK_STOCK_ENTRY = \"stock_entry/bulk/\";\nexport const SUPPLIER_API = 'stock_entry/practice_supplier';\nexport const SEARCH_THROUGH_QR = 'item_type_stock/find_item';\nexport const BILL_SUPPLIER = 'stock_entry/bills_suppliers/';\nexport const INVENTORY_ITEM_EXPORT = 'inventory_item/export'\n\n/**\n * MLM API\n * */\nexport const ROLE_COMMISION = \"role_commission/\";\nexport const PRODUCT_LEVEL = \"product_level\";\nexport const PRODUCT_MARGIN = \"product_margin/\";\nexport const SINGLE_PRODUCT_MARGIN = \"product_margin/%s/\";\nexport const GENERATE_MLM_COMMISSON = 'product_margin/generate_mlm/';\nexport const AGENT_ROLES = 'role_commission/agent_roles/';\nexport const AGENT_WALLET = 'patient_wallet/?patient=%s';\nexport const WALLET_LEDGER = 'wallet_ledger/?patient=%s';\nexport const WALLET_LEDGER_SUM = 'wallet_ledger/ledger_sum/?patient=%s';\nexport const MY_AGENTS = 'patients/%s/my_agents/';\n\n/**\n * PDFs Links\n * */\n\nexport const PRESCRIPTION_PDF = 'patients/prescriptions_pdf/?id=%s';\nexport const VITAL_SIGN_PDF = 'patients/vital_sign_pdf/?id=%s';\nexport const CLINIC_NOTES_PDF = 'patients/clinic_notes_pdf/?id=%s';\nexport const TREATMENTPLANS_PDF = 'patients/treatment_plan_pdf/?id=%s';\nexport const MEDICAL_CERTIFICATE_PDF = 'patients/medical_certificate_pdf/?id=%s';\nexport const PAYMENT_PDF = 'payment/%s/get_pdf/';\n\n/**\n * Reservation System\n * */\nexport const ROOM_TYPE = 'clinics/%s/room_types/';\nexport const BED_PACKAGES = 'clinics/%s/bed_packages/';\nexport const MEDICINE_PACKAGES = 'clinics/%s/medicine_packages/';\nexport const BOOK_SEAT = 'clinics/%s/seat_booking/';\nexport const CHECK_SEAT_AVAILABILITY = 'clinics/%s/seat_availability/';\nexport const DISEASE_LIST = 'clinics/%s/other_diseases/';\n\n\n/** Agent Tree***/\nexport const AGENT_TREE = 'patients/%s/agents_chain/';\n\n/**suggestions**/\nexport const SUGGESTIONS = 'suggestions/';\n\n/** Credentials Save**/\nexport const CREDENTIALS = 'https://www.bkarogyam.com/api/authenticate';\nexport const SWITCH_PORTAL = '';\nexport const SAVE_CREDENTIALS = 'users/%s/task_login/';\n\n/** Meetings**/\nexport const MEETING_USER = 'meetings/zoom_user/';\nexport const MEETINGS = 'meetings/';\nexport const MEETING_DETAILS = 'meetings/details';\nexport const SINGLE_MEETING = 'meetings/%s/';\n\n/** Alternate Medicine Conversion **/\nexport const ALTERNATE_MEDICINE = 'conversion/';\n\n\nexport const PATIENT_CALL_NOTES = 'patients/patient_notes_call/?patient=%s';\n","/**\n * Different Connection Configs */\n\nimport CONFIG from \"../../app.config\";\n\nexport const BACKEND_BASE_URL = CONFIG.backendBaseUrl;\nexport const IMAGE_BASE_URL = CONFIG.imageBaseUrl;\nexport const RAZORPAY_KEY = 'rzp_live_Wl01N16ABswm3p';\n","\nexport const EMAIL = 'email';\nexport const PASSWORD = 'password';\nexport const AUTH_TOKEN = 'token';\nexport const ROLE = 'role';\nexport const CURRENT_PRACTICE = 'current_practice';\nexport const OLD_PASSWORD = 'old_password';\nexport const NEW_PASSWORD = 'new_password';\nexport const PHONE = 'phone';\nexport const OTP = 'otp'\n","/***\n * App Default Config\n * */\n\nconst CONFIG = {\n    backendBaseUrl: '',\n    imageBaseUrl : '/media',\n    prodDomain : [\"clinic.bkarogyam.com\",\"bk-erp.plutonic.co.in\"],\n    crashHandling : {\n        slack : {\n            sendOnProduction : true,\n            sendOnDevelopment : false,\n            webHookUrl : \"https://hooks.slack.com/services/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\",\n        }\n    }\n}\nexport default CONFIG;\n"],"sourceRoot":""}