{"version":3,"sources":["app/components/webAdmin/videos/AddVideo.js","app/components/webAdmin/videos/VideosList.js","app/components/webAdmin/blog/AddPost.js","app/components/webAdmin/blog/BlogList.js","app/components/webAdmin/contacts/AddContacts.js","app/components/webAdmin/contacts/ContactsList.js","app/components/webAdmin/disease/AddDisease.js","app/components/webAdmin/disease/DiseaseList.js","app/components/webAdmin/events/AddEvent.js","app/components/webAdmin/events/EventsList.js","app/components/webAdmin/seo/AddSEO.js","app/components/webAdmin/seo/SEOList.js","app/components/webAdmin/sliderImages/AddSliderImage.js","app/components/webAdmin/sliderImages/SliderImageList.js","app/components/webAdmin/facilities/AddFacility.js","app/components/webAdmin/facilities/FacilityList.js","app/components/webAdmin/landingPageVideos/AddLandingPageVideo.js","app/components/webAdmin/landingPageVideos/LandingPageVideoList.js","app/components/webAdmin/landingPageContent/AddLandingPageContent.js","app/components/webAdmin/landingPageContent/LandingPageContentList.js","app/components/webAdmin/WebAdminSider.js","app/components/webAdmin/manageProduct/AddManageProduct.js","app/components/webAdmin/manageProduct/ManageProductList.js","app/components/webAdmin/manageTherapy/AddManageTherapy.js","app/components/webAdmin/manageTherapy/ManageTherapyList.js","app/components/webAdmin/WebAdminHome.js"],"names":["AddVideo","props","state","editBlogData","this","match","params","id","loadData","redirectVar","redirect","setState","that","getAPI","interpolate","SINGLE_VIDEO","data","editformProp","fields","label","key","initialValue","name","type","INPUT_FIELD","rank","NUMBER_FIELD","required","min","link","successFn","displayMessage","SUCCESS_MSG_TYPE","errorFn","action","method","TestFormLayout","create","DynamicFieldsForm","formProp","console","log","BLOG_VIDEOS","defaultValues","value","exact","path","render","title","changeRedirect","to","React","Component","VideosList","videos","loading","bind","deleteObject","record","reqData","patchAPI","opts","height","width","playerVars","_onReady","event","route","extra","dataSource","itemLayout","renderItem","item","Item","actions","onConfirm","okText","cancelText","YouTube","videoId","onReady","Meta","avatar","style","backgroundColor","AddPost","SINGLE_POST","domain","slug","featured_image","SINGLE_IMAGE_UPLOAD_FIELD","posted_on","moment","DATE_PICKER","meta_description","keywords","TEXT_FIELD","content","QUILL_TEXT_FIELD","BLOG_POST","DiseaseList","post","coloumns","dataIndex","export","text","format","columns","AddContacts","SINGLE_CONTACT","contact_rank","phone_no","email","address","minRows","BLOG_CONTACTUS","ContactsList","contacts","AddDisease","SINGLE_DISEASE","disease_type","SELECT_FIELD","options","DISEASE_TYPES","disease_name","main_image","side_image","MULTI_IMAGE_UPLOAD_FIELD","BLOG_DISEASE","disease","loadDiseases","AddEvent","SINGLE_EVENTS","event_date","event_image","BLOG_EVENTS","events","AddSEO","SINGLE_PAGE_SEO","disabled","BLOG_PAGE_SEO","SEOList","pageSEO","AddSliderImage","SINGLE_SLIDER","silder_image","BLOG_SLIDER","SliderImageList","slider","src","makeFileURL","alt","maxWidth","description","AddFacility","SINGLE_FACILITY","BLOG_FACILITY","FacilityList","facility","AddLandingPageVideo","SINGLE_LANDING_PAGE_VIDEO","LANDING_PAGE_VIDEO","LandingPageVideoList","AddLandingPageContent","SINGLE_LANDING_PAGE_CONTENT","image","LANDING_PAGE_CONTENT","LandingPageContentList","pageContent","dangerouslySetInnerHTML","__html","Sider","WebAdminSider","trigger","collapsible","overflow","minHeight","background","mode","defaultSelectedKeys","ItemGroup","margin","className","AddManageProduct","editProductData","MANAGE_SINGLE_PRODUCT","price","MANAGE_PRODUCT","ManageProductList","productData","AddManageTherapy","editTherapyData","MANAGE_SINGLE_THERAPY","MANAGE_THERAPY","ManageTherapyList","therapyData","Content","WebAdminHome","component","Error404"],"mappings":"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","file":"static/js/21.8355631f.chunk.js","sourcesContent":["import {Card, Form, Row,} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_VIDEOS,\n    SINGLE_VIDEO\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddVideo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_VIDEO, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : 1,\n            type: NUMBER_FIELD,\n            required: true,\n            min: 1\n        }, {\n            label: \"Video link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n            required: true\n        },\n            //     {\n            //     label: \"Active\",\n            //     key: \"is_active\",\n            //     initialValue: this.state.editBlogData ? this.state.editBlogData.is_active : null,\n            //     type: SINGLE_CHECKBOX_FIELD,\n            // },\n        ];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_VIDEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                    redirect: true\n                });\n                that.props.loadData();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_VIDEOS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/videos/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Video\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/videos'}/>)}/>\n                <Route exact path='/web/videos/add'\n                       render={() => <TestFormLayout title=\"Add video\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n\n            {this.state.redirect && <Redirect to={'/web/videos'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI} from \"../../../utils/common\";\nimport {BLOG_POST, BLOG_VIDEOS, SINGLE_CONTACT, SINGLE_VIDEO} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddVideo from \"./AddVideo\";\nimport YouTube from 'react-youtube';\n\nexport default class VideosList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: [],\n            loading: true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                videos: data,\n                loading: false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading: false\n            })\n\n        }\n        getAPI(BLOG_VIDEOS, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_VIDEO, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        const opts = {\n            height: '200',\n            width: '300',\n            playerVars: { // https://developers.google.com/youtube/player_parameters\n                // autoplay: 1\n            }\n        };\n        let _onReady = function (event) {\n            // access to player in all event handlers via event.target\n            // event.target.pauseVideo();\n        }\n        return <div>\n            <Switch>\n                <Route exact path='/web/videos/add'\n                       render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route exact path='/web/videos/edit/:id'\n                       render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route>\n                    <Card title=\"Videos\"\n                          extra={<Link to={\"/web/videos/add\"}> <Button type=\"primary\"><Icon\n                              type=\"plus\"/> Add</Button></Link>}>\n                        <List loading={this.state.loading} dataSource={this.state.videos}\n                              itemLayout=\"vertical\"\n                              renderItem={item => <List.Item key={item.id}\n                                                             actions={[<Link\n                                                                 to={\"/web/videos/edit/\" + item.id}>Edit</Link>,\n                                                                 <Popconfirm title=\"Are you sure delete this item?\"\n                                                                             onConfirm={() => that.deleteObject(item)}\n                                                                             okText=\"Yes\" cancelText=\"No\">\n                                                                     <a>Delete</a>\n                                                                 </Popconfirm>]}\n                                                             extra={<YouTube videoId={item.link}\n                                                                             opts={opts}\n                                                                             onReady={_onReady}/>}>\n                                  <List.Item.Meta\n                                      avatar={<Avatar style={{backgroundColor: '#87d068'}}>{item.rank}</Avatar>}\n                                      title={item.name}\n                                  />\n                              </List.Item>}/>\n                    </Card>\n                </Route>\n            </Switch>\n        </div>\n    }\n}\n","import { Card, Form,Row} from \"antd\";\nimport React from \"react\";\nimport {\n    DATE_PICKER, SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    SINGLE_POST\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\nimport moment from \"moment\";\n\n\nexport default class AddPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData : this.props.editBlogData?this.props.editBlogData:null\n        }\n    }\n    changeRedirect(){\n        var redirectVar=this.state.redirect;\n        this.setState({\n            redirect:  !redirectVar,\n        })  ;\n    }\n\n    componentDidMount(){\n        if(this.props.match.params.id){\n            if(!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData(){\n        let that =this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData:data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_POST, [this.props.match.params.id]) ,successFn, errorFn);\n\n\n    }\n\n\n    render(){\n        let that =this;\n        const  fields= [{\n            label: \"Blog Title\",\n            key: \"title\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.title:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog Domain \",\n            key: \"domain\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.domain:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog URL \",\n            key: \"slug\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.slug:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Blog Image\",\n            key: \"featured_image\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.featured_image:null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        },{\n            label: \"Posted On\",\n            key: \"posted_on\",\n            initialValue:this.state.editBlogData && this.state.editBlogData.posted_on?moment(this.state.editBlogData.posted_on):'',\n            type: DATE_PICKER\n\n        },{\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue:this.state.editBlogData?this.state.editBlogData.meta_description:null,\n            type: INPUT_FIELD,\n        },{\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.keywords:null,\n            type: TEXT_FIELD,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            // required:true,\n            initialValue:this.state.editBlogData?this.state.editBlogData.content:' ',\n            type: QUILL_TEXT_FIELD,\n            // preview:true\n        }, ];\n\n\n        let editformProp;\n        if(this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_POST, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp={\n            successFn:function(data){\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                console.log(data);\n            },\n            errorFn:function(data){\n                console.log(data);\n            },\n            action:  BLOG_POST,\n            method: \"post\",\n        };\n        let defaultValues=[];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/blog/edit/:id'\n                       render={() => (this.props.match.params.id?<TestFormLayout defaultValues={defaultValues} title=\"Edit Post\" changeRedirect= {this.changeRedirect} formProp= {editformProp} fields={fields}/>: <Redirect to={'/web/blog'} />)}/>\n                <Route exact path='/web/blog/add'\n                       render={() =><TestFormLayout title=\"Add Post\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect&&    <Redirect to={'/web/blog'} />}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table,} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_POST, SINGLE_POST} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddPost from \"./AddPost\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                post: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_POST, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_POST, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Blog Title',\n            dataIndex: 'title',\n            key: 'post_title'\n        }, {\n            title: 'Date',\n            dataIndex: 'posted_on',\n            key: 'post_date',\n            export: function (text) {\n                return moment(text).format('lll');\n            },\n            render:(value ,record)=><span>{record.posted_on?<span>{moment(record.posted_on).format(\"lll\")}</span>:null}</span>\n            \n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/blog/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/blog/add'\n                   render={(route) => <AddPost {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/blog/edit/:id'\n                   render={(route) => <AddPost {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Blogs\"\n                  extra={<Link to={\"/web/blog/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.post} columns={coloumns}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import { Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_CONTACTUS,\n    SINGLE_CONTACT\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddContacts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_CONTACT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"contact_rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.contact_rank : 1,\n            type: NUMBER_FIELD,\n            required:true,\n            min:1\n        }, {\n            label: \"Link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Phone Number \",\n            key: \"phone_no\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.phone_no : null,\n            type: INPUT_FIELD,\n        },{\n            label: \"Email\",\n            key: \"email\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.email : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Address\",\n            key: \"address\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.address : null,\n            type: TEXT_FIELD,\n            minRows: 3,\n        }];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_CONTACT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_CONTACTUS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/contact/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Contact\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/contact'}/>)}/>\n                <Route exact path='/web/contact/add'\n                       render={() => <TestFormLayout title=\"Add Contact\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/contact'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_CONTACTUS, SINGLE_CONTACT} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddContacts from \"./AddContacts\";\n\nexport default class ContactsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contacts: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                contacts: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(BLOG_CONTACTUS, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_CONTACT, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Rank',\n            dataIndex: 'contact_rank',\n            key: 'rank'\n        }, {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address'\n        }, {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email'\n        }, {\n            title: 'Phone',\n            dataIndex: 'phone_no',\n            key: 'phone'\n        },\n            {\n                title: 'Actions',\n                render: (item) => {\n                    return <div>\n                        <Link to={\"/web/contact/edit/\" + item.id}>Edit</Link>\n                        <Divider type=\"vertical\"/>\n                        <Popconfirm title=\"Are you sure delete this item?\"\n                                    onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                            <a>Delete</a>\n                        </Popconfirm>\n                    </div>\n                }\n            }];\n        return <div><Switch>\n            <Route exact path='/web/contact/add'\n                   render={(route) => <AddContacts {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/contact/edit/:id'\n                   render={(route) => <AddContacts {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Contacts\"\n                  extra={<Link to={\"/web/contact/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.contacts} columns={coloumns}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SELECT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD, MULTI_IMAGE_UPLOAD_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {BLOG_DISEASE, SINGLE_DISEASE} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\nimport {DISEASE_TYPES} from \"../../../constants/hardData\";\n\n\nexport default class AddDisease extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_DISEASE, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Disease Type\",\n            key: \"disease_type\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_type : null,\n            type: SELECT_FIELD,\n            options: DISEASE_TYPES\n        }, {\n            label: \"Disease Name\",\n            key: \"disease_name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Disease Main Image\",\n            key: \"main_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.main_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"Disease Side Image\",\n            key: \"side_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.side_image : [],\n            type: MULTI_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"URL\",\n            key: \"domain\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n            type: INPUT_FIELD,\n            required: true\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : ' ',\n            type: QUILL_TEXT_FIELD,\n        },];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_DISEASE, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_DISEASE,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/disease/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Disease\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/disease'}/>)}/>\n                <Route exact path='/web/disease/add'\n                       render={() => <TestFormLayout title=\"Add Disease\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/disease'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_DISEASE, SINGLE_DISEASE} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddDisease from \"./AddDisease\";\nimport {Link} from \"react-router-dom\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disease: null,\n            loading:true\n        };\n        this.loadDiseases = this.loadDiseases.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadDiseases();\n    }\n\n    loadDiseases() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                disease: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_DISEASE, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadDiseases();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_DISEASE, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Disease Name',\n            dataIndex: 'disease_name',\n            key: 'disease_name'\n        }, {\n            title: 'Disease Type',\n            dataIndex: 'disease_type',\n            key: 'disease_type'\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/disease/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/disease/add'\n                   render={(route) => <AddDisease{...this.state} {...route} loadData={this.loadDiseases}/>}/>\n            <Route exact path='/web/disease/edit/:id'\n                   render={(route) => <AddDisease{...this.state} {...route} loadData={this.loadDiseases}/>}/>\n            <Card title=\"Disease\"\n                  extra={<Link to={\"/web/disease/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} columns={coloumns} dataSource={this.state.disease}/>\n\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    DATE_PICKER, SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_EVENTS,\n    SINGLE_EVENTS,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_EVENTS, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Event Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Event Date\",\n            key: \"event_date\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.event_date : null,\n            type: DATE_PICKER,\n\n        }, {\n            label: \"Event Image\",\n            key: \"event_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.event_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"URL\",\n            key: \"domain\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        }];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_EVENTS, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        let formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_EVENTS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/event/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Event\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/event'}/>)}/>\n                <Route exact path='/web/event/add'\n                       render={() => <TestFormLayout defaultValues={defaultValues} title=\"Add Event\"\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/event'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_EVENTS, BLOG_POST,SINGLE_EVENTS} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddEvent from \"./AddEvent\";\nimport moment from \"moment\";\n\nexport default class DiseaseList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                events: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_EVENTS, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_EVENTS, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Event Title',\n            dataIndex: 'title',\n            key: 'event_title'\n        }, {\n            title: 'Date',\n            dataIndex:'event_date',\n            key: 'event_date',\n            render: (item) => {\n                return moment(item).format('LLL');\n            }\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/event/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/event/add'\n                   render={(route) => <AddEvent {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Route exact path='/web/event/edit/:id'\n                   render={(route) => <AddEvent {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Card title=\"Events\"\n                  extra={<Link to={\"/web/event/add\"}><Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.events} columns={coloumns}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_PAGE_SEO,\n    SINGLE_PAGE_SEO,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddSEO extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_PAGE_SEO, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Page\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD,\n            disabled: false //true\n        }, {\n            label: \"Page Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            required:true,\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        },];\n\n\n        let editformProp;\n        let that = this;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                        that.setState({\n                            redirect: true\n                        });\n                        that.props.loadData();\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_PAGE_SEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                    console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_PAGE_SEO,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/pageseo/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit SEO\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/pageseo'}/>)}/>\n                <Route exact path='/web/pageseo/add'\n                       render={() => <TestFormLayout title=\"Add SEO\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/pageseo'}/>}\n        </Row>\n\n    }\n}\n","import { Card, Table, Button, Icon,Divider,Popconfirm } from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_PAGE_SEO, SINGLE_PAGE_SEO} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddSEO from \"./AddSEO\";\nimport {Link} from \"react-router-dom\";\nimport AddPost from \"../blog/AddPost\";\n\nexport default class SEOList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pageSEO:null,\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData(){\n        let that =this;\n        let successFn = function (data) {\n            that.setState({\n                pageSEO:data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_PAGE_SEO ,successFn, errorFn);\n    }\n  \n    render(){\n        let that = this;\n        let coloumns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name'\n        },{\n            title: 'Title',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title: 'SEO Descriptions',\n            dataIndex: 'meta_description',\n            key: 'meta_description'\n        },{\n            title: 'SEO Keywords',\n            dataIndex: 'keywords',\n            key: 'keywords'\n        },\n            {\n                title:'Actions',\n                render:(item)=>{\n                    return <div>\n                        <Link to={\"/web/pageseo/edit/\"+item.id}>Edit</Link>\n                    </div>\n                }\n            }];\n        return<div><Switch>\n                <Route exact path='/web/pageseo/add'\n                   render={(route) => <AddSEO {...this.state} {...route} loadData={this.loadData}/>}/>\n                <Route exact path='/web/pageseo/edit/:id'\n                   render={(route) => <AddSEO loadData={this.loadData} {...this.state} {...route}/>}/>\n     \n                <Card title=\"Pages SEO\"   extra={<Link to={\"/web/pageseo/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.pageSEO} columns={coloumns}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    SUCCESS_MSG_TYPE,\n    NUMBER_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_SLIDER, SINGLE_SLIDER\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddSliderImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_SLIDER, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Page Title \",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Slider Image \",\n            key: \"silder_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.silder_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD\n        },];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_SLIDER, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_SLIDER,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/slider-image/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Slider Image\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/silder-image'}/>)}/>\n                <Route exact path='/web/slider-image/add'\n                       render={() => <TestFormLayout title=\"Add Slider Image\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/slider-image'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, makeFileURL} from \"../../../utils/common\";\nimport {BLOG_PAGE_SEO, BLOG_POST, BLOG_SLIDER, SINGLE_LANDING_PAGE_VIDEO, SINGLE_SLIDER} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddSliderImage from \"./AddSliderImage\";\nimport {Link} from \"react-router-dom\";\n\nexport default class SliderImageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slider: [],\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this)\n    }\n\n    componentWillMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            console.log(data);\n            that.setState({\n                slider: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_SLIDER, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_SLIDER, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        return <div><Switch>\n            <Route exact path='/web/slider-image/add'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/slider-image/edit/:id'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Slider Image\" extra={<Link to={\"/web/slider-image/add\"}>\n                <Button type=\"primary\">\n                    <Icon type=\"plus\"/> Add\n                </Button>\n            </Link>}>\n                <List loading={this.state.loading} itemLayout=\"vertical\" dataSource={this.state.slider} renderItem={item =>\n                    <List.Item key={item.id}\n                               extra={<img src={makeFileURL(item.silder_image)}\n                                           alt={item.title}\n                                           style={{\n                                               maxWidth: '100%',\n                                               width: '400px'\n                                           }}\n                               />}\n                               actions={[<Link to={'/web/slider-image/edit/' + item.id}>Edit</Link>,\n                                   <Popconfirm title=\"Are you sure delete this item?\"\n                                               onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                       <a>Delete</a>\n                                   </Popconfirm>]}>\n                        <List.Item.Meta\n                            avatar={<Avatar>{item.rank}</Avatar>}\n                            title={item.title}\n                            description={item.name}\n                        />\n                    </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_FACILITY, SINGLE_FACILITY,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddFacility extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        console.log(\"i M groot\")\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_FACILITY, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_FACILITY, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_FACILITY,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/facilities/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Facility\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'web/facilities'}/>)}/>\n                <Route exact path='/web/facilities/add'\n                       render={() => <TestFormLayout title=\"Add Facility\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/facilities'}/>}\n        </Row>\n\n    }\n}\n","import {Button, Card, Divider, Icon, Popconfirm, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {\n    BLOG_FACILITY, SINGLE_FACILITY,\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddFacility from \"./AddFacility\";\nimport {Link} from \"react-router-dom\";\n\nexport default class FacilityList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            facility: null,\n            loading:true\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                facility: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        getAPI(BLOG_FACILITY, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_FACILITY, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name'\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/facilities/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div><Switch>\n            <Route exact path='/web/facilities/add'\n                   render={(route) => <AddFacility loadData={this.loadData} {...this.state} {...route}/>}/>\n            <Route exact path='/web/facilities/edit/:id'\n                   render={(route) => <AddFacility loadData={this.loadData} {...this.state} {...route}/>}/>\n            <Card title=\"Facilities\" extra={<Link to={\"/web/facilities/add\"}> <Button type=\"primary\"><Icon\n                type=\"plus\"/> Add</Button></Link>}>\n                <Table loading={this.state.loading} dataSource={this.state.facility} columns={coloumns}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_VIDEO,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddLandingPageVideo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_LANDING_PAGE_VIDEO, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.rank : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Video link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n        }];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_LANDING_PAGE_VIDEO, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                console.log(data);\n                that.changeRedirect();\n            }\n            ,\n            errorFn: function () {\n\n            },\n            action: LANDING_PAGE_VIDEO,\n            method: \"post\",\n        }\n        let defaultValues = [{\"is_active\": true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/landingpagevideo/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Video\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/landingpagevideo'}/>)}/>\n                <Route exact path='/web/landingpagevideo/add'\n                       render={() => <TestFormLayout title=\"Add video\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/landingpagevideo'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    BLOG_VIDEOS,\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_CONTENT,\n    SINGLE_LANDING_PAGE_VIDEO\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddLandingPageVideo from \"./AddLandingPageVideo\";\nimport YouTube from 'react-youtube';\n\nexport default class LandingPageVideoList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            videos:[],\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData(){\n        let that =this;\n        let successFn = function (data) {\n            that.setState({\n                videos:data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n          that.setState({\n            loading:false\n          })\n\n        }\n        getAPI(LANDING_PAGE_VIDEO ,successFn, errorFn);\n    }\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_LANDING_PAGE_VIDEO, [record.id]), reqData, successFn, errorFn)\n    }\n    render(){\n        let that = this;\n        const opts = {\n            height: '200',\n            width: '300',\n            // playerVars: { // https://developers.google.com/youtube/player_parameters\n            //     autoplay: 1\n            // }\n        };\n        return<div><Switch>\n            <Route exact path='/web/landingpagevideo/add'\n                   render={(route) => <AddLandingPageVideo {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Route exact path='/web/landingpagevideo/edit/:id'\n                   render={(route) => <AddLandingPageVideo {...this.state} loadData={this.loadData} {...route}/>}/>\n            <Card title=\"Landing Page Video\" extra={<Link to={\"/web/landingpagevideo/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <List loading={this.state.loading} dataSource={this.state.videos}\n                      itemLayout=\"vertical\"\n                      renderItem={item => <List.Item key={item.id}\n\n                                                     actions={[<Link to={\"/web/landingpagevideo/edit/\"+item.id}>Edit</Link>,\n                                                         <Popconfirm title=\"Are you sure delete this item?\"\n                                                                     onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                                             <a>Delete</a>\n                                                         </Popconfirm>]}\n                                                     extra={<YouTube videoId={item.link}\n                                                                     opts={opts}/>}>\n                          <List.Item.Meta\n                              avatar={<Avatar style={{ backgroundColor: '#87d068' }} >{item.rank}</Avatar>}\n                              title={item.name}\n                          />\n                      </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    LANDING_PAGE_CONTENT,\n    SINGLE_LANDING_PAGE_CONTENT,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddLandingPageContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_LANDING_PAGE_CONTENT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Title\",\n            key: \"title\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.title : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Image\",\n            key: \"image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_LANDING_PAGE_CONTENT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n            },\n            errorFn: function () {\n\n            },\n            action: LANDING_PAGE_CONTENT,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/landingpagecontent/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Content\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/landingpagecontent'}/>)}/>\n                <Route exact path='/web/landingpagecontent/add'\n                       render={() => <TestFormLayout title=\"Add Content\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/landingpagecontent'}/>}\n        </Row>\n\n    }\n}\n","import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI, makeFileURL} from \"../../../utils/common\";\nimport {\n    BLOG_POST,\n    BLOG_VIDEOS,\n    LANDING_PAGE_CONTENT,\n    LANDING_PAGE_VIDEO,\n    SINGLE_LANDING_PAGE_CONTENT\n} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddLandingPageContent from \"./AddLandingPageContent\";\n\nexport default class LandingPageContentList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            pageContent:[],\n            loading:true\n        };\n        this.loadData=this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData(){\n        let that =this;\n        let successFn = function (data) {\n            that.setState({\n                pageContent:data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n          that.setState({\n            loading:false\n          })\n\n        }\n        getAPI(LANDING_PAGE_CONTENT ,successFn, errorFn);\n    }\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_LANDING_PAGE_CONTENT, [record.id]), reqData, successFn, errorFn)\n    }\n    render(){\n        let that = this;\n        return<div><Switch>\n            <Route exact path='/web/landingpagecontent/add'\n                   render={(route) => <AddLandingPageContent {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/landingpagecontent/edit/:id'\n                   render={(route) => <AddLandingPageContent {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Landing Page Content\" extra={<Link to={\"/web/landingpagecontent/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <List loading={this.state.loading} dataSource={this.state.pageContent}\n                      itemLayout=\"vertical\"\n                      renderItem={item => <List.Item key={item.id}\n\n                                                     actions={[<Link to={\"/web/landingpagecontent/edit/\"+item.id}>Edit</Link>,\n                                                         <Popconfirm title=\"Are you sure delete this item?\"\n                                                                     onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                                             <a>Delete</a>\n                                                         </Popconfirm>]}\n                                                     extra={<img src={makeFileURL(item.image)} style={{width:'300px'}}/>}>\n                          <List.Item.Meta\n                              avatar={<Avatar style={{ backgroundColor: '#87d068' }} >{item.rank}</Avatar>}\n                              title={item.title}\n                              description={<div dangerouslySetInnerHTML={{ __html: item.content }}/>}\n\n                              \n                          />\n                      </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n","import React from \"react\";\nimport {Divider, Icon, Menu, Layout} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nconst Sider = Layout.Sider;\nexport default class WebAdminSider extends React.Component {\n    render() {\n        return <Sider trigger={null}\n                      collapsible\n                      style={{overflow: 'auto', minHeight: '100vh', background: '#fff'}}>\n            <Menu mode=\"inline\" defaultSelectedKeys={['web-1']}>\n                <Menu.ItemGroup key=\"g1\" title={<Divider style={{margin: '0px'}}>Web Settings</Divider>}>\n                    <Menu.Item key=\"web-1\">\n                        <Link to=\"/web/videos\">\n                            <Icon type=\"youtube\"/>\n                            <span className=\"nav-text\">Videos</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-2\">\n                        <Link to=\"/web/disease\">\n                            <Icon type=\"bell\"/>\n                            <span className=\"nav-text\">Disease</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-3\">\n                        <Link to=\"/web/blog\">\n                            <Icon type=\"pic-right\"/>\n                            <span className=\"nav-text\">Blogs</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-4\">\n                        <Link to=\"/web/event\">\n                            <Icon type=\"notification\"/>\n                            <span className=\"nav-text\">Events</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-5\">\n                        <Link to=\"/web/contact\">\n                            <Icon type=\"phone\"/>\n                            <span className=\"nav-text\">Contacts</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-6\">\n                        <Link to=\"/web/pageseo\">\n                            <Icon type=\"search\"/>\n                            <span className=\"nav-text\">Page SEO</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-7\">\n                        <Link to=\"/web/slider-image\">\n                            <Icon type=\"picture\"/>\n                            <span className=\"nav-text\">Slider Image</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-8\">\n                        <Link to=\"/web/facilities\">\n                            <Icon type=\"gift\"/>\n                            <span className=\"nav-text\">Facilities</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-9\">\n                        <Link to=\"/web/landingpagevideo\">\n                            <Icon type=\"video-camera\"/>\n                            <span className=\"nav-text\">Landing Page Videos</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-10\">\n                        <Link to=\"/web/landingpagecontent\">\n                            <Icon type=\"read\"/>\n                            <span className=\"nav-text\">Landing Page Content</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-11\">\n                        <Link to=\"/web/manageproduct\">\n                            <Icon type=\"hdd\"/>\n                            <span className=\"nav-text\">Manage Product</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"web-12\">\n                        <Link to=\"/web/managetherapy\">\n                            <Icon type=\"box-plot\"/>\n                            <span className=\"nav-text\">Manage Therapy</span>\n                        </Link>\n                    </Menu.Item>\n                </Menu.ItemGroup>\n            </Menu>\n        </Sider>\n    }\n}\n","import React from \"react\";\nimport {Avatar, Card, Form, Row} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD, NUMBER_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, makeFileURL} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_PRODUCT, MANAGE_SINGLE_PRODUCT} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddManageProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editProductData: this.props.editProductData ? this.props.editProductData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editProductData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editProductData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(MANAGE_SINGLE_PRODUCT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Product Name\",\n            key: \"title\",\n            required : true,\n            initialValue: this.state.editProductData ? this.state.editProductData.title : null,\n            type: INPUT_FIELD\n        },{\n            label: \"Product Price\",\n            key: \"price\",\n            required : true,\n            initialValue: this.state.editProductData ? this.state.editProductData.price : null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Product Image\",\n            key: \"image\",\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n            initialValue:this.state.editProductData ? this.state.editProductData.image : null,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editProductData? this.state.editProductData.content : null,\n            required : true,\n            type: QUILL_TEXT_FIELD,\n\n        },];\n\n        let editformProp;\n        if (this.state.editProductData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                        that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(MANAGE_SINGLE_PRODUCT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const formProp = {\n            successFn: function (data) {\n                console.log(\"formaDta\",data);\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n            },\n            errorFn: function () {\n\n            },\n            action: MANAGE_PRODUCT,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/manageproduct/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Product\"\n                                changeRedirect={this.changeRedirect} formProp={editformProp}\n                                    fields={fields}/> : <Redirect to={'web/manageproduct'}/>)}/>\n                <Route exact path='/web/manageproduct/add'\n                       render={() => <TestFormLayout title=\"Add Product\" defaultValues={defaultValues}\n                                changeRedirect={this.changeRedirect} formProp={formProp}\n                                    fields={fields}/>}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/manageproduct'}/>}\n        </Row>\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Icon, Table, Divider, Popconfirm, Avatar} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, makeFileURL, patchAPI} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_PRODUCT, MANAGE_SINGLE_PRODUCT} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Redirect, Link} from \"react-router-dom\";\nimport AddManageProduct from \"./AddManageProduct\"\n\nexport default class ManageProductList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\tproductData:null,\n            loading:true\n\t\t};\n\t\tthis.loadData = this.loadData.bind(this);\n\t\tthis.deleteObject = this.deleteObject.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n        \tconsole.log(\"data a\",data);\n            that.setState({\n                productData: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n\n        getAPI(MANAGE_PRODUCT, successFn, errorFn);\n\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(MANAGE_SINGLE_PRODUCT, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Name',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title:'image',\n            key:'image',\n            dataIndex:'image',\n            render:(item,record)=><Avatar src={makeFileURL(record.image)}/>\n        },{\n            title: 'Description',\n            render: (item)=>{\n                return <div dangerouslySetInnerHTML={{ __html: item.content }}/>\n            }\n        },{\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/manageproduct/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div>\n        \t<Switch>\n        \t\t<Route exact path='/web/manageproduct/edit/:id'\n        \t\t\t\trender={(route) => <AddManageProduct loadData={this.loadData} {...this.state} {...route}/>}/>\n\t        \t<Route exact path='/web/manageproduct/add'\n\t                   render={(route) => <AddManageProduct loadData={this.loadData} {...this.state} {...route}/>}/>\n\t            <Card title=\"Products\" extra={<Link to={\"/web/manageproduct/add\"}> <Button type=\"primary\"><Icon\n\t                type=\"plus\"/> Add</Button></Link>}>\n\t                <Table loading={this.state.loading} dataSource={this.state.productData} columns={coloumns}/>\n\t            </Card>\n\t        </Switch>\n        </div>\n    }\n}","import React from \"react\";\nimport {Card, Form, Row} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_THERAPY, MANAGE_SINGLE_THERAPY} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddManageTherapy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTherapyData: this.props.editTherapyData ? this.props.editTherapyData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editTherapyData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editTherapyData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(MANAGE_SINGLE_THERAPY, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n   \n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Therapy Name\",\n            key: \"title\",\n            required: true,\n            initialValue: this.state.editTherapyData ? this.state.editTherapyData.title : null,\n            type: INPUT_FIELD\n        },{\n            label: \"Therapy Image\",\n            key: \"image\",\n            required: true,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        },{\n            label: \"Content\",\n            key: \"content\",\n            // required: true,\n            initialValue: this.state.editTherapyData ? this.state.editTherapyData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n        let editformProp;\n        if (this.state.editTherapyData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(MANAGE_SINGLE_THERAPY, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.setState({\n                        redirect: true\n                    });\n                    that.props.loadData();\n            },\n            errorFn: function () {\n\n            },\n            action: MANAGE_THERAPY,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/managetherapy/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Therapy\"\n                                changeRedirect={this.changeRedirect} formProp={editformProp}\n                                    fields={fields}/> : <Redirect to={'web/managetherapy'}/>)}/>\n                <Route exact path='/web/managetherapy/add'\n                       render={() => <TestFormLayout title=\"Add Therapy\" defaultValues={defaultValues}\n                                changeRedirect={this.changeRedirect} formProp={formProp}\n                                    fields={fields}/>}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/managetherapy'}/>}\n        </Row>\n    }\n}\n","import React from \"react\";\nimport {Card, Button, Icon, Table, Divider, Popconfirm} from \"antd\";\nimport {INPUT_FIELD, QUILL_TEXT_FIELD ,SUCCESS_MSG_TYPE, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {MANAGE_THERAPY, MANAGE_SINGLE_THERAPY} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Redirect, Link} from \"react-router-dom\";\nimport AddManageTherapy from \"./AddManageTherapy\"\n\nexport default class ManageTherapyList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\ttherapyData:null,\n            loading:true\n\t\t};\n\t\tthis.loadData = this.loadData.bind(this);\n\t\tthis.deleteObject = this.deleteObject.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n        \tconsole.log(\"data a\",data);\n            that.setState({\n                therapyData: data,\n                loading:false\n            })\n        }\n        let errorFn = function () {\n            that.setState({\n                loading:false\n            })\n\n        }\n        console.log(\"product Data\",that.state.therapyData);\n\n        getAPI(MANAGE_THERAPY, successFn, errorFn);\n\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(MANAGE_SINGLE_THERAPY, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        let coloumns = [{\n            title: 'Name',\n            dataIndex: 'title',\n            key: 'title'\n        },{\n            title: 'Description',\n            render: (item)=> {\n                return <div dangerouslySetInnerHTML={{ __html: item.content }}/>\n            }\n        }, {\n            title: 'Actions',\n            render: (item) => {\n                return <div>\n                    <Link to={\"/web/managetherapy/edit/\" + item.id}>Edit</Link>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this item?\"\n                                onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n                </div>\n            }\n        }];\n        return <div>\n        \t<Switch>\n\t        \t<Route exact path='/web/managetherapy/edit/:id'\n        \t\t\t\trender={(route) => <AddManageTherapy loadData={this.loadData} {...this.state} {...route}/>}/>\n\t        \t<Route exact path='/web/managetherapy/add'\n\t                   render={(route) => <AddManageTherapy loadData={this.loadData} {...this.state} {...route}/>}/>\n\t            <Card title=\"Therapy\" extra={<Link to={\"/web/managetherapy/add\"}> <Button type=\"primary\"><Icon\n\t                type=\"plus\"/> Add</Button></Link>}>\n\t                <Table loading={this.state.loading} dataSource={this.state.therapyData} columns={coloumns}/>\n\t            </Card>\n\t        </Switch>\n        </div>\n    }\n}","import React from \"react\";\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport VideosList from './videos/VideosList';\nimport BlogList from \"./blog/BlogList\";\nimport ContactsList from \"./contacts/ContactsList\";\nimport DiseaseList from \"./disease/DiseaseList\";\nimport EventsList from \"./events/EventsList\";\nimport SEOList from \"./seo/SEOList\";\nimport SliderImageList from \"./sliderImages/SliderImageList\";\nimport FacilityList from \"./facilities/FacilityList\";\nimport LandingPageVideoList from \"./landingPageVideos/LandingPageVideoList\";\nimport LandingPageContentList from \"./landingPageContent/LandingPageContentList\";\nimport WebAdminSider from \"./WebAdminSider\";\nimport ManageProductList from \"./manageProduct/ManageProductList\";\nimport ManageTherapyList from \"./manageTherapy/ManageTherapyList\";\nimport Error404 from \"../common/errors/Error404\";\n\nconst Content = Layout.Content;\n\n\nexport default class WebAdminHome extends React.Component {\n\n    render() {\n        return <Content className=\"main-container\" style={{\n            // margin: '24px 16px',\n            // padding: 24,\n            minHeight: 280,\n            // marginLeft: '200px'\n        }}>\n            <Layout>\n                <WebAdminSider {...this.props}/>\n                <Content style={{\n                    margin: '24px 16px',\n                    // padding: 24,\n                    minHeight: 280,\n                    // marginLeft: '200px'\n                }}>\n                    <Switch>\n                        <Route path=\"/web/videos\" render={(route) => <VideosList/>}/>\n                        <Route path=\"/web/blog\" render={(route) => <BlogList/>}/>\n                        <Route path=\"/web/contact\" render={(route) => <ContactsList/>}/>\n                        <Route path=\"/web/disease\" render={(route) => <DiseaseList/>}/>\n                        <Route path=\"/web/event\" render={(route) => <EventsList/>}/>\n                        <Route path=\"/web/pageseo\" render={(route) => <SEOList/>}/>\n                        <Route path=\"/web/slider-image\" render={(route) => <SliderImageList/>}/>\n                        <Route path=\"/web/facilities\" render={(route) => <FacilityList/>}/>\n                        <Route path=\"/web/landingpagevideo\" render={(route) => <LandingPageVideoList/>}/>\n                        <Route path=\"/web/landingpagecontent\" render={(route) => <LandingPageContentList/>}/>\n                        <Route path=\"/web/manageproduct\" render={(route) => <ManageProductList/>}/>\n                        <Route path=\"/web/managetherapy\" render={(route) => <ManageTherapyList/>}/>\n                        <Route component={Error404}/>\n                    </Switch>\n                </Content>\n            </Layout>\n        </Content>\n    }\n}\n"],"sourceRoot":""}