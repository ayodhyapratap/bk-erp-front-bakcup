{"version":3,"sources":["app.config.js","app/constants/formLabels.js","app/components/core/AppHeader.js","app/components/core/AppSider.js","app/components/auth/forms/ChangePasswordForm.js","app/components/auth/Profile.js","app/components/patients/patient/PrintPatientForm.js","app/components/calendar/CreateAppointmentForm.js","app/components/calendar/CreateAppointment.js","app/components/calendar/BlockCalendar.js","app/components/core/SuggestionBox.js","crashHandling/ErrorBoundary.js","crashHandling/utils/crashHandlingUtils.js","app/components/core/AppBase.js","app/components/auth/forms/LoginForm.js","app/components/auth/forms/LogintWithPhone.js","app/components/auth/Auth.js","App.js","serviceWorker.js","index.js","app/utils/common.js","app/components/common/errors/PermissionDenied.js","app/constants/api.js","app/utils/permissionUtils.js","app/assets/img/kidneycarelogo.png","app/components/common/DynamicFieldsForm.js","app/config/connect.js","app/utils/clinicUtils.js","app/components/common/errors/Error404.js","app/components/calendar/EventPatientPopover.js","app/constants/hardData.js","app/components/common/WebCamField.js","app/constants/messages.js","app/utils/auth.js","app/constants/dataKeys.js"],"names":["CONFIG","backendBaseUrl","imageBaseUrl","prodDomain","crashHandling","slack","sendOnProduction","sendOnDevelopment","webHookUrl","EMAIL","PASSWORD","CURRENT_PRACTICE","OLD_PASSWORD","NEW_PASSWORD","Header","AppHeader","props","searchPatient","value","that","setState","prevState","searchPatientString","getAPI","interpolate","SEARCH_PATIENT","data","patientListData","results","switchPortal","SAVE_CREDENTIALS","user","id","setUserCredentials","login","password","displayMessage","ERROR_MSG_TYPE","handlePatientSelect","event","history","push","replace","CUSTOM_STRING_SEPERATOR","state","email","msg","startLoadingMessage","sessionStorage","removeItem","reqData","getItem","postOuterAPI","CREDENTIALS","success","stopLoadingMessage","SUCCESS_MSG_TYPE","setItem","token","window","open","this","userMenu","Item","key","to","Divider","onClick","logout","style","background","padding","boxShadow","zIndex","float","margin","className","type","collapsed","toggleSider","mode","lineHeight","placeholder","showSearch","onSearch","defaultActiveFirstOption","showArrow","filterOption","onSelect","map","option","Option","toString","Meta","avatar","image","src","makeFileURL","backgroundColor","first_name","charAt","title","custom_id","description","activePracticePermissions","PatientPhoneNumber","mobile","hideMobile","Group","AddPatient","allowAllPermissions","MergePatients","onChange","switchPractice","defaultValue","active_practiceId","width","maxWidth","practiceList","practice","name","is_superuser","color","overlay","placement","icon","React","Component","Sider","SubMenu","AppSider","ItemGroup","onOpenChange","openKeys","latestOpenKey","find","indexOf","onHotKeyDown","bind","keyNm","console","log","keyName","OUTER_KEYS_HOTKEYS","onKeyDown","trigger","collapsible","breakpoint","onBreakpoint","broken","onCollapse","Applogo","alt","defaultSelectedKeys","theme","ViewCalendar","currentPatient","WebAdmin","FormItem","ChangePasswordForm","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","changePassLoading","oldPass","newPass","postAPI","CHANGE_PASSWORD","message","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validatePassword","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","onSubmit","label","rules","required","prefix","validator","onBlur","loading","htmlType","Content","Profile","USER_DATA","userProfile","ChangePasswordLayout","create","minHeight","size","dataSource","activePracticeData","permissions_data","renderItem","item","gutter","UsersRow","marginBottom","textAlign","PrintPatientForm","setTimeout","print","newProps","http-equiv","content","marginTop","borderBottom","logo","fontSize","address","locality","city","pincode","contact","website","colSpan","display","TextArea","Radio","Checkbox","CreateAppointmentForm","loadPracticeTiming","CALENDER_SETTINGS","dataObject","length","timing","DAY_KEYS","forEach","dayKey","visting_hour_same_week","startTime","moment","first_start_time","endTime","second_end_time","is_two_sessions","lunch","lunchStartTime","first_end_time","lunchEndTime","second_start_time","calendarTimings","findOutsidePracticeTiming","loadDoctorsTiming","timeToCheckBlock","doctor","DOCTOR_VISIT_TIMING_API","doctorTimings","findOutsideDoctorTiming","setBlockedTiming","loadAppointmentList","findBlockedTiming","BLOCK_CALENDAR","blockRow","practiceBlock","doctorBlock","cal_fdate","schedule_at","format","cal_tdate","add","slot","flag","dayValue","isValid","toLowerCase","daysTimings","practiceOutsideAvailableTiming","doctorOutsideAvailableTiming","validateFields","saving","formData","patient","patientDetails","patient_name","patient_email","patient_mobile","undefined","successFn","goBack","loadData","errorFn","appointment","putAPI","APPOINTMENT_API","ALL_APPOINTMENT_API","PATIENT_PROFILE","handleClick","redirect","practice_doctors","appointmentCategories","procedure_category","treatmentNotes","practice_staff","appointmentDetail","procedureObjectsById","changeRedirect","loadDoctors","loadProcedureCategory","loadTreatmentNotes","loadAppointment","loadAppointmentCategories","match","params","appointmentid","location","search","pairValueArray","substr","split","keyValue","PRACTICESTAFF","selectedDoctor","staff","usersdata","role","DOCTORS_ROLE","PROCEDURE_CATEGORY","obj","pagination","EMR_TREATMENTNOTES","APPOINTMENT_CATEGORIES","redirectVar","current","apiParams","start_time","end_time","APPOINTMENT_SCHEDULE","appointmentList","formLayout","formPatients","offset","treatmentNotesOption","drug","categoryOptions","category","appointmentTime","Date","spinning","initialValue","REQUIRED_FIELD_MESSAGE","showTime","showIcon","min","listStyle","paddingLeft","paddingRight","border","marginLeft","doctor_data","bordered","status","APPOINTMENT_STATUS","notes","CreateAppointment","defaultValues","TestFormLayout","exact","path","render","route","BlockCalendar","changeParamsForBlockedAppointments","blockedAppointmentParams","retrieveBlockingAppointments","block_from","block_to","APPOINTMENT_PERPRACTICE_API","blockingAppointments","start","end","practiceDoctors","apppointment","CANCELLED_STATUS","borderRadius","textDecoration","borderLeft","doctors_object","calendar_colour","AppointmentCard","changeAppointmentStatus","EventPatientPopover","appointmentId","SuggestionBox","onClose","close","SUGGESTIONS","visible","layout","autosize","minRows","maxRows","marginRight","ErrorBoundary","redirectToHome","hasError","error","errorInfo","crashData","hostname","text","componentStack","pathname","loggedInUser","logErrorToSlackChannel","subTitle","extra","children","Calendar","loadable","ReportsHome","WebAdminHome","InventoryHome","MeetingBooking","SettingsDash","PatientHome","AppBase","showDrawer","loggedInactivePractice","loggedInUserPractices","specialisations","loadingPermissions","activeData","permissions","practice_permissions","permission","codename","global_permissions","activePracticeObj","practiceObj","setCurrentPractice","loadUserDetails","practiceId","tip","height","position","right","bottom","shape","AddAppointment","PermissionDenied","EditAppointment","refreshClinicData","ViewMeeting","component","Error404","LoginForm","handleOk","makeURL","RESET_PASSWORD_MAIL","userMail","resetModalVisible","handleCancel","isLoading","username","showResetModal","changeUserMail","onOk","onCancel","okText","LoginWithPhone","setPhone","sendOTP","phone","otpSent","sendLoginOTP","LOGIN_RESEND_OTP","LOGIN_SEND_OTP","WARNING_MSG_TYPE","block","Auth","LoginFormLayout","PasswordResetForm","DynamicFieldsForm","LoginWithPhoneLayout","tokenDefaultValues","resetPasswordFields","PASSWORD_FIELD","formProp","action","RESET_PASSWORD","method","xs","sm","md","lg","xl","AppLogo","minWidth","fields","href","App","ReactGA","initialize","production","prevProps","pageview","withOtp","logInUser","logInUserWithOtp","logOutUser","banner","closable","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","URL","API_URL","IMAGE_BASE_URL","headerConfig","axios","url","headers","Authorization","getAuthToken","response","detail","catch","handleErrorResponse","patchAPI","info","ERROR_MESSAGE_404","ERROR_MESSAGE_500","theString","argumentArray","regex","reduce","p","c","INFO_MSG_TYPE","warning","msgFn","finishMsgType","finishMsg","PASS_LEN","PASS_UPPER","toUpperCase","PASS_LOWER","PASS_DIGIT","test","PASS_SPEC","saveCommonSettings","lockr","getCommonSettings","savedStates","removeEmpty","Object","keys","k","BACKEND_BASE_URL","CONFIG_API","FILE_UPLOAD_API","FILE_UPLOAD_BASE64","LOGIN_URL","OTP_LOGIN_URL","ENABLE_STAFF_IN_PRACTICE","USER_PRACTICE_PERMISSIONS","SET_USER_PERMISSION","SET_SPECIFIC_USER_PERMISSION","ALL_PRACTICE","ALL_PERMISSIONS","UPDATE_BULK_PERMISSIONS","PRACTICE","PRACTICE_DELETE","TAXES","OFFERS","PAYMENT_MODES","PROMO_CODE","SINGLE_PROMO_CODE","CHECK_PROMO_CODE","EMR_DIAGNOSES","EMR_COMPLAINTS","EMR_OBSERVATIONS","EMR_INVESTIGATIONS","EMR_FILETAGS","EMR_VITAL_SIGNS","EMR_MEDICATION","ALL_PRACTICE_STAFF","SINGLE_PRACTICE_STAFF_API","PATIENTS_LIST","MERGE_PATIENTS","STAFF_ROLES","MEDICAL_HISTORY","PATIENT_FILES","PATIENT_LEDGER","EXPENSE_TYPE","DRUG_CATALOG","SINGLE_DRUG_CATALOG","LABTEST_API","COMMUNICATONS_API","EMAIL_COMMUNICATONS_API","PATIENT_GROUPS","VITAL_SIGNS_API","PRESCRIPTIONS_API","PATIENT_NOTES","LABPANEL_API","PATIENT_TIMELINE_API","PATIENT_TIMELINE_PDF","ALL_MEDICAL_CERITICATE_API","MEDICAL_CERTIFICATE_API","MEDICAL_MEMBERSHIP_CANCEL_API","PATIENTS_MEMBERSHIP_API","PATIENT_MAILEDFILES","TREATMENTPLANS_API","TREATMENTPLANS_MARK_COMPLETE_API","INVOICES_API","SINGLE_INVOICES_API","INVOICE_PDF_API","CREATE_OR_EDIT_INVOICES","SINGLE_INVOICE_API","PATIENT_CLINIC_NOTES_API","PATIENT_PAYMENTS_API","SINGLE_PAYMENT_API","BULK_PAYMENT_API","PRACTICE_PRINT_SETTING_API","SAVE_ALL_PRINT_SETTINGS","PATIENT_COMMUNICATION_HISTORY_API","PRESCRIPTION_TEMPLATE","UNPAID_PRESCRIPTIONS","CANCELINVOICE_GENERATE_OTP","CANCELINVOICE_VERIFY_OTP","CANCELINVOICE_RESENT_OTP","INVOICE_RETURN_API","SINGLE_RETURN_API","RETURN_INVOICE_PDF_API","ADVANCED_SEARCH_PATIENT","PATIENT_PENDING_AMOUNT","AVAILABLE_ADVANCE","EXTRA_DATA","COUNTRY","STATE","CITY","SOURCE","PATIENTS_REPORTS","ACTIVE_PATIENTS_REPORTS","MEMBERSHIP_REPORTS","FIRST_APPOINTMENT_REPORTS","PATIENT_APPOINTMENTS_REPORTS","EMR_REPORTS","PRODUCTS_API","INVENTORY_RETAILS_REPORT","EXPENSE_PAYMENT_MODE_API","EXPENSE_REPORT_API","INVENTORY_REPORT_API","MLM_Reports","MLM_Agent_Wallet","PAYMENT_REPORTS","INCOME_REPORTS","RETURN_INVOICE_REPORTS","AMOUNT_DUE_REPORTS","APPOINTMENT_REPORTS","DRUG_TYPE_API","DRUG_UNIT_API","PRINT_PREVIEW_RENDER","MEMBERSHIP_API","BED_BOOKING_REPORTS","ACCEPT_PAYMENT","MAILING_USERS_LIST","BLOG_POST","SINGLE_POST","BLOG_VIDEOS","SINGLE_VIDEO","BLOG_DISEASE","SINGLE_DISEASE","BLOG_EVENTS","SINGLE_EVENTS","BLOG_CONTACTUS","SINGLE_CONTACT","BLOG_PAGE_SEO","SINGLE_PAGE_SEO","BLOG_SLIDER","SINGLE_SLIDER","BLOG_FACILITY","SINGLE_FACILITY","LANDING_PAGE_CONTENT","SINGLE_LANDING_PAGE_CONTENT","LANDING_PAGE_VIDEO","SINGLE_LANDING_PAGE_VIDEO","MANAGE_PRODUCT","MANAGE_SINGLE_PRODUCT","MANAGE_THERAPY","MANAGE_SINGLE_THERAPY","EXPENSES_API","SINGLE_EXPENSES_API","VENDOR_API","SINGLE_VENDOR_API","ACTIVITY_API","LAB_API","SINGLE_LAB_API","MANUFACTURER_API","SINGLE_MANUFACTURER_API","INVENTORY_ITEM_API","SINGLE_INVENTORY_ITEM_API","STOCK_ENTRY","BULK_STOCK_ENTRY","SUPPLIER_API","SEARCH_THROUGH_QR","BILL_SUPPLIER","INVENTORY_ITEM_EXPORT","PRODUCT_MARGIN","SINGLE_PRODUCT_MARGIN","GENERATE_MLM_COMMISSON","AGENT_ROLES","AGENT_WALLET","WALLET_LEDGER","WALLET_LEDGER_SUM","MY_AGENTS","PRESCRIPTION_PDF","VITAL_SIGN_PDF","CLINIC_NOTES_PDF","TREATMENTPLANS_PDF","MEDICAL_CERTIFICATE_PDF","PAYMENT_PDF","ROOM_TYPE","BED_PACKAGES","MEDICINE_PACKAGES","BOOK_SEAT","CHECK_SEAT_AVAILABILITY","DISEASE_LIST","AGENT_TREE","MEETING_USER","MEETINGS","MEETING_DETAILS","SINGLE_MEETING","substring","repeat","hideEmail","module","exports","RadioGroup","CheckboxGroup","fieldDecorators","field","urlInitialValues","MULTI_SELECT_FIELD","object","colorPickerKey","colorPickerColor","formFields","SINGLE_IMAGE_UPLOAD_FIELD","file","image_path","MULTI_IMAGE_UPLOAD_FIELD","fileList","TIME_PICKER","DATE_PICKER","DATE_TIME_PICKER","QUILL_TEXT_FIELD","editorState","draftToHtml","convertToRaw","getCurrentContent","beforeSend","confirm","confirmText","submitForm","addMailTemplateTag","currentHtml","EditorState","createWithContent","ContentState","createFromBlockArray","htmlToDraft","toggleWebCam","webCamState","getImageandUpload","fieldKey","FormData","append","setFieldsValue","onEditorStateChange","disabled","countryOptions","stateOptions","cityOptions","smsFields","resetFormData","colorChange","loadCountryData","addSMSTag","nextProps","COUNTRY_FIELD","urlInitialValue","isNaN","parseInt","parseFloat","hex","states","country","cities","prevValue","INPUT_FIELD","follow","SELECT_FIELD","options","RADIO_FIELD","CHECKBOX_FIELD","SINGLE_CHECKBOX_FIELD","valuePropName","NUMBER_FIELD","max","TEXT_FIELD","inputChange","SMS_FIELD","MAIL_TEMPLATE_FIELD","createEmpty","preview","maxHeight","overflowY","dangerouslySetInnerHTML","__html","COLOR_PICKER","singleUploadprops","authorization","allowWebcam","Math","random","footer","getScreenShot","multiuploadprops","img","setAddressField","STATE_FIELD","EMAIL_FIELD","CITY_FIELD","DIVIDER_FIELD","LABEL_FIELD","RAZORPAY_KEY","patientSettingMenu","hashCode","str","hash","i","charCodeAt","intToRGB","loadConfigParameters","parameters","join","loadMailingUserListForReportsMail","mailingUsersList","sendReportMail","loadAppointmentDetails","updateAppointmentStatus","currentStatus","targetStatus","WAITING_STATUS","waiting","ENGAGED_STATUS","engaged","CHECKOUT_STATUS","checkout","gender","from","showStatusTimeline","overflow","SCHEDULE_STATUS","ChangeAppointmentStatus","category_data","onConfirm","cancelText","PAYMENT_TYPES","DISEASE_TYPES","DRUG","EQUIPMENT","SUPPLIES","PROCEDURES","PRESCRIPTIONS","INVENTORY","INVENTORY_ITEM_TYPE","ADD_STOCK","CONSUME_STOCK","APPOINTMENT_CONFIRMATION_SMS_TAG_OPTIONS","EMR_TYPE","BILLING_TYPE","EMR_SUB_TYPE","BILLING_SUB_TYPE","CUSTOMIZE_PAPER_TYPE","PAPER_SIZE","PAGE_ORIENTATION","PRINTER_TYPE","HEADER_INCLUDE","LOGO_TYPE","LOGO_ALIGMENT","LOGO_INCLUDE","PATIENT_DETAILS_LIST","EXCLUDE_PATIENT_DOB","SMS_ENABLE","EMAIL_ENABLE","BIRTHDAY_SMS_ENABLE","DURATIONS_UNIT","DOSE_REQUIRED","TYPE_OF_CONSUMPTION","NOTES","DEFAULT_TEMPERATURE_IN","DEFAULT_TEMPERATURE_METHOD","DEFAULT_BP_METHOD","PAYMENT_STATUS","OPD_IPD","ROLES","PATIENTS_RELATED_REPORT","DAILY_NEW_PATIENTS","EXPIRING_MEMBERSHIP","PATIENTS_FIRST_APPOINTMENT","MONTHLY_NEW_PATIENTS","NEW_MEMBERSHIP","ACTIVE_PATIENTS","FOLLOW_UP","MEDICINE","APPOINTMENT_RELATED_REPORT","APPOINTMENT_FOR_EACH_CATEGORY","CANCELLATION_NUMBERS","AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE","AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE","DAILY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_DOCTOR","MONTHLY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_PATIENT_GROUP","APPOINTMENT_FOR_PATIENT_CONVERSION","EMR_RELATED_REPORT","DAILY_TREATMENT_COUNT","TREATMENTS_FOR_EACH_DOCTOR","MONTHLY_TREATMENT_COUNT","TREATMENT_FOR_EACH_CATEGORY","AMOUNT_DUE_RELATED_REPORT","AGEING_AMOUNT_DUE","AMOUNT_DUE_PER_DOCTOR","BLOOD_GROUPS","EXPENSE_RELATED_REPORT","DAILY_EXPENSES","EXPENSES_EACH_TYPE","MONTHLY_EXPENSES","INVENTORY_RELATED_REPORT","DAILY_INVENTORY","MONTHLY_INVENTORY","TOP_INVENTORY","BED_BOOKING_RELATED_REPORT","DAILY_BOOKING_COUNT","MONTHLY_BOOKING_COUNT","MEDICINE_USAGE_COUNT","BED_BOOKING_PACKAGE_COUNT","MLM_RELATED_REPORT","MARGIN_TYPE_WISE","WALLET_BALANCE_AMOUNT","AGENT_TREE_VIEW","PAYMENT_RELATED_REPORT","PAYMENT_REFUND","PATIENTS_UNSETTLED_ADVANCE","PAYMENT_RECEIVED_PATIENT_GROUP","MODE_OF_PAYMENTS","PAYMENT_RECEIVED_PER_DAY","PAYMENT_RECEIVED_PER_DOCTOR","PAYMENT_RECEIVED_PER_MONTH","PAYMENT_SETTLEMENT","PAYMENT_SETTLEMENT_PER_DOCTOR","CREDIT_NOTES","CREDIT_AMOUNT_PER_DOCTOR","INCOME_RELATED_REPORT","DAILY_INCOME","MONTHLY_INCOME","TAXED_INCOME","DOCTOR_EACH_INCOME","PROCEDURE_INCOME","PATIENT_GROUPS_INCOME","PRODUCT_INCOME","INVOICE_RELATED_REPORT","DAILY_WISE_RETURN_INVOICE","MONTHLY_WISE_RETURN_INVOICE","RETURN_INVOICE_FOR_EACH_TAX","RETURN_INVOICE_FOR_EACH_PROCEDURE","RETURN_INVOICE_FOR_EACH_PRODUCT","RETURN_INVOICE_FOR_EACH_DOCTOR","RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS","SCHEDULE_OF_INVOICES","DISCOUNT","SCHEDULE_OF_PAYMENT","PATIENT_AGE","INNER_KEYS_HOTKEYS","ADVANCED_SEARCH","HAS_AGE","HAS_DOB","HAS_AADHAR_ID","HAS_EMAIL","HAS_GENDER","HAS_PINCODE","HAS_STREET","REFERED_BY_AGENT","GENDER_OPTION","CURRENCY_TYPE","ROUTES_TO_HIDE_PATIENT_SIDE_PANEL","PROMO_CODE_SMS_TAG_OPTIONS","BLOOD_GROUP_CONFIG_PARAM","PATIENT_SOURCE_CONFIG_PARAM","SMS_LANGUAGE_CONFIG_PARAM","FAMILY_RELATION_CONFIG_PARAM","GENDER_CONFIG_PARAM","INCOME_TYPE","WebCamField","setRef","webcam","capture","imageSrc","getScreenshot","audio","ref","videoConstraints","facingMode","screenshotFormat","get","ROLE","AUTH_TOKEN","set","currentPractice","post","practice_list","phone_no","otp","callBackFn","callBackErrorFn","rm","GROUP","CALENDAR_SETTINGS","NEW_PATIENTS","ALL_APPOINTMENT","TOTAL_AMOUNT_DUE","ALL_TREATMENTS","ALL","ALL_EXPENSES","ALL_INVENTORY","ALL_PAYMENTS","ALL_INVOICE","ALL_INVOICE_RETURN","RELATION","CHOOSE","OTP_DELAY_TIME","ASCENDING_ORDER"],"mappings":"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","file":"static/js/main.4205c7de.chunk.js","sourcesContent":["/***\n * App Default Config\n * */\n\nconst CONFIG = {\n    backendBaseUrl: '',\n    imageBaseUrl : '/media',\n    prodDomain : [\"clinic.bkarogyam.com\",\"bk-erp.plutonic.co.in\"],\n    crashHandling : {\n        slack : {\n            sendOnProduction : true,\n            sendOnDevelopment : false,\n            webHookUrl : \"https://hooks.slack.com/services/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\",\n        }\n    }\n}\nexport default CONFIG;\n","\nexport const EMAIL = 'email';\nexport const PASSWORD = 'password';\nexport const AUTH_TOKEN = 'token';\nexport const ROLE = 'role';\nexport const CURRENT_PRACTICE = 'current_practice';\nexport const OLD_PASSWORD = 'old_password';\nexport const NEW_PASSWORD = 'new_password';\nexport const PHONE = 'phone';\nexport const OTP = 'otp'\n","import React from \"react\";\nimport {AutoComplete, Avatar, Button, Dropdown, Icon, Layout, List, Menu, Select, Tag} from \"antd\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {\n    displayMessage,\n    getAPI,\n    handleErrorResponse,\n    interpolate,\n    makeFileURL,\n    makeURL,\n    postOuterAPI, startLoadingMessage, stopLoadingMessage\n} from \"../../utils/common\";\nimport {CREDENTIALS, PATIENT_PROFILE, SAVE_CREDENTIALS, SEARCH_PATIENT, SWITCH_PORTAL} from \"../../constants/api\";\nimport {hideMobile} from \"../../utils/permissionUtils\";\nimport axios from \"axios\";\nimport {getAuthToken} from \"../../utils/auth\";\nimport {ERROR_MSG_TYPE, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\nimport {CUSTOM_STRING_SEPERATOR} from \"../../constants/hardData\";\n\nconst {Header} = Layout;\n\nclass AppHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientListData: [],\n            // searchPatientString: null,\n            // loading:false\n        }\n    }\n\n    searchPatient = (value) => {\n        let that = this;\n        this.setState(function (prevState) {\n            return {\n                searchPatientString: value\n            }\n        });\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if (prevState.searchPatientString == value)\n                    return {\n                        patientListData: [...data.results],\n                    }\n                return {}\n            })\n        };\n        let errorFn = function (data) {\n            that.setState({\n                searchPatientString: null,\n            })\n        };\n        if (value) {\n            getAPI(interpolate(SEARCH_PATIENT, [value]), successFn, errorFn);\n        }\n\n    };\n\n    setUserCredentials(email, password) {\n        let that = this;\n        let msg = startLoadingMessage(\"Waiting for authentication from server...\");\n        sessionStorage.removeItem('token');\n        let reqData = {\n            email: email,\n            password: password\n        };\n        let successFn = function (data) {\n            if (data.success) {\n                stopLoadingMessage(msg, SUCCESS_MSG_TYPE, \" Authentication Successfully!!\");\n                sessionStorage.setItem(\"token\", data.token);\n            }\n            if (sessionStorage.getItem('token')) {\n                window.open('/task/');\n            } else {\n                stopLoadingMessage(msg, ERROR_MSG_TYPE, \"Authentication failed. User not found.\");\n            }\n\n        };\n        let errorFn = function () {\n\n        };\n        if (sessionStorage.getItem('token') == null) {\n            postOuterAPI(CREDENTIALS, reqData, successFn, errorFn);\n        }\n\n    };\n\n    switchPortal = () => {\n        let that = this;\n        let successFn = function (data) {\n            if (data) {\n                that.setUserCredentials(data.login, data.password);\n                // that.setUserCredentials(data.email,data.password);\n            }\n\n        };\n        let errorFn = function () {\n            displayMessage(ERROR_MSG_TYPE, \"Something went wrong.\");\n        };\n\n        getAPI(interpolate(SAVE_CREDENTIALS, [that.props.user.id]), successFn, errorFn);\n    };\n\n\n    handlePatientSelect = (event) => {\n        if (event) {\n            this.props.history.push(\"/patient/\" + event.replace(CUSTOM_STRING_SEPERATOR,'') + \"/profile\");\n            this.setState({\n                searchPatientString: null,\n            });\n        }\n    }\n\n    render() {\n        let that = this;\n        const userMenu = (\n            <Menu>\n                <Menu.Item key=\"profile\">\n                    <Link to=\"/profile\">Profile</Link>\n                </Menu.Item>\n                <Menu.Divider/>\n                <Menu.Item key={\"website\"} onClick={this.switchPortal}>\n                    <small>Switch to Tasks ></small>\n                </Menu.Item>\n                <Menu.Divider/>\n                <Menu.Item key=\"logout\">\n                    <a onClick={this.props.logout}>Log out</a>\n                </Menu.Item>\n            </Menu>\n        );\n        return <Header style={{background: '#fff', padding: 0, boxShadow: '0 2px 4px 0 rgba(38,50,69,.2)', zIndex: 1}}>\n            <div style={{float: 'left', margin: '0px 20px'}}>\n                <Icon\n                    className=\"trigger\"\n                    type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                    onClick={() => this.props.toggleSider(!this.props.collapsed)}\n                />\n            </div>\n            <Menu mode=\"horizontal\"\n                  style={{lineHeight: '64px'}}>\n                <Menu.Item key=\"5\">\n                    <AutoComplete placeholder=\"Patient Name\"\n                                  showSearch\n                                  onSearch={this.searchPatient}\n                                  defaultActiveFirstOption={false}\n                                  showArrow={false}\n                                  value={this.state.searchPatientString}\n                                  filterOption={false}\n                                  onSelect={this.handlePatientSelect}>\n                        {this.state.patientListData.map((option) => <AutoComplete.Option\n                            value={option.id.toString() + CUSTOM_STRING_SEPERATOR}>\n                            <List.Item style={{padding: 0}}>\n                                <List.Item.Meta\n                                    avatar={(option.image ? <Avatar src={makeFileURL(option.image)}/> :\n                                        <Avatar style={{backgroundColor: '#87d068'}}>\n                                            {option.user.first_name ? option.user.first_name.charAt(0) :\n                                                <Icon type=\"user\"/>}\n                                        </Avatar>)}\n                                    title={option.user.first_name + \" (\" + (option.custom_id ? option.custom_id : option.user.id) + \")\"}\n                                    description={that.props.activePracticePermissions.PatientPhoneNumber ? option.user.mobile : hideMobile(option.user.mobile)}\n                                />\n                            </List.Item>\n                        </AutoComplete.Option>)}\n                    </AutoComplete>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                    <Button.Group>\n                        {that.props.activePracticePermissions.AddPatient || that.props.allowAllPermissions ?\n                            <Link to={\"/patients/profile/add\"}>\n                                <Button type={\"primary\"}>\n                                    <Icon type={\"plus\"}/>Add Patient\n                                </Button>\n                            </Link> : null}\n                        {that.props.activePracticePermissions.MergePatients || that.props.allowAllPermissions ?\n                            <Link to={\"/patients/merge\"}>\n                                <Button type={\"primary\"}>\n                                    <Icon type={\"user-add\"}/>Merge Patients\n                                </Button>\n                            </Link> : null}\n                    </Button.Group>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                    <Select onChange={this.props.switchPractice} defaultValue={this.props.active_practiceId}\n                            value={this.props.active_practiceId}\n                            style={{width: '300px', maxWidth: '70vw'}}>\n                        {this.props.practiceList && this.props.practiceList.map((option) => <Select.Option\n                            key={option.practice.id}\n                            value={option.practice.id}>{option.practice.name}</Select.Option>)}\n                    </Select>\n                </Menu.Item>\n                {/*<Menu.Item key=\"3\"><Search*/}\n                {/*placeholder=\"Search\"*/}\n                {/*onSearch={value => console.log(value)}*/}\n                {/*style={{width: 200}}*/}\n                {/*/></Menu.Item>*/}\n\n                <div style={{float: 'right', margin: '0px 20px'}}>\n                    {this.props.user && this.props.user.is_superuser ? <Tag color={\"red\"}>SuperUser</Tag> : null}\n                    <Dropdown overlay={userMenu} placement=\"bottomRight\">\n\n                        <Avatar style={{backgroundColor: '#87d068'}} icon=\"user\"/>\n                    </Dropdown>\n                </div>\n\n            </Menu>\n        </Header>\n    }\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport {Divider, Icon, Layout, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Applogo from '../../assets/img/kidneycarelogo.png'\nimport {OUTER_KEYS_HOTKEYS} from \"../../constants/hardData\";\nimport Hotkeys from \"react-hot-keys\";\n\nconst Sider = Layout.Sider;\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass AppSider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openKeys: [],\n        }\n        this.onHotKeyDown = this.onHotKeyDown.bind(this);\n    }\n\n    onOpenChange = (openKeys) => {\n        const rootSubmenuKeys = ['sub1', 'sub2'];\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({openKeys});\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    onHotKeyDown(keyNm) {\n        console.log(keyNm);\n        let that = this;\n        switch (keyNm) {\n            case 'alt+c':\n                that.props.history.push(\"/calendar\");\n                break;\n            case 'alt+p':\n                that.props.history.push(\"/patients/profile\");\n                break;\n            case 'alt+r':\n                that.props.history.push(\"/reports/appointments\");\n                break;\n            case 'alt+s':\n                that.props.history.push('/settings/clinics');\n                break;\n            case 'alt+b':\n                that.props.history.push(\"/inventory\");\n                break;\n            case 'alt+w':\n                that.props.history.push(\"/web/videos\");\n                break;\n        }\n    }\n\n\n    render() {\n        let that = this;\n        return <Hotkeys keyName={OUTER_KEYS_HOTKEYS} onKeyDown={(value) => this.onHotKeyDown(value)}>\n            <Sider\n                // style={{background: '#fff'}}\n                trigger={null}\n                collapsible\n                collapsed={this.props.collapsed}\n                style={{zIndex: 1}}\n                breakpoint=\"xxl\"\n                // collapsedWidth=\"0\"\n                onBreakpoint={(broken) => {\n                    // console.log(broken);\n                    that.props.toggleSider(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    // console.log(collapsed, type);\n                }}>\n                <img src={Applogo} alt=\"\" style={{width: '100%', padding: '20px'}}/>\n\n                <Menu mode=\"inline\" defaultSelectedKeys={['1']}\n                      openKeys={this.state.openKeys}\n                      onOpenChange={this.onOpenChange}\n                      theme=\"dark\">\n                    {this.props.activePracticePermissions.ViewCalendar ?\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/calendar\">\n                                <Icon type=\"schedule\"/>\n                                <span className=\"nav-text\"><span\n                                    className={\"shortcutLetterHighlight\"}>C</span>alendar</span>\n                            </Link>\n                        </Menu.Item> : null}\n                    <Menu.Item key=\"26\">\n                        <Link\n                            to={this.props.currentPatient ? \"/patient/\" + this.props.currentPatient.id + \"/profile\" : \"/patients/profile\"}>\n                            <Icon type=\"user\"/>\n                            <span className=\"nav-text\"><span\n                                className={\"shortcutLetterHighlight\"}>P</span>atients</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"27\">\n                        <Link to=\"/reports/appointments\">\n                            <Icon type=\"bar-chart\"/>\n                            <span className=\"nav-text\"><span className={\"shortcutLetterHighlight\"}>R</span>eports</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"5\">\n                        <Link to=\"/settings/clinics\">\n                            <Icon type=\"setting\"/>\n                            <span className=\"nav-text\"><span\n                                className={\"shortcutLetterHighlight\"}>S</span>ettings</span>\n                        </Link>\n                    </Menu.Item>\n                    <SubMenu key=\"sub1\"\n                             title={<span><Icon type=\"gold\"/><span><span className={\"shortcutLetterHighlight\"}>B</span>ack Office</span></span>}>\n                        <Menu.Item key=\"6\">\n                            <Link to=\"/inventory/expenses\">\n                                <Icon type=\"credit-card\"/>\n                                <span className=\"nav-text\">Expenses</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"7\">\n                            <Link to=\"/inventory/activity\">\n                                <Icon type=\"bell\"/>\n                                <span className=\"nav-text\">Activities</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"8\">\n                            <Link to=\"/inventory/manufacture\">\n                                <Icon type=\"database\"/>\n                                <span className=\"nav-text\">Manufacturers</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"42\">\n                            <Link to=\"/inventory/vendor\">\n                                <Icon type=\"database\"/>\n                                <span className=\"nav-text\">Vendor</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"9\">\n                            <Link to=\"/inventory/lab\">\n                                <Icon type=\"experiment\"/>\n                                <span className=\"nav-text\">Labs</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"10\">\n                            <Link to=\"/inventory\">\n                                <Icon type=\"gold\"/>\n                                <span className=\"nav-text\">Inventory</span>\n                            </Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    {this.props.activePracticePermissions.WebAdmin ?\n                        <Menu.Item key=\"web-1\">\n                            <Link to=\"/web/videos\">\n                                <Icon type=\"google\"/>\n                                <span className=\"nav-text\"><span className={\"shortcutLetterHighlight\"}>W</span>eb Admin</span>\n                            </Link>\n                        </Menu.Item>\n                        : null}\n                        <Menu.Item key={'11'}>\n                            <Link to=\"/meeting-booking\">\n                                <Icon type={\"reconciliation\"}/>\n                                <span className=\"nav-text\">Meeting Booking</span>\n                            </Link>\n                        </Menu.Item>\n                    {/*<Menu.Item key={'12'}>*/}\n                    {/*    <Link to=\"/alternate-medicine\">*/}\n                    {/*        <Icon type={\"swap\"}/>*/}\n                    {/*        <span className=\"nav-text\">Alternate Medicines</span>*/}\n                    {/*    </Link>*/}\n                    {/*</Menu.Item>*/}\n                </Menu>\n            </Sider>\n        </Hotkeys>\n    }\n}\n\nexport default AppSider;\n","import React from \"react\";\nimport {Button, Form, Icon, message, Input} from \"antd\";\nimport {postAPI, putAPI, validatePassword} from \"../../../utils/common\";\nimport {CHANGE_PASSWORD} from \"../../../constants/api\";\nimport {NEW_PASSWORD, OLD_PASSWORD} from \"../../../constants/formLabels\";\n\nconst FormItem = Form.Item;\nexport default class ChangePasswordForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            changePassLoading: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let that = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                that.setState({\n                    changePassLoading: true\n                });\n                let data = {\n                    [OLD_PASSWORD]: values.oldPass,\n                    [NEW_PASSWORD]: values.newPass,\n                };\n                let successFn = function (data) {\n                    message.success(data.message);\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                let errorFn = function () {\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                postAPI(CHANGE_PASSWORD, data, successFn, errorFn);\n            }\n        });\n    };\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value != form.getFieldValue('newPass')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n    validateToNextPassword = (rule, value, callback) => {\n        callback(validatePassword(rule, value, callback));\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem label=\"Old Password\"  {...formItemLayout}>\n                    {getFieldDecorator('oldPass', {\n                        rules: [{required: true, message: 'Please enter your old Password!'}],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"Old Password\"/>\n                    )}\n                </FormItem>\n                <FormItem label=\"New Password\"  {...formItemLayout}>\n                    {getFieldDecorator('newPass', {\n                        rules: [{\n                            required: true, message: 'Please enter your new Password!'\n                        }, {\n                            validator: this.validateToNextPassword\n                        }]\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"New Password\"/>\n                    )}\n                </FormItem>\n                <FormItem label=\"Confirm Password\"  {...formItemLayout}>\n                    {getFieldDecorator('confirmPass', {\n                        rules: [{required: true, message: 'Please confirm your new Password!'}, {\n                            validator: this.compareToFirstPassword\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"Confirm Password\" onBlur={this.handleConfirmBlur}/>\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button loading={this.state.changePassLoading} type=\"primary\" htmlType=\"submit\"\n                            className=\"login-form-button\">\n                        Change Password\n                    </Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n","import {Card, Col, Form, List, Row, Divider} from \"antd\";\nimport React from \"react\";\nimport ChangePasswordForm from \"./forms/ChangePasswordForm\";\nimport {Layout} from \"antd\";\nimport {getAPI, interpolate} from \"../../utils/common\";\nimport {USER_DATA} from \"../../constants/api\";\n\nconst {Content} = Layout;\nexport default class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(this.state);\n    }\n\n    loadProfile() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                userProfile: data,\n                loading: false\n            });\n        };\n        let errorFn = function () {\n            that.setState({\n                loading: false\n            })\n        };\n        getAPI(USER_DATA, successFn, errorFn);\n    }\n\n    render() {\n        let that = this;\n        const ChangePasswordLayout = Form.create()(ChangePasswordForm);\n        return <Content className=\"main-container\" style={{\n            margin: '24px 16px',\n            // padding: 24,\n            minHeight: 280,\n            // marginLeft: '200px'\n        }}>\n            <Row>\n                <Col span={12}>\n                    <Card title=\"Change Password\">\n                        <ChangePasswordLayout/>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card title=\"My Permissions\">\n                        <List size=\"small\"\n                              dataSource={that.props.activePracticeData ? that.props.activePracticeData.permissions_data : []}\n                              renderItem={item => <List.Item>{item.name}</List.Item>}/>\n                    </Card>\n                </Col>\n                <Divider/>\n                <Col span={12}>\n                    <Card title=\"My Profile\">\n                        <Row gutter={16}>\n                            <Col span={6}>\n                                <UsersRow label=\"Name \" value={this.props.user.first_name}/>\n                                <UsersRow label=\"Email Id \" value={this.props.user.email}/>\n                                <UsersRow label=\"Contact No.\" value={this.props.user.mobile}/>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Content>\n    }\n}\n\nfunction UsersRow(props) {\n    return <Row gutter={16} style={{marginBottom: '5px'}}>\n        <Col span={12} style={{textAlign: 'right'}}>{props.label}:</Col>\n        <Col span={12}><strong>{props.value}</strong></Col>\n    </Row>\n}\n","import React from \"react\";\nimport '../../../assets/printpatientform.css';\nimport {makeFileURL} from \"../../../utils/common\";\n\n\nexport default class PrintPatientForm extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.activePracticeData) {\n            setTimeout(function () {\n                window.print();\n            }, 1000)\n\n        }\n    }\n    componentWillReceiveProps(newProps) {\n        if (newProps.activePracticeData) {\n            setTimeout(function () {\n                window.print();\n            }, 1000)\n\n        }\n    }\n\n    render() {\n        if (this.props.activePracticeData)\n            return <html className=\"PrintPatientForm\">\n            <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n            <body style={{margin: '0 auto', marginTop: '20px'}}>\n            <div style={{margin: \"0px 10%\"}}>\n\n                <table style={{borderBottom: \"1px solid #000\", width: '100%'}}>\n                    <tr>\n                        <td style={{width: '150px'}}>\n                            <img style={{width:'150px'}}\n                            src={makeFileURL(this.props.activePracticeData.logo)}/>\n                        </td>\n                        <td>\n                            <h2 style={{margin: \"5px\"}}>{this.props.activePracticeData.name}</h2>\n                            <p style={{margin: \"5px\", fontSize: \"11px\"}}>{this.props.activePracticeData.address}<br/>{this.props.activePracticeData.locality}<br/>{this.props.activePracticeData.city}, {this.props.activePracticeData.state}-\n                                {this.props.activePracticeData.pincode}\n                            </p>\n                            <div style={{margin: \"5px\", fontSize: \"11px\"}}>\n                                Email : <strong>{this.props.activePracticeData.email}</strong>\n                                <br/>\n\n                                Phone : <strong>{this.props.activePracticeData.contact}</strong>\n                                <br/>\n\n                                Website : <strong>{this.props.activePracticeData.website}</strong>\n                                <br/>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n\n\n                <h3 className=\"centeralign\">\n                    Patient Information </h3>\n                <table>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>Personal Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\" style={{width: '30%'}}>Name</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Patient ID</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                            <span className=\"leftrightmargin_10\">(official use)</span></td>\n                    </tr>\n                    <tr id=\"nationalid\" style={{display: \"none\"}}>\n                        <td className=\"rightalign\">\n                            <span id=\"nationalidlabel\"></span>\n                        </td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Mobile Number</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>Contact Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Email</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Land-line Number(s)</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Address</td>\n                        <td>\n                            <div className=\"textarea\"></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>General Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Gender</td>\n                        <td>\n                            <div className=\"radio\"></div>\n                            <label>Male </label>\n                            <div className=\"radio\"></div>\n                            <label>Female </label>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Blood Group</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Date of Birth / Age</td>\n                        <td>\n                            <div className=\"textfield\"></div>\n                        </td>\n                    </tr>\n\n\n                </table>\n                <p>I hereby declare that the information provided above is true and correct to the best of my knowledge.\n                    I give consent to the performance of medical / surgical / anesthesia / diagnostic procedure /\n                    treatment to be performed upon myself at B.K. Arogyam & Research Pvt Ltd. I will pay in full any\n                    cost of treatment or insurance co-payments according to the office's financial policy. </p>\n                <div className=\"date\">Date</div>\n                <div className=\"signature\">Patient's Signature</div>\n            </div>\n            </body>\n            </html>\n        return null;\n    }\n}\n","import React from \"react\";\nimport {\n    Alert,\n    AutoComplete,\n    Avatar,\n    Button,\n    Card,\n    DatePicker,\n    Form,\n    Input,\n    InputNumber,\n    List,\n    Select,\n    Spin,\n    Popover,\n    Icon,\n    Row,Col,\n} from 'antd';\nimport {REQUIRED_FIELD_MESSAGE} from \"../../constants/messages\";\nimport moment from \"moment/moment\";\nimport {ALL, DOCTORS_ROLE, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\nimport {\n    ALL_APPOINTMENT_API,\n    APPOINTMENT_API,\n    APPOINTMENT_CATEGORIES,\n    BLOCK_CALENDAR,\n    CALENDER_SETTINGS,\n    DOCTOR_VISIT_TIMING_API,\n    EMR_TREATMENTNOTES,\n    PATIENT_PROFILE,\n    PRACTICESTAFF,\n    PROCEDURE_CATEGORY,\n    SEARCH_PATIENT,\n    APPOINTMENT_PERPRACTICE_API,\n    APPOINTMENT_SCHEDULE\n} from \"../../constants/api\";\nimport {Checkbox, Radio} from \"antd/lib/index\";\nimport {displayMessage, getAPI, interpolate, makeFileURL, postAPI, putAPI} from \"../../utils/common\";\nimport {APPOINTMENT_STATUS, DAY_KEYS} from \"../../constants/hardData\";\nimport {hideMobile} from \"../../utils/permissionUtils\";\nimport { red } from \"ansi-colors\";\n\nconst {TextArea} = Input;\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst CheckboxGroup = Checkbox.Group;\nconst {Meta} = Card;\nexport default class CreateAppointmentForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            practice_doctors: [],\n            appointmentCategories: null,\n            procedure_category: null,\n            treatmentNotes: null,\n            practice_staff: [],\n            appointment: null,\n            loading: false,\n            patientListData: [],\n            // patientDetails: null,\n            appointmentDetail: null,\n            saving: false,\n            doctorBlock: false,\n            doctorOutsideAvailableTiming: false,\n            practiceBlock: false,\n            practiceOutsideAvailableTiming: false,\n            timeToCheckBlock: {\n                schedule_at: moment(),\n                slot: 10,\n            },\n            procedureObjectsById: {},\n            // appointmentList:[],\n\n        }\n        this.changeRedirect = this.changeRedirect.bind(this);\n        this.loadDoctors = this.loadDoctors.bind(this);\n        this.loadProcedureCategory = this.loadProcedureCategory.bind(this);\n        this.loadTreatmentNotes = this.loadTreatmentNotes.bind(this);\n        this.searchPatient = this.searchPatient.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loadAppointment = this.loadAppointment.bind(this);\n        this.loadAppointmentList = this.loadAppointmentList.bind(this);\n\n    }\n\n    componentDidMount() {\n        let that = this;\n        this.loadDoctors();\n        this.loadProcedureCategory();\n        this.loadTreatmentNotes();\n        this.loadAppointmentCategories();\n        this.loadPracticeTiming();\n        this.loadAppointmentList();\n        if (this.props.match.params.appointmentid) {\n            that.loadAppointment();\n        } else if (this.props.history && this.props.history.location.search) {\n            let pairValueArray = this.props.history.location.search.substr(1).split('&');\n            if (pairValueArray.length) {\n                pairValueArray.forEach(function (item) {\n                    let keyValue = item.split('=');\n                    if (keyValue && keyValue.length == 2) {\n                        if (keyValue[0] == 'patient' && keyValue[1]) {\n                            that.handlePatientSelect(keyValue[1])\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    loadPracticeTiming = () => {\n        var that = this;\n        let successFn = function (data) {\n            let dataObject = {};\n            if (data.length)\n                dataObject = data[0];\n            let timing = {};\n            DAY_KEYS.forEach(function (dayKey) {\n                timing[dayKey] = {};\n                if (dataObject.visting_hour_same_week) {\n                    timing[dayKey].startTime = moment(dataObject.first_start_time, 'HH:mm:ss');\n                    timing[dayKey].endTime = moment(dataObject.second_end_time, 'HH:mm:ss');\n                    if (dataObject.is_two_sessions) {\n                        timing[dayKey].lunch = true;\n                        timing[dayKey].lunchStartTime = moment(dataObject.first_end_time, 'HH:mm:ss');\n                        timing[dayKey].lunchEndTime = moment(dataObject.second_start_time, 'HH:mm:ss');\n                    } else {\n                        timing[dayKey].lunch = false\n                    }\n                } else if (dataObject[dayKey]) {\n                    timing[dayKey].startTime = moment(dataObject[`first_start_time_${dayKey}`], 'HH:mm:ss');\n                    timing[dayKey].endTime = moment(dataObject[`second_end_time_${dayKey}`], 'HH:mm:ss');\n                    if (dataObject[`is_two_sessions_${dayKey}`]) {\n                        timing[dayKey].lunch = true;\n                        timing[dayKey].lunchStartTime = moment(dataObject[`first_end_time_${dayKey}`], 'HH:mm:ss');\n                        timing[dayKey].lunchEndTime = moment(dataObject[`second_start_time_${dayKey}`], 'HH:mm:ss');\n                    } else {\n                        timing[dayKey].lunch = false\n                    }\n                } else {\n                    timing[dayKey] = null\n                }\n            });\n            that.setState({\n                calendarTimings: {...timing},\n            }, function () {\n                that.findOutsidePracticeTiming();\n            });\n        };\n        let errorFn = function () {\n            that.setState({\n                calendarTimings: {}\n            })\n        };\n        getAPI(interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n    loadDoctorsTiming = () => {\n        let that = this;\n        let successFn = function (data) {\n            let dataObject = {};\n            if (data.length)\n                dataObject = data[0];\n            let timing = {};\n            DAY_KEYS.forEach(function (dayKey) {\n                timing[dayKey] = {};\n                if (dataObject.visting_hour_same_week) {\n                    timing[dayKey].startTime = moment(dataObject.first_start_time, 'HH:mm:ss');\n                    timing[dayKey].endTime = moment(dataObject.second_end_time, 'HH:mm:ss');\n                    if (dataObject.is_two_sessions) {\n                        timing[dayKey].lunch = true;\n                        timing[dayKey].lunchStartTime = moment(dataObject.first_end_time, 'HH:mm:ss');\n                        timing[dayKey].lunchEndTime = moment(dataObject.second_start_time, 'HH:mm:ss');\n                    } else {\n                        timing[dayKey].lunch = false\n                    }\n                } else if (dataObject[dayKey]) {\n                    timing[dayKey].startTime = moment(dataObject[`first_start_time_${dayKey}`], 'HH:mm:ss');\n                    timing[dayKey].endTime = moment(dataObject[`second_end_time_${dayKey}`], 'HH:mm:ss');\n                    if (dataObject[`is_two_sessions_${dayKey}`]) {\n                        timing[dayKey].lunch = true;\n                        timing[dayKey].lunchStartTime = moment(dataObject[`first_end_time_${dayKey}`], 'HH:mm:ss');\n                        timing[dayKey].lunchEndTime = moment(dataObject[`second_start_time_${dayKey}`], 'HH:mm:ss');\n                    } else {\n                        timing[dayKey].lunch = false\n                    }\n                } else {\n                    timing[dayKey] = null\n                }\n            });\n            that.setState({\n                doctorTimings: {...timing},\n            }, function () {\n                that.findOutsideDoctorTiming();\n            });\n        }\n        let errorFn = function () {\n\n        };\n        if (that.state.timeToCheckBlock.doctor)\n            getAPI(interpolate(DOCTOR_VISIT_TIMING_API, [this.props.active_practiceId]), successFn, errorFn, {\n                doctor: that.state.timeToCheckBlock.doctor\n            });\n    }\n    setBlockedTiming = (type, value) => {\n        console.log(\"Onchange\",value)\n        let that = this;\n        if (type) {\n            this.setState(function (prevState) {\n                return {\n                    timeToCheckBlock: {...prevState.timeToCheckBlock, [type]: value}\n                }\n            }, function () {\n                that.loadAppointmentList();\n                that.findBlockedTiming();\n                that.findOutsidePracticeTiming();\n                if (type == 'doctor') {\n                    that.loadDoctorsTiming();\n                } else {\n                    that.findOutsideDoctorTiming();\n                }\n\n            })\n        }\n    }\n    findBlockedTiming = () => {\n        let that = this;\n        let successFn = function (data) {\n            data.forEach(function (blockRow) {\n                if (blockRow.doctor == null) {\n                    that.setState({\n                        practiceBlock: true\n                    });\n                } else if (blockRow.doctor == that.props.timeToCheckBlock.doctor) {\n                    that.setState({\n                        doctorBlock: true\n                    });\n                }\n            });\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(BLOCK_CALENDAR, successFn, errorFn, {\n            practice: this.props.active_practiceId,\n            cal_fdate: moment(that.state.timeToCheckBlock.schedule_at).format(),\n            cal_tdate: moment(that.state.timeToCheckBlock.schedule_at).add(that.state.timeToCheckBlock.slot, 'minutes').format()\n        })\n    }\n    findOutsidePracticeTiming = () => {\n        let that = this;\n        let flag = true;\n        if (that.state.timeToCheckBlock.schedule_at && that.state.timeToCheckBlock.slot) {\n            let schedule_at = that.state.timeToCheckBlock.schedule_at;\n            let calendarTimings = that.state.calendarTimings;\n            let dayValue = moment(schedule_at).isValid() ? moment(schedule_at).format('dddd').toLowerCase() : null;\n            /**\n             * Checking for Calendar Clinic Timings\n             * */\n            if (calendarTimings && dayValue && calendarTimings[dayValue]) {\n                let daysTimings = calendarTimings[dayValue];\n                if (daysTimings.lunch) {\n                    if (\n                        (moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') <= daysTimings.startTime.format('HH:mm:ss')\n                            || moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') > daysTimings.endTime.format('HH:mm:ss')\n                        ) || (\n                            moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') < daysTimings.lunchEndTime.format('HH:mm:ss')\n                            && moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') >= daysTimings.lunchStartTime.format('HH:mm:ss')\n                        )\n                    ) {\n                        flag = false;\n                    }\n                } else {\n                    if (moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') <= daysTimings.startTime.format('HH:mm:ss') || moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') > daysTimings.endTime.format('HH:mm:ss')) {\n                        flag = false;\n                    }\n                }\n            } else if (dayValue && !calendarTimings[dayValue]) {\n                /**\n                 * If the practice isnot opening for the day\n                 * */\n                flag = false;\n            }\n\n        }\n        that.setState({\n            practiceOutsideAvailableTiming: !flag\n        })\n    }\n    findOutsideDoctorTiming = () => {\n        let that = this;\n        let flag = true;\n        if (that.state.timeToCheckBlock.schedule_at && that.state.timeToCheckBlock.slot) {\n            let schedule_at = that.state.timeToCheckBlock.schedule_at;\n            let calendarTimings = that.state.doctorTimings;\n            let dayValue = moment(schedule_at).isValid() ? moment(schedule_at).format('dddd').toLowerCase() : null;\n            /**\n             * Checking for Calendar Clinic Timings\n             * */\n            if (calendarTimings && dayValue && calendarTimings[dayValue]) {\n                let daysTimings = calendarTimings[dayValue];\n                if (daysTimings.lunch) {\n                    if (\n                        (moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') <= daysTimings.startTime.format('HH:mm:ss')\n                            || moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') > daysTimings.endTime.format('HH:mm:ss')\n                        ) || (\n                            moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') < daysTimings.lunchEndTime.format('HH:mm:ss')\n                            && moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') >= daysTimings.lunchStartTime.format('HH:mm:ss')\n                        )\n                    ) {\n                        flag = false;\n                    }\n                } else {\n                    if (moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') <= daysTimings.startTime.format('HH:mm:ss') || moment(schedule_at, 'HH:mm:ss').format('HH:mm:ss') > daysTimings.endTime.format('HH:mm:ss')) {\n                        flag = false;\n                    }\n                }\n            } else if (dayValue && calendarTimings && !calendarTimings[dayValue]) {\n                /**\n                 * If the practice isnot opening for the day\n                 * */\n                flag = false;\n            }\n        }\n        that.setState({\n            doctorOutsideAvailableTiming: !flag\n        })\n    }\n\n    loadAppointment() {\n        let that = this;\n        this.setState({\n            loading: true,\n        })\n        let successFn = function (data) {\n            that.setState({\n                appointment: data,\n                patientDetails: data.patient,\n                timeToCheckBlock: data,\n                loading: false,\n            }, function () {\n                that.findBlockedTiming();\n                that.findOutsideDoctorTiming();\n                that.loadDoctorsTiming();\n                that.loadAppointmentList();\n            });\n\n        }\n\n        let errorFn = function () {\n            that.setState({\n                loading: false,\n            })\n        }\n        getAPI(interpolate(APPOINTMENT_API, [this.props.match.params.appointmentid]), successFn, errorFn);\n\n    }\n\n    loadDoctors() {\n        let that = this;\n        let successFn = function (data) {\n            let doctor = [];\n            let selectedDoctor = {};\n            data.staff.forEach(function (usersdata) {\n                if (usersdata.role == DOCTORS_ROLE) {\n                    doctor.push(usersdata);\n                    if (that.props.user.id==usersdata.user.id) {\n                        selectedDoctor = usersdata;\n                    }\n\n                }\n            });\n            that.setState(function (prevState) {\n\n\n                return {\n                    selectedDoctor:(doctor.length && !selectedDoctor.id ? doctor[0].user.id : selectedDoctor.user.id),\n                    practice_doctors: doctor,\n                    timeToCheckBlock: {...prevState.timeToCheckBlock, doctor: (doctor.length && !selectedDoctor.id ? doctor[0].user.id: selectedDoctor.user.id)}\n                }\n            }, function () {\n                that.findBlockedTiming();\n                that.loadDoctorsTiming();\n            });\n        }\n        let errorFn = function () {\n        };\n        getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    loadProcedureCategory() {\n        let that = this;\n        let successFn = function (data) {\n            let obj = {};\n            data.forEach(function (item) {\n                obj[item.id] = item\n            })\n            that.setState({\n                procedure_category: data,\n                procedureObjectsById: {...obj}\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), successFn, errorFn,{pagination:false})\n    }\n\n    loadTreatmentNotes() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                treatmentNotes: data\n            })\n\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(EMR_TREATMENTNOTES, [this.props.active_practiceId]), successFn, errorFn)\n    }\n\n    loadAppointmentCategories() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                appointmentCategories: data\n            })\n\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]), successFn, errorFn)\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    searchPatient(value) {\n        let that=this;\n        this.setState({\n            searchPatientString: value\n        });\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                if(prevState.searchPatientString == value)\n                    if (data.current > 1) {\n                        return {\n                            patientListData: [...prevState.patientListData, ...data.results],\n\n                        }\n                    }else {\n                        return {\n                            patientListData: [...data.results],\n\n                        }\n                    }\n            })\n        };\n        let errorFn = function (data) {\n            that.setState({\n                searchPatientString:null,\n            })\n        };\n        if (value){\n            getAPI(interpolate(SEARCH_PATIENT, [value]), successFn, errorFn);\n        }\n\n    };\n    handleSubmit = (e) => {\n        let that = this;\n        let patient = {};\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                that.setState({\n                    saving: true\n                });\n                let formData = {...values};\n                formData.patient = {user: {}};\n                if (!this.state.patientDetails) {\n                    formData.patient.user.first_name = formData.patient_name;\n                    formData.patient.user.email = formData.patient_email;\n                    formData.patient.user.mobile = formData.patient_mobile;\n                    formData.patient_email = undefined;\n                    formData.patient_name = undefined;\n                    formData.patient_mobile = undefined;\n                } else {\n                    formData.patient = this.state.patientDetails;\n                }\n                formData.practice = that.props.active_practiceId;\n                // formData.treatment_plans = []\n                // values.procedure.forEach(function (id) {\n                //     let item = that.state.procedureObjectsById[id];\n                //     formData.treatment_plans.push({\n                //         \"procedure\": item.id,\n                //         \"cost\": item.cost,\n                //         \"quantity\": 1,\n                //         \"margin\": item.margin,\n                //         \"default_notes\": item.default_notes,\n                //         \"is_active\": true,\n                //         \"is_completed\": false,\n                //         \"discount\": item.discount,\n                //         \"discount_type\": \"%\",\n                //     })\n                // });\n                // delete formData.procedure;\n                // console.log(formData);\n                let successFn = function (data) {\n                    that.setState({\n                        saving: false\n                    });\n                    if (that.props.history)\n                        that.props.history.goBack();\n                    if (that.props.loadData)\n                        that.props.loadData();\n                    if (data) {\n                        // console.log(data)\n                        displayMessage(SUCCESS_MSG_TYPE, \"Appointment Created Successfully\");\n                    }\n                };\n                let errorFn = function () {\n                    that.setState({\n                        saving: false\n                    });\n                };\n                if (this.state.appointment) {\n                    putAPI(interpolate(APPOINTMENT_API, [this.state.appointment.id]), formData, successFn, errorFn);\n                } else {\n                    postAPI(ALL_APPOINTMENT_API, formData, successFn, errorFn);\n                }\n            }\n        });\n\n    }\n    handlePatientSelect = (event) => {\n        if (event) {\n            let that = this;\n            let successFn = function (data) {\n                that.setState({\n                    patientDetails: data\n                });\n            };\n            let errorFn = function () {\n            };\n            getAPI(interpolate(PATIENT_PROFILE, [event]), successFn, errorFn);\n        }\n    }\n    // handleChange = (event) => {\n    //     this.setState({})\n\n    //     // this.setState({ value: event.target.value });\n    // };\n    handleClick = (e) => {\n\n        this.setState({\n            patientDetails: null\n        })\n\n    };\n    loadAppointmentList(){\n        let that=this;\n        let successFn = function(data){\n            that.setState({\n                appointmentList:data,\n            })\n        }\n        let errorFn =function(data){\n        }\n        let apiParams={\n            start_time:moment(this.state.timeToCheckBlock.schedule_at).format(),\n            end_time:moment(this.state.timeToCheckBlock.schedule_at).add(this.state.timeToCheckBlock.slot, 'minutes').format(),\n            doctor:this.state.timeToCheckBlock.doctor,\n        }\n        getAPI(interpolate(APPOINTMENT_SCHEDULE,[this.props.active_practiceId]),successFn,errorFn,apiParams);\n    }\n    render() {\n        const that = this;\n        const formItemLayout = (this.props.formLayout ? this.props.formLayout : {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        });\n        const formPatients = (this.props.formLayout ? this.props.formLayout : {\n            wrapperCol: {offset: 6, span: 14},\n        });\n        const {getFieldDecorator} = this.props.form;\n\n        // let doctorArray=this.state.practice_doctors;\n        // let loginUser =that.props.user;\n        // const doctorId={};\n        // let flag=true;\n        // doctorArray.forEach(function (items) {\n        //    if (items.user.id == that.props.user.id){\n        //        doctorId.id=that.props.user.id;\n        //        flag=false;\n        //        return false;\n        //    }\n        // },function () {\n        //     doctorId.id=doctorArray[0].user.id;\n        // });\n\n        const treatmentNotesOption = [];\n        if (this.state.treatmentNotes) {\n            this.state.treatmentNotes.forEach(function (drug) {\n                treatmentNotesOption.push({label: drug.name, value: drug.id});\n            })\n        }\n        const categoryOptions = [];\n        if (this.state.appointmentCategories) {\n            this.state.appointmentCategories.forEach(function (category) {\n                categoryOptions.push({label: category.name, value: category.id});\n            })\n        }\n        let appointmentTime = this.state.appointment ? this.state.appointment.schedule_at : this.props.startTime;\n        if (!appointmentTime) {\n            appointmentTime = new moment(new Date()).format();\n        }\n        const fields = [];\n\n        return <Card>\n            <Spin spinning={this.state.saving}>\n                <Form onSubmit={this.handleSubmit}>\n                    {this.props.title ? <h2>{this.props.title}</h2> : null}\n\n                    <FormItem key=\"schedule_at\" label=\"Appointment Schedule\" {...formItemLayout}>\n                        {getFieldDecorator(\"schedule_at\",\n                            {\n                                initialValue: appointmentTime ? moment(appointmentTime) : null,\n                                rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                            })(\n                            <DatePicker format=\"YYYY/MM/DD HH:mm\" showTime\n                                        onChange={(value) => this.setBlockedTiming(\"schedule_at\", value)}/>\n                        )}\n                        {this.state.practiceOutsideAvailableTiming ?\n                            <Alert message=\"Selected time is outside available clinic time!!\" type=\"warning\"\n                                   showIcon/> : null}\n                        {this.state.practiceBlock ?\n                            <Alert message=\"Selected time is blocked in this clinic !!\" type=\"warning\"\n                                   showIcon/> : null}\n                    </FormItem>\n                    <FormItem key=\"slot\"\n                              {...formItemLayout}\n                              label=\"Time Slot\">\n                        {getFieldDecorator(\"slot\", {\n                            initialValue: this.state.appointment ? this.state.appointment.slot : 10,\n                            rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                        })(\n                            <InputNumber min={1} onChange={(value) => this.setBlockedTiming(\"slot\", value)}/>\n                        )}\n                        <span className=\"ant-form-text\">mins\n                        <Row style={{float:\"right\"}}>\n                            <Col span={24}>\n                                {this.state.appointmentList && this.state.appointmentList.length>0 ?\n                                    <div span={5} style={{float:\"right\"}}>\n                                        <ul style={{listStyle:\"none\",display:\"inline-flex\",paddingLeft:'15px',paddingRight: \"10px\"}}>\n                                        {that.state.appointmentList.map((item) =><li style={{border: '1px solid #bbb', marginLeft: \"13px\",padding:\" 0.01em 14px\"}}><span style={{width: 'calc(100% - 60px)'}}><b>{moment(item.schedule_at).format(\"LT\")}</b>&nbsp;{item.patient.user.first_name}</span>\n                                        &nbsp;<b>with</b> &nbsp;{item.doctor_data.user.first_name}\n                                        </li>)}\n                                            \n                                        </ul>\n                                    </div>\n                                    \n                                :null}\n                            </Col>\n                        </Row>\n                       \n                        </span>\n                        {this.state.appointmentList && this.state.appointmentList.length>0 ?<>\n                                \n                                <Alert message=\"Selected time slot have assigned someone else !! please select another slot.\" type=\"warning\"\n                                   showIcon/> \n                                {/* <div style={{backgroundColor:\"#fffbe6\"}}>\n                                    <p style={{color:red ,padding:\"7px\"}}><Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"#faad14\" /> </p>\n                                </div> */}\n                            \n                              </>      \n                        :null}\n                    </FormItem>\n                    \n\n                    {that.state.patientDetails ?\n                        <FormItem key=\"id\" value={this.state.patientDetails.id} {...formPatients}>\n                            <Card bordered={false} style={{background: '#ECECEC'}}>\n                                <Meta\n                                    avatar={(this.state.patientDetails.image ? <Avatar src={makeFileURL(this.state.patientDetails.image)}/> :\n                                        <Avatar style={{backgroundColor: '#87d068'}}>\n                                            {this.state.patientDetails.user.first_name ? this.state.patientDetails.user.first_name.charAt(0) :\n                                                <Icon type=\"user\"/>}\n                                        </Avatar>)}\n\n                                    title={this.state.patientDetails.user.first_name}\n                                    description={\n                                        <span>{that.props.activePracticePermissions.PatientPhoneNumber ? this.state.patientDetails.user.mobile : hideMobile(this.state.patientDetails.user.mobile)}<br/>\n                                    <Button type=\"primary\" style={{float: 'right'}} onClick={this.handleClick}>Add New\n                                    Patient</Button>\n                                    </span>}\n                                />\n\n\n                            </Card>\n                        </FormItem>\n                        : <div>\n                            <FormItem key=\"patient_name\" label=\"Patient Name\"  {...formItemLayout}>\n                                {getFieldDecorator(\"patient_name\", {\n                                    initialValue: this.state.appointment ? this.state.appointment.patient.user.first_name : null,\n                                    rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                                })(\n                                    <AutoComplete placeholder=\"Patient Name\"\n                                                  showSearch\n                                                  onSearch={this.searchPatient}\n                                                  defaultActiveFirstOption={false}\n                                                  showArrow={false}\n                                                  filterOption={false}\n                                                  onSelect={this.handlePatientSelect}>\n                                        {this.state.patientListData.map((option) => <AutoComplete.Option\n                                            value={option.id.toString()}>\n                                            <List.Item style={{padding: 0}}>\n                                                <List.Item.Meta\n                                                    avatar={(option.image ? <Avatar src={makeFileURL(option.image)}/> :\n                                                        <Avatar style={{backgroundColor: '#87d068'}}>\n                                                            {option.user.first_name ? option.user.first_name.charAt(0) :\n                                                                <Icon type=\"user\"/>}\n                                                        </Avatar>)}\n                                                    title={option.user.first_name + \" (ID:\" + (option.custom_id?option.custom_id:option.user.id) + \")\"}\n                                                    description={that.props.activePracticePermissions.PatientPhoneNumber ? option.user.mobile : hideMobile(option.user.mobile)}\n                                                />\n\n                                            </List.Item>\n                                        </AutoComplete.Option>)}\n                                    </AutoComplete>\n                                )}\n                            </FormItem>\n                            <FormItem key=\"patient_mobile\" label=\"Mobile Number\"   {...formItemLayout}>\n                                {getFieldDecorator(\"patient_mobile\", {\n                                    initialValue: this.state.appointment ? this.state.appointment.patient.user.mobile : null,\n                                    rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                                })(\n                                    <Input placeholder=\"Mobile Number\"/>\n                                )}\n                            </FormItem>\n                            <FormItem key=\"patient_email\" label=\"Email Address\"  {...formItemLayout}>\n                                {getFieldDecorator(\"patient_email\", {\n                                    initialValue: this.state.appointment ? this.state.appointment.patient.user.email : null,\n                                    rules: [{type: 'email', message: 'The input is not valid E-mail!'},\n                                        {required: true, message: REQUIRED_FIELD_MESSAGE}],\n                                })(\n                                    <Input placeholder=\"Email Address\"/>\n                                )}\n                            </FormItem>\n\n                        </div>}\n\n                    <FormItem key=\"doctor\" {...formItemLayout} label=\"Doctor\">\n                        {getFieldDecorator(\"doctor\", {initialValue: this.state.appointment ? this.state.appointment.doctor:this.state.selectedDoctor}, {\n                            rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                        })(\n                            <Select placeholder=\"Doctor\"\n                                    onChange={(value) => this.setBlockedTiming(\"doctor\", value)}>\n                                {this.state.practice_doctors.map((option) => <Select.Option\n                                    value={option.id}>{(option.user.first_name + \"(\" + option.user.email + \")\")}</Select.Option>)}\n                            </Select>\n                        )}\n                        {this.state.doctorBlock ?\n                            <Alert message=\"Selected time is blocked for selected doctor in this clinic!!\"\n                                   type=\"warning\"\n                                   showIcon/> : null}\n                        {this.state.doctorOutsideAvailableTiming ?\n                            <Alert message=\"Selected time is out of doctor's visit time in this clinic!!\"\n                                   type=\"warning\"\n                                   showIcon/> : null}\n                        {this.state.appointmentList && this.state.appointmentList.length>0 ?<>\n                            <Alert message=\"Selected time doctor's busy on other patients in  this clinic!!\"\n                                   type=\"warning\"\n                                   showIcon/>\n                        </>:null}\n                    </FormItem>\n                    <FormItem key=\"category\" {...formItemLayout} label=\"Category\">\n                        {getFieldDecorator(\"category\", {initialValue: this.state.appointment ? this.state.appointment.category : null}, {\n                            rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                        })(\n                            <Select placeholder=\"Category\">\n                                {categoryOptions.map((option) => <Select.Option\n                                    value={option.value}>{option.label}</Select.Option>)}\n                            </Select>\n                        )}\n                    </FormItem>\n                    {/* <FormItem key=\"procedure\" {...formItemLayout} label=\"Procedures Planned\">\n                        {getFieldDecorator(\"procedure\", {initialValue: this.state.appointment ? this.state.appointment.procedure_data.treatment_plans.id :null}, {\n                            rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                        })(\n                            <Select placeholder=\"Procedures Planned\" mode={\"multiple\"}>\n                                {this.state.procedure_category && this.state.procedure_category.map((drug) =>\n                                    <Select.Option\n                                        value={drug.id}>{drug.name}</Select.Option>\n                                )}\n                            </Select>\n                        )}\n                    </FormItem> */}\n                    {this.state.appointment ?\n                        <FormItem key=\"status\" {...formItemLayout} label=\"Status\">\n                            {getFieldDecorator(\"status\", {initialValue: this.state.appointment.status})\n                            (\n                                <Select placeholder=\"Status\">\n                                    {APPOINTMENT_STATUS.map((option) => <Select.Option\n                                        value={option.value}>{option.label}</Select.Option>)}\n                                </Select>\n                            )}\n                        </FormItem> : null\n                    }\n\n\n                    <FormItem key=\"notes\" {...formItemLayout} label=\"Notes\">\n                        {getFieldDecorator(\"notes\", {initialValue: this.state.appointment ? this.state.appointment.notes : null}, {\n                            rules: [{required: true, message: REQUIRED_FIELD_MESSAGE}],\n                        })(\n                            <Input placeholder=\"Notes\"/>\n                        )}\n                    </FormItem>\n                    <FormItem {...formItemLayout}>\n                        <Button loading={that.state.saving} type=\"primary\" htmlType=\"submit\" style={{margin: 5}}>\n                            Submit\n                        </Button>\n                        {that.props.history ?\n                            <Button style={{margin: 5}} onClick={() => that.props.history.goBack()}>\n                                Cancel\n                            </Button> : null}\n                    </FormItem>\n                </Form>\n            </Spin>\n        </Card>\n    }\n}\n","import React from \"react\";\nimport {Route} from \"react-router\";\nimport DynamicFieldsForm from \"../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {\n    CHECKBOX_FIELD,\n    SINGLE_CHECKBOX_FIELD,\n    DATE_PICKER,\n    NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    INPUT_FIELD,\n    RADIO_FIELD,\n    SELECT_FIELD,\n    DOCTORS_ROLE\n} from \"../../constants/dataKeys\";\nimport {\n    PATIENTS_LIST,\n    ALL_APPOINTMENT_API,\n    APPOINTMENT_CATEGORIES,\n    PRACTICESTAFF,\n    PROCEDURE_CATEGORY, APPOINTMENT_API, SINGLE_PRACTICE_STAFF_API, SEARCH_PATIENT\n} from \"../../constants/api\";\nimport {getAPI, interpolate, displayMessage} from \"../../utils/common\";\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment';\nimport CreateAppointmentForm from \"./CreateAppointmentForm\";\n\n\nclass CreateAppointment extends React.Component {\n    render() {\n        const formProp = {\n            successFn: function (data) {\n                console.log(data);\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n            },\n            errorFn: function () {\n\n            },\n            onFieldsDataChange: function (data) {\n                console.log(data);\n            },\n            action: ALL_APPOINTMENT_API,\n            method: \"post\",\n        };\n        let defaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n        let that = this;\n        let editformProp;\n        // if (this.state.appointment) {\n        //     editformProp = {\n        //         successFn: function (data) {\n        //             displayMessage(SUCCESS_MSG_TYPE, \"success\");\n        //             console.log(data);\n        //         },\n        //         errorFn: function () {\n        //\n        //         },\n        //         onFieldsDataChange: function (data) {\n        //             that.setState(function (prevState) {\n        //                 return {appointment: {...prevState.appointment, ...data}}\n        //             });\n        //         },\n        //         action: interpolate(APPOINTMENT_API, [this.state.appointment.id]),\n        //         method: \"put\",\n        //     }\n        //     defaultValues = [{\"key\": \"practice\", \"value\": this.state.appointment.practice}];\n        //\n        // }\n        const TestFormLayout = Form.create()(CreateAppointmentForm);\n        return <Row>\n            <Route exact path='/calendar/:appointmentid/edit-appointment'\n                   render={(route) => (this.props.match.params.appointmentid ?\n                       <TestFormLayout {...route} {...this.props} defaultValues={defaultValues} title=\"Edit Appointment\"\n                                       changeRedirect={this.changeRedirect}/> :\n                       <Redirect to={'/patients/appointments/'}/>)}/>\n\n            <Route exact path='/calendar/create-appointment'\n                   render={(route) => <TestFormLayout {...this.props} defaultValues={defaultValues} changeRedirect={this.changeRedirect} {...route}\n                                                 title=\"ADD Appointment \"/>}/>\n\n        </Row>\n    }\n\n\n}\n\nexport default CreateAppointment;\n","import React from \"react\";\nimport {\n    DATE_PICKER,\n    DATE_TIME_PICKER, DOCTORS_ROLE,\n    ERROR_MSG_TYPE,\n    INPUT_FIELD,\n    SELECT_FIELD,\n    TIME_PICKER\n} from \"../../constants/dataKeys\";\nimport moment from \"moment\";\nimport DynamicFieldsForm from \"../common/DynamicFieldsForm\";\nimport {Form, Card, Row, Col,Popover, List,Button, DatePicker,TimePicker,Input,Select,Divider} from \"antd\";\nimport {APPOINTMENT_PERPRACTICE_API, BLOCK_CALENDAR, PRACTICESTAFF} from \"../../constants/api\";\nimport {displayMessage, getAPI, interpolate,postAPI} from \"../../utils/common\";\nimport { loadDoctors } from \"../../utils/clinicUtils\";\nimport {\n    CANCELLED_STATUS,\n    CHECKOUT_STATUS,\n    ENGAGED_STATUS,\n    SCHEDULE_STATUS,\n    WAITING_STATUS\n} from \"../../constants/hardData\";\nimport EventPatientPopover from \"./EventPatientPopover\";\nimport { tag } from \"postcss-selector-parser\";\n\nclass BlockCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            practiceDoctors: [],\n            blockedAppointmentParams: {\n                block_from:moment(),\n                block_to:moment(),\n            }\n        };\n        loadDoctors(this);\n    }\n    // componentDidMount() {\n    //\n    // }\n    changeParamsForBlockedAppointments = (type, value) => {\n        let that = this;\n        this.setState(function (prevState) {\n            return {\n                blockedAppointmentParams: {\n                    ...prevState.blockedAppointmentParams,\n                    [type]: value\n                }\n            }\n        }, function () {\n            // if (valueObj.block_from && valueObj.block_to)\n            that.retrieveBlockingAppointments();\n        })\n    }\n    retrieveBlockingAppointments = () => {\n        let that = this;\n        that.setState({\n            loading: true\n        });\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                return {\n                    blockingAppointments: data,\n                    loading: false\n                }\n            });\n        }\n        let errorFn = function () {\n            that.setState({\n                loading: false\n            })\n        }\n        if (this.state.blockedAppointmentParams.block_from && this.state.blockedAppointmentParams.block_to)\n            getAPI(interpolate(APPOINTMENT_PERPRACTICE_API, [this.props.active_practiceId]), successFn, errorFn, {\n                start: moment(that.state.blockedAppointmentParams.block_from).format('YYYY-MM-DD'),\n                end: moment(that.state.blockedAppointmentParams.block_to).format('YYYY-MM-DD'),\n                doctor:that.state.blockedAppointmentParams.doctor,\n            });\n    }\n\n    handleSubmit =(e)=>{\n        let that=this;\n        e.preventDefault();\n        let reqData={}\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                reqData = {...values,\n                    practice:this.props.active_practiceId,\n                    // block_from:moment(that.state.blockedAppointmentParams.block_from).format('YYYY-MM-DD'),\n                    // block_to:moment(that.state.blockedAppointmentParams.block_to).format('YYYY-MM-DD'),\n\n                };\n\n            }\n        });\n\n        let successFn =function(data){\n\n        };\n        let errorFn=function(){\n\n        };\n        postAPI(BLOCK_CALENDAR,reqData,successFn,errorFn)\n    };\n   \n    render(){\n        let that = this;\n        const {getFieldDecorator} = this.props.form;\n \n        const formItemLayout = ({\n            labelCol: {span: 6},\n            wrapperCol: {span: 4},\n        });\n        //\n        // let doctorArray=this.state.practiceDoctors;\n        // let loginUser =that.props.user;\n        // const doctorId={};\n        // let flag=true;\n        // doctorArray.forEach(function (items) {\n        //     if (items.user.id == loginUser.id){\n        //         doctorId.id=that.loginUser.id;\n        //         flag=false;\n        //         return false;\n        //     }\n        // },function () {\n        //     doctorId.id=doctorArray[0].user.id\n        // });\n\n        return(<Card title={'Block Calendar'}>\n                <Row>\n                    <Col span={18}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"Block From\" {...formItemLayout}>\n                                {getFieldDecorator('block_from',{initialValue:moment()})\n                                (<DatePicker  showTime onChange={(value)=>this.changeParamsForBlockedAppointments('block_from',value)}/>)\n                            }\n                            </Form.Item>\n\n                            <Form.Item label=\"Block To\" {...formItemLayout}>\n                                {getFieldDecorator('block_to',{initialValue:moment()})\n                                (<DatePicker  showTime onChange={(value)=>this.changeParamsForBlockedAppointments('block_to',value)}/>)\n                            }\n                            </Form.Item>\n\n                            <Form.Item label=\"Event Name\" {...formItemLayout}>\n                                {getFieldDecorator('event', {})\n                                (<Input placeholder=\"Event Name\"/>)\n                                }\n                            </Form.Item>\n\n                            <Form.Item label=\"Doctor\" {...formItemLayout}>\n                                {getFieldDecorator('doctor', {initialValue:6})\n                                (<Select placeholder=\"Docto List\"  onChange={(value) => this.changeParamsForBlockedAppointments(\"doctor\", value)}>\n                                    {this.state.practiceDoctors.map((option) => <Select.Option\n                                    value={option.id}>{option.user.first_name}</Select.Option>)}\n                                </Select>)\n\n                                }\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button style={{margin: 5}} type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                                {that.props.history ?\n                                    <Button style={{margin: 5}} onClick={() => that.props.history.goBack()}>\n                                        Cancel\n                                    </Button> : null}\n                            </Form.Item>\n\n                        </Form>\n                    </Col>\n                \n                    <Col span={6}>\n                        <List\n                            size={'small'}\n                            dataSource={this.state.blockingAppointments}\n                            renderItem={(apppointment) => (apppointment.status == CANCELLED_STATUS ? <div/> : <List.Item\n                                color={'transparent'}\n                                style={{padding: 0}}>\n                                <div\n                                    style={{\n                                        border: '1px solid #ddd',\n                                        borderRadius: '5px',\n                                        textDecoration: (apppointment.status == CANCELLED_STATUS ? 'line-through' : 'inherit'),\n                                        backgroundColor: (apppointment.status == CANCELLED_STATUS ? '#aaa' : '#eee'),\n                                        width: '100%',\n                                        marginTop: '2px',\n                                        borderLeft: '5px solid' + (apppointment.doctor && that.state.practice_doctors && that.state.practice_doctors[apppointment.doctor] ? that.props.doctors_object[apppointment.doctor].calendar_colour : 'transparent')\n                                    }}>\n                                    <AppointmentCard {...apppointment}\n                                                    changeAppointmentStatus={this.changeAppointmentStatus} {...this.props}/>\n                                </div>\n                            </List.Item>)\n                            }/>\n                    </Col>\n                </Row>\n               \n            </Card>\n\n        )\n    }\n}\nexport default Form.create()(BlockCalendar);\n\nfunction AppointmentCard(appointment) {\n    return <div style={{width: '100%'}}>\n\n        <p style={{marginBottom: 0}}>\n        <Divider type=\"vertical\" />\n            <Popover placement=\"right\"\n                     content={<EventPatientPopover appointmentId={appointment.id}\n                                                   key={appointment.id} {...appointment}/>}>\n            <span\n                style={{width: 'calc(100% - 60px)'}}><b>{moment(appointment.schedule_at).format(\"LLL\")}</b>&nbsp;\n                {appointment.patient.user.first_name}</span>\n            <p style={{color:appointment.doctor_data ?appointment.doctor_data.calendar_colour:null}}><Divider type=\"vertical\"/><span>{appointment.doctor_data ? appointment.doctor_data.user.first_name:null}</span></p>\n            </Popover>\n        </p>\n    </div>;\n}\n","import React from \"react\";\nimport {Layout, Spin, Button, Drawer, Row, Col, Form, Input, Divider, Modal} from \"antd\";\nimport {SUGGESTIONS} from \"../../constants/api\";\nimport {displayMessage, interpolate, postAPI} from \"../../utils/common\";\nimport {SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\n\nconst {TextArea} = Input;\n\nclass SuggestionBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n    }\n\n\n    onClose = () => {\n        let that = this;\n        that.props.close();\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let that = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                let reqData = {\n                    ...values,\n                }\n                let successFn = function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"Save Your Suggestions\");\n                    that.props.close();\n\n                }\n                let errorFn = function () {\n\n                }\n                postAPI(SUGGESTIONS, reqData, successFn, errorFn);\n            }\n\n        })\n    };\n\n    render() {\n        let that = this;\n        const {getFieldDecorator} = this.props.form;\n        return <div>\n            <Modal\n                title=\"Your Suggestion\"\n                width={720}\n                onClose={this.onClose}\n                visible={that.props.visible}>\n\n                <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item label=\"Name\">\n                                {getFieldDecorator('name', {\n                                    rules: [{required: true, message: 'Please enter  name'}],\n                                })(<Input placeholder=\"Please enter user name\"/>)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Email\">\n                                {getFieldDecorator('email', {\n                                    rules: [{required: true, message: 'Please enter Email'}],\n                                })(\n                                    <Input\n                                        style={{width: '100%'}}\n                                        placeholder=\"Please enter Email\"\n                                    />,\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item label=\"Mobile\">\n                                {getFieldDecorator('mobile')\n                                (<Input placeholder=\"Please enter Mobile\"/>)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Subject\">\n                                {getFieldDecorator('subject')(\n                                    <Input\n                                        style={{width: '100%'}}\n                                        placeholder=\"Please enter Email\"\n                                    />,\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item label=\"Description\">\n                                {getFieldDecorator('description')\n                                (<TextArea placeholder=\"Please enter description\"\n                                           autosize={{minRows: 4, maxRows: 6}}/>)}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Divider/>\n                    <div\n                        style={{\n                            textAlign: '-webkit-center',\n                        }}\n                    >\n                        <Button onClick={this.onClose} style={{marginRight: 8}}>\n                            Cancel\n                        </Button>\n                        <Button htmlType=\"submit\" onSubmit={this.handleSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n\n            </Modal>\n        </div>\n\n    }\n}\n\nexport default Form.create()(SuggestionBox);\n","import React from \"react\";\nimport {logErrorToSlackChannel} from \"./utils/crashHandlingUtils\";\nimport {Button, Result} from \"antd\";\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n\n        logErrorToSlackChannel(error, errorInfo);\n    }\n\n    redirectToHome = () => {\n        window.location.replace(\"/\");\n    }\n\n    render() {\n        let that = this;\n        if (this.state.hasError) {\n            return <Result\n                status=\"500\"\n                title=\"500\"\n                subTitle={\"Sorry, something went wrong.\"}\n                extra={<Button type=\"primary\" onClick={this.redirectToHome}>Back Home</Button>}\n            />;\n        }\n\n        return this.props.children;\n    }\n}","import {postOuterAPI} from \"../../app/utils/common\";\nimport CONFIG from \"../../app.config\";\nimport moment from \"moment\";\nimport lockr from \"lockr\";\nimport {loggedInUser} from \"../../app/utils/auth\";\n\nexport const logErrorToSlackChannel = function (error, errorInfo) {\n    let crashData = {\n        \"text\": error.toString(),\n        \"attachments\": [\n            {\n                \"color\": \"#36a64f\",\n                \"author_name\": window.location.hostname,\n                \"author_link\": \"http://flickr.com/bobby/\",\n                \"author_icon\": window.location.hostname + \"/favicon.ico\",\n                \"title\": \"BK ERP Admin Application Crash Error\",\n                text: errorInfo.componentStack,\n                \"fields\": [\n                    {\n                        \"title\": \"Priority\",\n                        \"value\": \"High\",\n                        \"short\": false\n                    }, {\n                        \"title\": \"Domain\",\n                        \"value\": window.location.hostname,\n                        \"short\": false\n                    }, {\n                        \"title\": \"Path\",\n                        \"value\": window.location.pathname,\n                        \"short\": false\n                    }, {\n                        \"title\": \"User\",\n                        \"value\": loggedInUser(),\n                        \"short\": false\n                    }\n                ],\n                \"ts\": new moment().format('X')\n            }\n        ]\n    }\n    let successFn = function () {\n        console.log(\"The above error has been notified to devs.\");\n    }\n    let errorFn = function () {\n        console.log(\"The above error notifications failed\");\n    }\n    if ((CONFIG.prodDomain && CONFIG.crashHandling.slack.sendOnProduction && CONFIG.prodDomain.indexOf(window.location.hostname) > -1) || CONFIG.crashHandling.slack.sendOnDevelopment) {\n        postOuterAPI(CONFIG.crashHandling.slack.webHookUrl, crashData, successFn, errorFn, {\n            'Content-type': 'application/x-www-form-urlencoded'\n        });\n    }\n}","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport {Layout, Spin, Button} from \"antd\";\nimport loadable from '@loadable/component';\nimport AppSider from \"./AppSider\";\nimport {loadUserDetails, loggedInactivePractice, loggedInUserPractices, setCurrentPractice} from \"../../utils/auth\";\n// import SettingsDash from \"../settings/SettingsDash\"\n// import PatientHome from \"../patients/PatientHome\";\nimport Error404 from \"../common/errors/Error404\";\n// import ReportsHome from \"../reports/ReportsHome\";\n// import WebAdminHome from \"../webAdmin/WebAdminHome\";\n// import InventoryHome from \"../inventory/InventoryHome\";\nimport Profile from \"../auth/Profile\";\nimport PrintPatientForm from \"../patients/patient/PrintPatientForm\";\nimport CreateAppointment from \"../calendar/CreateAppointment\";\nimport BlockCalendar from \"../calendar/BlockCalendar\";\nimport PermissionDenied from \"../common/errors/PermissionDenied\";\nimport SuggestionBox from \"./SuggestionBox\";\nimport ErrorBoundary from \"../../../crashHandling/ErrorBoundary\";\n// import MeetingBooking from \"../conference/meeting/MeetingBooking\";\n// import Calendar from \"../calendar/Calendar\";\n\nconst Calendar = loadable(() => import('../calendar/Calendar'));\nconst ReportsHome = loadable(()=> import('../reports/ReportsHome'));\nconst WebAdminHome = loadable(()=>import('../webAdmin/WebAdminHome'));\nconst InventoryHome = loadable(()=>import('../inventory/InventoryHome'));\nconst MeetingBooking = loadable(()=>import('../conference/meeting/MeetingBooking'));\nconst SettingsDash = loadable(()=>import('../settings/SettingsDash'));\nconst PatientHome = loadable(()=>import('../patients/PatientHome'));\n\nclass AppBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            active_practiceId: loggedInactivePractice(),\n            practiceList: loggedInUserPractices(),\n            activePracticeData: null,\n            activePracticePermissions: {},\n            specialisations: null,\n            allowAllPermissions: false,\n            loadingPermissions: false,\n            visible: false,\n\n        };\n        this.activeData = this.activeData.bind(this);\n        // this.clinicData = this.clinicData.bind(this);\n        this.switchPractice = this.switchPractice.bind(this);\n\n\n    }\n\n    componentDidMount() {\n        this.activeData();\n\n    }\n\n\n    toggleSider = (option) => {\n        this.setState({\n            collapsed: !!option,\n        });\n    }\n\n    activeData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                let permissions = {};\n                data.practice_permissions.forEach(function (permission) {\n                    permissions[permission.codename] = permission;\n                });\n                data.global_permissions.forEach(function (permission) {\n                    permissions[permission.codename] = permission;\n                });\n                return {\n                    activePracticePermissions: permissions,\n                    loadingPermissions: false,\n                    practiceList: loggedInUserPractices(),\n                }\n            }, function () {\n                // that.clinicData();\n            });\n        }\n        let errorFn = function () {\n            that.setState({\n                loadingPermissions: false\n            })\n        }\n\n        that.setState(function (prevState) {\n            let activePracticeObj = null;\n            prevState.practiceList.forEach(function (practiceObj) {\n                if (practiceObj.practice.id == prevState.active_practiceId) {\n                    activePracticeObj = practiceObj.practice\n                }\n            });\n            if (activePracticeObj || !prevState.practiceList.length)\n                return {\n                    activePracticeData: activePracticeObj,\n                    loadingPermissions: true\n                }\n            setCurrentPractice(prevState.practiceList[0].practice.id);\n            return {\n                activePracticeData: prevState.practiceList[0].practice,\n                active_practiceId: prevState.practiceList[0].practice.id,\n                loadingPermissions: true\n            }\n        }, function () {\n            loadUserDetails(that.state.active_practiceId, successFn, errorFn);\n        })\n\n\n    }\n\n    switchPractice(practiceId) {\n        let that = this;\n        that.setState(function (prevState) {\n            return {\n                active_practiceId: practiceId,\n            }\n        }, function () {\n            setCurrentPractice(practiceId);\n            that.activeData();\n        });\n\n\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n\n    render() {\n        let that = this;\n        if (this.state.loadingPermissions) {\n            return <Spin spinning={this.state.loadingPermissions} tip={\"Loading Permissions....\"}>\n                <div style={{width: '100vw', height: '100vh'}}/>\n            </Spin>\n        }\n        return <Layout style={{minHeight: '100vh'}}>\n            <ErrorBoundary>\n                <div style={{\n                    position: 'fixed', right: '29px',\n                    bottom: '23px', zIndex: '20'\n                }}>\n                    <Button type=\"primary\" shape=\"circle\" icon=\"mail\" size={\"large\"} onClick={this.showDrawer}/>\n                </div>\n                <Switch>\n                    <Route path={\"/patients/patientprintform\"}\n                           render={(route) => <PrintPatientForm {...this.state} key={that.state.active_practiceId}/>}/>\n                    <Route>\n                        <Layout>\n                            <AppSider toggleSider={this.toggleSider} {...this.state}\n                                      key={that.state.active_practiceId} {...this.props} />\n                            <Layout>\n                                <AppHeader {...this.props}\n                                           {...this.state}\n                                           switchPractice={this.switchPractice}\n                                           toggleSider={this.toggleSider}/>\n                                <Switch>\n                                    {this.state.activePracticePermissions.WebAdmin ?\n                                        <Route path=\"/web\" render={(route) => <WebAdminHome {...this.state}\n                                                                                            {...this.props}\n                                                                                            {...route}\n                                                                                            key={that.state.active_practiceId}/>}/>\n                                        : null}\n                                    <Route exact path=\"/calendar/create-appointment\"\n                                           render={(route) => (this.state.activePracticePermissions.AddAppointment || this.state.allowAllPermissions ?\n                                               <CreateAppointment {...this.state}{...this.props} {...route}\n                                                                  startTime={this.state.startTime}/> :\n                                               <PermissionDenied/>)}/>\n\n                                    <Route exact path=\"/calendar/:appointmentid/edit-appointment\"\n                                           render={(route) => (this.state.activePracticePermissions.EditAppointment || this.state.allowAllPermissions ?\n                                               <CreateAppointment {...this.state}{...this.props} {...route}\n                                                                  startTime={this.state.startTime}/> :\n                                               <PermissionDenied/>)}/>\n                                    <Route exact path=\"/calendar/blockcalendar\"\n                                           render={(route) => (that.state.activePracticePermissions.BlockCalendar || that.state.allowAllPermissions ?\n                                               <BlockCalendar {...this.state} {...this.props} {...route}/> :\n                                               <PermissionDenied/>)}/>\n                                    <Route path=\"/calendar\"\n                                           render={(route) => (that.state.activePracticePermissions.ViewCalendar ?\n                                               <Calendar {...that.state}\n                                                         {...that.props}\n                                                         {...route}\n                                                         key={that.state.active_practiceId}/> : <PermissionDenied/>)}/>\n                                    <Route path=\"/patient/:id\" render={(route) => <PatientHome {...this.state}\n                                                                                               {...this.props}\n                                                                                               {...route}\n                                                                                               key={that.state.active_practiceId + \"|\" + route.match.params.id}/>}/>\n\n                                    <Route path=\"/settings\" render={(route) => <SettingsDash {...this.state}\n                                                                                             {...this.props}\n                                                                                             {...route}\n                                                                                             key={that.state.active_practiceId}\n                                                                                             refreshClinicData={this.activeData}/>}/>\n                                    <Route path=\"/inventory\" render={(route) => <InventoryHome {...this.state}\n                                                                                               {...this.props}\n                                                                                               {...route}\n                                                                                               key={that.state.active_practiceId}/>}/>\n                                    <Route path=\"/reports/:type\" render={(route) => <ReportsHome {...this.state}\n                                                                                                 {...this.props}\n                                                                                                 {...route}\n                                                                                                 key={that.state.active_practiceId}/>}/>\n\n                                    <Route path=\"/profile\" render={(route) =>\n                                        <Profile {...this.state}\n                                                 {...this.props}\n                                                 {...route} key={that.state.active_practiceId}/>}/>\n\n                                    <Route path=\"/meeting-booking\" render={(route)=>(this.state.activePracticePermissions.ViewMeeting || this.state.allowAllPermissions?\n                                        <MeetingBooking  {...this.state} {...this.props} {...route}\n                                                         key={that.state.active_practiceId}/>:<PermissionDenied/>)}/>\n                                    {/*<Route path=\"/alternate-medicine\" render={(route)=>(this.state.activePracticePermissions.ManageMedicineConversion || this.state.allowAllPermissions?*/}\n                                    {/*    <AlternateMedicineHome  {...this.state} {...this.props} {...route}*/}\n                                    {/*                     key={that.state.active_practiceId}/>:<PermissionDenied/>)}/>*/}\n\n                                    {this.state.activePracticePermissions.ViewCalendar ?\n                                        <Route exact path=\"/\" render={(route) => <Calendar {...this.state}\n                                                                                           {...this.props}\n                                                                                           {...route}\n                                                                                           key={that.state.active_practiceId}/>}/> : null}\n\n\n\n\n\n                                    <Route path=\"/\" render={(route) => <PatientHome {...this.state}\n                                                                                    {...this.props}\n                                                                                    {...route}\n                                                                                    key={that.state.active_practiceId}/>}/>\n\n\n\n                                    <Route component={Error404}/>\n\n                                 </Switch>\n                                {/*<AppFooter/>*/}\n                            </Layout>\n                        </Layout>\n                    </Route>\n                </Switch>\n                <SuggestionBox {...this.state} close={this.onClose}/>\n            </ErrorBoundary>\n        </Layout>\n            ;\n    }\n}\n\nexport default AppBase;\n","import {Form, Icon, Input, Button, Modal, Divider} from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport {EMAIL, PASSWORD, PHONE, OTP} from \"../../../constants/formLabels\";\nimport {Redirect} from 'react-router';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {displayMessage, makeURL, postOuterAPI} from \"../../../utils/common\";\nimport {RESET_PASSWORD_MAIL} from \"../../../constants/api\";\n\nconst FormItem = Form.Item;\n\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            username: null,\n            userMail: '',\n            redirect: null,\n            resetModalVisible: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showResetModal = this.showResetModal.bind(this);\n        this.changeUserMail = this.changeUserMail.bind(this);\n    }\n\n    showResetModal() {\n        this.setState({\n            resetModalVisible: true\n        });\n    }\n\n    handleOk = (e) => {\n        var that = this;\n        console.log(e);\n        var successFn = function (data) {\n            displayMessage('success', \"Link to update your password have been sent to your mail.\")\n            that.setState({\n                resetModalVisible: false,\n            });\n        }\n        var errorFn = function () {\n\n        }\n        postOuterAPI(makeURL(RESET_PASSWORD_MAIL), {mobile: this.state.userMail}, successFn, errorFn);\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            resetModalVisible: false,\n        });\n    }\n\n    changeUserMail(e) {\n        this.setState({\n            userMail: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let that = this;\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = {\n                    [EMAIL]: values.email,\n                    [PASSWORD]: values.password\n                };\n                that.props.login(data)\n            }\n        });\n    }\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        if (this.state.redirect)\n            return <Redirect to={this.state.redirect}/>\n        return (\n            <>\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <FormItem>\n                        {getFieldDecorator('email', {\n                            rules: [{required: true, message: 'Please input your username!'}],\n                        })(\n                            <Input size=\"large\" prefix={<Icon type=\"phone\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                   placeholder=\"Mobile Number\"/>\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        {getFieldDecorator('password', {\n                            rules: [{required: true, message: 'Please input your Password!'}],\n                        })(\n                            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                   type=\"password\"\n                                   placeholder=\"Password\"/>\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        <a style={{float: 'right'}} type=\"primary\" onClick={this.showResetModal}>\n                            Forgot Password ?\n                        </a>\n                        <Button size=\"large\" loading={this.state.changePassLoading} type=\"primary\" htmlType=\"submit\"\n                                className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </FormItem>\n                </Form>\n                <Divider>OR</Divider>\n                <h4>\n                    <Link to={\"/loginwithphone\"}>\n                        <Button size=\"large\" type=\"primary\"\n                                className=\"login-form-button\">Log in with phone</Button>\n\n                    </Link>\n                </h4>\n                <Divider/>\n                <Modal\n                    title=\"Email to Reset Password\"\n                    visible={this.state.resetModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    okText=\"Reset Password\"\n                >\n                    <Input\n                        placeholder=\"Enter your Mobile Number\"\n                        prefix={<Icon type=\"mobile\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                        onChange={this.changeUserMail}\n                    />\n                </Modal>\n                {this.props.redirect == true && <Redirect push to=\"/\"/>}\n            </>\n        );\n    }\n}\n\nexport default LoginForm;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n","import React from 'react';\nimport {Button, Col, Divider, Form, Icon, Input, Row} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport {displayMessage, makeURL} from \"../../../utils/common\";\nimport {sendLoginOTP} from \"../../../utils/auth\";\nimport {SUCCESS_MSG_TYPE, WARNING_MSG_TYPE} from \"../../../constants/dataKeys\";\nimport {LOGIN_RESEND_OTP, LOGIN_SEND_OTP} from \"../../../constants/api\";\n\nconst FormItem = Form.Item;\n\nclass LoginWithPhone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n\n    handleSubmit = (e) => {\n        let that = this;\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if (!err) {\n\n                    if (that.props.login)\n                        that.props.login(values,false);\n\n                }\n            }\n        });\n    }\n\n    setPhone = (type, value) => {\n        this.setState({\n            [type]: value\n        })\n    }\n    sendOTP = () => {\n        let that = this;\n        if (this.state.phone) {\n            let successFn = function (data) {\n                that.setState({\n                    otpSent: true\n                });\n                displayMessage(SUCCESS_MSG_TYPE, \"OTP Sent successfully!\")\n            }\n            let errorFn = function () {\n\n            }\n            if (this.state.otpSent) {\n                sendLoginOTP(makeURL(LOGIN_RESEND_OTP), this.state.phone, successFn, errorFn);\n            } else {\n                sendLoginOTP(makeURL(LOGIN_SEND_OTP), this.state.phone, successFn, errorFn);\n            }\n        } else {\n            displayMessage(WARNING_MSG_TYPE, \"Phone No can not be empty!!\");\n        }\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                <Input.Group size=\"large\">\n                    <Row>\n                        <Col span={this.state.otpSent ? 24 : 18}>\n                            <FormItem>\n                                {getFieldDecorator('phone_no', {\n                                    rules: [{required: true, message: 'Please input your phone!'}],\n                                })(\n                                    <Input prefix={<Icon type=\"phone\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                           type=\"text\"\n                                           placeholder=\"Phone\"\n                                           onChange={(e) => this.setPhone('phone', e.target.value)}/>\n                                )}\n                            </FormItem>\n                        </Col>\n                        <Col span={this.state.otpSent ? 0 : 6}>\n                            <Button type=\"primary\" size={\"large\"} block onClick={this.sendOTP}>Send OTP</Button>\n                        </Col>\n                    </Row>\n                </Input.Group>\n\n                <FormItem>\n                    {getFieldDecorator('otp', {\n                        rules: [{required: true, message: 'Please input otp!'}],\n                    })(\n                        <Input size=\"large\" prefix={<Icon type=\"key\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                               type=\"text\"\n                               placeholder=\"otp\"/>\n                    )}\n                </FormItem>\n                <FormItem>\n                    {this.state.otpSent ? <a style={{float: 'right'}} type=\"primary\" onClick={this.sendOTP}>\n                        Resend Otp ?\n                    </a> : null}\n                    <Button size=\"large\" type=\"primary\" htmlType=\"submit\"\n                            className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </FormItem>\n\n                <Divider>OR</Divider>\n                <h4>\n                    <Link to={\"/\"}> <Button size=\"large\" type=\"primary\" htmlType=\"submit\"\n                                            className=\"login-form-button\">Log in with password </Button>\n\n                    </Link>\n                </h4>\n                <Divider/>\n\n\n            </Form>\n        );\n    }\n\n}\n\nexport default LoginWithPhone;\n","import React from \"react\";\nimport LoginForm from \"./forms/LoginForm\";\nimport LoginWithPhone from \"./forms/LogintWithPhone\";\nimport {Card, Col, Divider, Form, Layout, Row} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport '../../assets/auth.css';\nimport AppLogo from '../../assets/img/kidneycarelogo.png';\nimport DynamicFieldsForm from \"../common/DynamicFieldsForm\";\nimport {PASSWORD_FIELD, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\nimport {RESET_PASSWORD} from \"../../constants/api\";\nimport {displayMessage} from \"../../utils/common\";\n\nclass Auth extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const LoginFormLayout = Form.create()(LoginForm);\n        const PasswordResetForm = Form.create()(DynamicFieldsForm);\n        const LoginWithPhoneLayout = Form.create()(LoginWithPhone);\n\n        let tokenDefaultValues = [{\n            key: 'code',\n            value: (this.props.match && this.props.match.params.token ? this.props.match.params.token : null)\n        }];\n        let resetPasswordFields = [{\n            label: 'Password',\n            key: 'password',\n            type: PASSWORD_FIELD,\n            required: true\n        }, {\n            label: 'Retype Password',\n            key: 're-password',\n            type: PASSWORD_FIELD,\n            required: true\n        }];\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n            },\n            errorFn: function () {\n\n            },\n            action: RESET_PASSWORD,\n            method: \"post\",\n        }\n        return <Layout className=\"loginLayout\">\n\n            <Switch>\n                <Route path=\"/password-reset/\">\n                    <Row>\n                        {/*<Col xs={{span: 20, offset: 2}} sm={{span: 16, offset: 4}} md={{span: 12, offset: 6}}*/}\n                        {/*lg={{span: 8, offset: 8}} xl={{span: 8, offset: 8}} style={{padding: '35px'}}>*/}\n                        {/*</Col>*/}\n                        <Col xs={{span: 20, offset: 2}} sm={{span: 16, offset: 4}} md={{span: 12, offset: 6}}\n                             lg={{span: 8, offset: 8}} xl={{span: 8, offset: 8}}>\n                            <div className=\"loginFormWrapper\" style={{textAlign: 'center'}}>\n                                <img src={AppLogo} alt=\"\" style={{maxWidth: '70%', minWidth: '50%', padding: '20px'}}/>\n                                <Card>\n                                    <PasswordResetForm {...this.props}\n                                                       formProp={formProp}\n                                                       fields={resetPasswordFields}\n                                                       defaultValues={tokenDefaultValues}/>\n                                </Card>\n                                <Divider/>\n                                <h4>\n                                    {/*<Link to=\"/login\">Login </Link>\n                                    <Divider type=\"vertical\"/>\n                                    <Link to=\"/privacypolicy\">Privacy Policy</Link>\n                                    <Divider style={{margin:'0px'}}>Patient</Divider>*/}\n                                </h4>\n                            </div>\n                        </Col>\n                    </Row>\n                </Route>\n                <Route>\n                    <Row>\n                        {/*<Col xs={{span: 20, offset: 2}} sm={{span: 16, offset: 4}} md={{span: 12, offset: 6}}*/}\n                        {/*lg={{span: 8, offset: 8}} xl={{span: 8, offset: 8}} style={{padding: '35px'}}>*/}\n                        {/*</Col>*/}\n                        <Col xs={{span: 20, offset: 2}} sm={{span: 16, offset: 4}} md={{span: 12, offset: 6}}\n                             lg={{span: 8, offset: 8}} xl={{span: 8, offset: 8}} style={{padding: '35px'}}>\n                            <div className=\"loginFormWrapper\" style={{textAlign: 'center'}}>\n                                <img src={AppLogo} alt=\"\" style={{maxWidth: '70%', minWidth: '50%', padding: '20px'}}/>\n                                <Switch>\n\n                                    {/*<Divider/>*/}\n\n                                    <Route path=\"/loginwithphone\">\n                                        <LoginWithPhoneLayout {...this.props} login={this.props.login}/>\n                                    </Route>\n\n\n                                    <Route>\n                                        <LoginFormLayout {...this.props} login={this.props.login}/>\n                                    </Route>\n\n                                    <Route>\n\n                                    </Route>\n\n                                </Switch>\n\n\n                                <h4 style={{textAlign: 'center'}}>\n                                    Powered By: <a href=\"https://plutonic.co.in/\" target=\"_blank\">Plutonic Services</a>\n                                </h4>\n                            </div>\n                        </Col>\n                    </Row>\n                </Route>\n            </Switch>\n        </Layout>\n    }\n}\n\n\nexport default Auth;\n","import React, {Component} from 'react';\nimport {Affix, Alert, Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {loggedInUser, logInUser, logInUserWithOtp, logOutUser,} from \"./app/utils/auth\";\nimport AppBase from \"./app/components/core/AppBase\";\nimport Auth from \"./app/components/auth/Auth\";\nimport ReactGA from 'react-ga';\nimport CONFIG from \"./app.config\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        ReactGA.initialize('UA-143616458-1');\n\n        this.state = {\n            user: loggedInUser(),\n            redirect: false,\n            production: (window.location.hostname == \"clinic.bkarogyam.com\")\n        };\n        // momenttz.tz.setDefault('Asia/Kolkata');\n\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            ReactGA.pageview(window.location.pathname + window.location.search);\n        }\n    }\n    login(data, withOtp = true) {\n        let that = this;\n        let successFn = function () {\n            let user = loggedInUser();\n            that.setState({\n                user: user,\n            });\n        };\n        let errorFn = function () {\n\n        };\n        if (withOtp)\n            logInUser(data, successFn, errorFn);\n        else\n            logInUserWithOtp({...data}, successFn, errorFn)\n    }\n\n    logout() {\n        let that = this;\n        let successFn = function () {\n            that.setState({\n                user: null\n            });\n        };\n        let errorFn = function () {\n        };\n        logOutUser(successFn, errorFn);\n    }\n\n    render() {\n\n        return <Layout>\n            {this.state.production ? null : <Affix>\n                <Alert\n                    message=\"Demo Version (Only for testing purposes)\"\n                    banner\n                    closable\n                />\n            </Affix>}\n            <Switch>\n                <Route exact path=\"/login\" render={() => <Auth {...this.state} login={this.login}/>}/>\n                <Route exact path=\"/password-reset/:token\"\n                       render={(route) => <Auth {...route} {...this.state} login={this.login}/>}/>\n                <Route render={(route) => (this.state.user ?\n                    <AppBase {...this.state} {...route} {...this.props} logout={this.logout}/> :\n                    <Auth {...this.state} login={this.login}/>)}/>\n            </Switch>\n        </Layout>\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './app/assets/theme.less';\nimport './app/assets/custom.css';\n\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios/index\";\nimport {message} from 'antd';\nimport {getAuthToken} from \"./auth\";\nimport {API_URL} from \"../constants/api\";\nimport {IMAGE_BASE_URL} from \"../config/connect\";\nimport {\n    ERROR_MESSAGE_404,\n    ERROR_MESSAGE_500,\n    PASS_DIGIT,\n    PASS_LEN,\n    PASS_LOWER, PASS_SPEC,\n    PASS_UPPER\n} from \"../constants/messages\";\nimport {\n    CALENDAR_SETTINGS,\n    ERROR_MSG_TYPE,\n    INFO_MSG_TYPE,\n    SUCCESS_MSG_TYPE,\n    WARNING_MSG_TYPE\n} from \"../constants/dataKeys\";\nimport * as lockr from \"lockr\";\n\nexport const makeURL = function (URL) {\n    return API_URL + '/' + URL;\n};\nexport const makeFileURL = function (URL) {\n    return IMAGE_BASE_URL + '/' + URL;\n}\nexport const putAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'put',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        handleErrorResponse(error);\n        errorFn(data);\n    });\n};\n\nexport const postAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'post',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const postOuterAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'post',\n        url: URL,\n        data: data,\n        headers: {\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const patchAPI = function (URL, data, successFn, errorFn, headerConfig = {}) {\n    // console.log(\"sending to \" + makeURL(URL), data);\n    axios({\n        method: 'patch',\n        url: makeURL(URL),\n        data: data,\n        headers: {\n            Authorization: 'Token ' + getAuthToken(),\n            ...headerConfig\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const getAPI = function (URL, successFn, errorFn, params = {}) {\n    // console.log(getAuthToken());\n    axios({\n        method: 'get',\n        url: makeURL(URL),\n        headers: {\n            Authorization: 'Token ' + getAuthToken()\n        },\n        params: params\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(\"Error aa rhi \", error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\nexport const deleteAPI = function (URL, successFn, errorFn) {\n    // console.log(getAuthToken());\n    axios({\n        method: 'delete',\n        url: makeURL(URL),\n        headers: {\n            Authorization: 'Token ' + getAuthToken()\n        }\n    }).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        successFn(data);\n        if (data.detail)\n            displayMessage(SUCCESS_MSG_TYPE, data.detail)\n    }).catch(function (error) {\n        console.log(\"Error aa rhi \", error);\n        handleErrorResponse(error);\n        errorFn();\n    });\n};\n\nexport const handleErrorResponse = function (error) {\n    let response = error.response;\n    if (response) {\n        console.info(\"Error Response Received\", response);\n        let status = response.status;\n        if (status == 400) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 401) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 403) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            }\n        } else if (status == 404) {\n            if (response.data.detail) {\n                message.error(response.data.detail);\n            } else {\n                message.error(ERROR_MESSAGE_404);\n            }\n        } else if (status == 500) {\n            message.error(ERROR_MESSAGE_500);\n        }\n    } else {\n        // message.error(ERROR_INTERNET_CONNECTIVITY);\n        console.error(response);\n    }\n};\n\nexport const interpolate = function (theString, argumentArray) {\n    var regex = /%s/;\n    var _r = function (p, c) {\n        return p.replace(regex, c);\n    };\n    return argumentArray.reduce(_r, theString);\n};\n\n\nexport const displayMessage = function (type, msg) {\n    if (type == SUCCESS_MSG_TYPE)\n        message.success(msg);\n    else if (type == INFO_MSG_TYPE)\n        message.info(msg);\n    else if (type == WARNING_MSG_TYPE)\n        message.warning(msg);\n    else if (type == ERROR_MSG_TYPE)\n        message.error(msg);\n};\n\nexport const startLoadingMessage = function (msg) {\n    return message.loading(msg, 0);\n};\nexport const stopLoadingMessage = function (msgFn, finishMsgType, finishMsg) {\n    msgFn();\n    if (finishMsgType)\n        displayMessage(finishMsgType, finishMsg);\n    return true;\n}\n\nexport const parseQueryString = function (query) {\n    var obj = {};\n    // console.log(query, query.length);\n    if (query.length) {\n        if (query[0] == '?' || query[0] == '#') {\n            query = query.substring(1, query.length)\n        }\n        var tempArr = query.split('&');\n        console.log(tempArr);\n        tempArr.forEach(function (str) {\n            var arr = str.split('=');\n            if (arr.length == 2) {\n                obj[arr[0]] = arr[1]\n            }\n        });\n    }\n    return obj;\n}\nexport const validatePassword = function (rule, value, callback) {\n\n    if (value.length < 6 && value.length != 0) {\n        return (PASS_LEN);\n    }\n    if (value == value.toLowerCase() && value.length != 0) {\n        return (PASS_UPPER);\n    }\n    else if (value == value.toUpperCase() && value.length != 0) {\n        return (PASS_LOWER);\n    }\n    else if (value.search(/[0-9]/) < 0 && value.length != 0) {\n        return (PASS_DIGIT);\n    }\n    else if (!(/^[a-zA-Z0-9 ]*$/.test(value) == true && value.length != 0)) {\n    } else {\n        return (PASS_SPEC);\n    }\n    return;\n}\n\nexport const saveCommonSettings = function (type, value) {\n    lockr.set(type, value);\n}\nexport const getCommonSettings = function (type) {\n    let savedStates = lockr.get(type);\n    if (savedStates)\n        return savedStates;\n    return false;\n}\n\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach(k =>\n    (obj[k] && typeof obj[k] === 'object') && removeEmpty(obj[k]) ||\n    (!obj[k] && obj[k] !== undefined) && delete obj[k]\n  );\n  return obj;\n};","import React from \"react\";\nimport {Button, Result, Row} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nclass PermissionDenied extends React.Component {\n    render() {\n        return <Row style={{marginTop: '20px'}}>\n            <Result\n                status=\"403\"\n                title={<span><h1><b>403</b></h1>\n        <h2>Permission Denied</h2></span>}\n                subTitle=\"You don't have permission to view this page.\"\n                extra={<Link to=\"/\"><Button type=\"primary\">Go to Home</Button></Link>}\n            />\n        </Row>\n    }\n}\n\nexport default PermissionDenied;\n","import {BACKEND_BASE_URL} from \"../config/connect\";\n\n/***\n * API Connection URLs\n * */\nexport const API_URL = BACKEND_BASE_URL + '/erp-api';\nexport const CONFIG_API = 'users/config/';\nexport const FILE_UPLOAD_API = 'blogImage/';\nexport const FILE_UPLOAD_BASE64 = 'blogImage/create_with_base64/';\nexport const LOGIN_SEND_OTP = 'staff_login/send_otp/';\nexport const LOGIN_RESEND_OTP = 'staff_login/resend_otp/';\nexport const SIGNUP_URL = '';\nexport const RESET_PASSWORD = 'users/reset_password/';\nexport const CHANGE_PASSWORD = 'users/passwordchange/';\nexport const RESET_PASSWORD_MAIL = 'users/staff_reset_mail/';\nexport const LOGIN_URL = 'users/login/';\nexport const OTP_LOGIN_URL = 'staff_login/verify_otp/';\nexport const USER_DATA = 'users/user_clone/';\nexport const PRACTICESTAFF = 'clinics/%s/practice_staff/';\nexport const ENABLE_STAFF_IN_PRACTICE = 'staff/%s/practice_list/'\nexport const DOCTOR_VISIT_TIMING_API = 'clinics/%s/doctor_timing/';\nexport const USER_PRACTICE_PERMISSIONS = 'user_permissions/?staff=%s&practice=%s';\nexport const SET_USER_PERMISSION = 'user_permissions/';\nexport const SET_SPECIFIC_USER_PERMISSION = 'user_permissions/%s/';\nexport const ALL_PRACTICE = 'clinics/';\nexport const ALL_PERMISSIONS = 'users/all_permissions/';\nexport const UPDATE_BULK_PERMISSIONS = 'user_permissions/bulk/';\nexport const PRACTICE = 'clinics/%s/';\nexport const PRACTICE_DELETE = 'clinics/%s/delete_clinic/';\nexport const TAXES = 'clinics/%s/taxes/';\nexport const OFFERS = 'clinics/%s/offers/';\nexport const PAYMENT_MODES = 'clinics/%s/payment_modes/';\nexport const PROCEDURE_CATEGORY = 'clinics/%s/procedure_category/';\nexport const PROMO_CODE ='promocode/';\nexport const SINGLE_PROMO_CODE ='promocode/%s/';\nexport const CHECK_PROMO_CODE ='promocode/promo_value/';\n\nexport const EMR_DIAGNOSES = 'clinics/%s/diagnoses/';\nexport const EMR_COMPLAINTS = 'clinics/%s/complaints/';\nexport const EMR_OBSERVATIONS = 'clinics/%s/observations/';\nexport const EMR_TREATMENTNOTES = 'clinics/%s/treatmentnotes/';\nexport const EMR_INVESTIGATIONS = 'clinics/%s/investigations/';\nexport const EMR_FILETAGS = 'clinics/%s/filetags/';\nexport const EMR_VITAL_SIGNS = 'clinics/%s/vital_sign/';\nexport const EMR_MEDICATION = 'clinics/%s/medication/';\nexport const APPOINTMENT_CATEGORIES = 'clinics/%s/appointment_category/';\nexport const ALL_PRACTICE_STAFF = 'staff/';\nexport const SINGLE_PRACTICE_STAFF_API = 'staff/%s/';\n\nexport const PATIENTS_LIST = 'patients/';\nexport const PATIENT_PROFILE = 'patients/%s/';\nexport const MERGE_PATIENTS = 'patients/merge_patients/';\nexport const STAFF_ROLES = 'staff/roles/';\nexport const MEDICAL_HISTORY = 'patients/history/?id=%s';\n// export const PATIENT_MEDICAL_HISTORY = 'patients/history/?id=%s';\nexport const PATIENT_FILES = 'patients/files/';\nexport const ALL_PATIENT_FILES = 'patients/files/';\nexport const PATIENT_LEDGER = 'patients/%s/ledger/';\nexport const EXPENSE_TYPE = 'clinics/%s/expense_type/';\nexport const DRUG_CATALOG = 'clinics/%s/drugcatalog/';\nexport const SINGLE_DRUG_CATALOG = 'clinics/%s/drugcatalog/?id=%s';\nexport const LABTEST_API = 'clinics/%s/labtest/';\nexport const COMMUNICATONS_API = 'clinics/%s/communications/';\nexport const EMAIL_COMMUNICATONS_API = 'clinics/%s/email_communications/';\nexport const CALENDER_SETTINGS = 'clinics/%s/calender_settings/';\nexport const ALL_APPOINTMENT_API = 'appointment/';\nexport const APPOINTMENT_API = 'appointment/%s/';\nexport const APPOINTMENT_PERPRACTICE_API = 'appointment/?id=%s';\nexport const SINGLE_APPOINTMENT_PERPRACTICE_API = 'appointment/?id=%s&patient=%s';\nexport const PATIENT_GROUPS = 'patients/group/?id=%s';\nexport const VITAL_SIGNS_API = 'patients/vital_sign/'; //?patient=patientId&practice=practiceId\nexport const PRESCRIPTIONS_API = 'patients/prescriptions/'; //?id=patientId&practice=practiceId\nexport const SINGLE_REATMENTPLANS_API = 'patients/procedure/?id=%s';\nexport const BLOCK_CALENDAR = 'appointment/block_calendar/';\nexport const APPOINTMENT_SCHEDULE = 'appointment/?practice=%s';\n\nexport const PATIENT_NOTES = 'patients/patient_notes/?patient=%s&practice=%s';\nexport const LABPANEL_API = 'clinics/%s/labpanel/';\nexport const PATIENT_TIMELINE_API = 'patients/%s/combine_patient_report/';\nexport const PATIENT_TIMELINE_PDF = 'patients/%s/timeline_pdf/';\nexport const ALL_MEDICAL_CERITICATE_API = 'patients/medical_certificate/?practice=%s&page=%s'\nexport const MEDICAL_CERTIFICATE_API = 'patients/medical_certificate/?practice=%s&patient=%s';\nexport const MEDICAL_MEMBERSHIP_CANCEL_API = 'patients/cancel_membership/'\nexport const PATIENTS_MEMBERSHIP_API = 'patients/membership/?patient=%s'\nexport const PATIENT_MAILEDFILES = 'patients/files/';\n/*DELETE OBJECT*/\nexport const TREATMENTPLANS_API = 'patients/procedure/'; //?id=patientId&complete=true/false\nexport const TREATMENTPLANS_MARK_COMPLETE_API = 'patients/complete_procedure/?id=%s&complete=%s';\nexport const ALL_PRESCRIPTIONS_API = 'patients/prescriptions/%s/';\nexport const INVOICES_API = 'invoice/';\nexport const SINGLE_INVOICES_API = 'invoice/%s/'\nexport const INVOICE_PDF_API = 'invoice/%s/get_pdf';\nexport const CREATE_OR_EDIT_INVOICES = 'invoice/';\nexport const SINGLE_INVOICE_API = 'invoice/%s/';\nexport const PATIENT_CLINIC_NOTES_API = 'patients/clinic_notes/';\nexport const PATIENT_PAYMENTS_API = 'payment/';\nexport const SINGLE_PAYMENT_API = 'payment/%s/';\nexport const BULK_PAYMENT_API = 'payment/bulk_payments/';\nexport const PRACTICE_PRINT_SETTING_API = 'clinics/%s/practice_print_settings/?type=%s&sub_type=%s';\nexport const SAVE_ALL_PRINT_SETTINGS = 'clinics/%s/all_print_settings/';\nexport const PATIENT_COMMUNICATION_HISTORY_API = 'users/sms_status_update/?user=%s';\nexport const PRESCRIPTION_TEMPLATE = \"clinics/%s/prescription_template/\";\nexport const UNPAID_PRESCRIPTIONS = \"patients/unpaid_prescriptions/?id=%s\";\nexport const CANCELINVOICE_GENERATE_OTP = \"patients/generate_otp/\";\nexport const CANCELINVOICE_VERIFY_OTP = 'patients/verify_otp/';\nexport const CANCELINVOICE_RESENT_OTP = 'patients/resend_otp/'\nexport const INVOICE_RETURN_API = 'return/';\nexport const SINGLE_RETURN_API = 'return/%s/'\nexport const RETURN_INVOICE_PDF_API = 'return/%s/get_pdf'\n//search and advanced search API\nexport const ADVANCED_SEARCH_PATIENT = 'patients/advance_search/'\nexport const SEARCH_PATIENT = 'patients/search/?name=%s';\nexport const PATIENT_PENDING_AMOUNT = 'patients/%s/pending_amount/';\nexport const AVAILABLE_ADVANCE = 'patients/%s/advance_payment/';\n//extra data\nexport const EXTRA_DATA = 'clinics/extra_data/';\nexport const COUNTRY = 'patients/country/';\nexport const STATE = 'patients/state/';\nexport const CITY = 'patients/city/';\nexport const SOURCE = 'patients/source/';\n/**\n * Reports API\n * */\n\n/** *Patient Reports* **/\nexport const PATIENTS_REPORTS = 'patients/new_patients';\nexport const ACTIVE_PATIENTS_REPORTS = 'patients/active_patients';\nexport const MEMBERSHIP_REPORTS = 'patients/membership_report';\nexport const FIRST_APPOINTMENT_REPORTS = 'patients/first_appointment';\n\n/** Appointment Reports**/\nexport const PATIENT_APPOINTMENTS_REPORTS = 'appointment/appointment_report';\n\n/** EMR Reports**/\nexport const EMR_REPORTS = 'clinics/%s/emr_report';\n\n/** Inventory Retails Reports**/\nexport const PRODUCTS_API = 'inventory_item/products/';\nexport const INVENTORY_RETAILS_REPORT = 'inventory_item/inventory_retail';\n\n/** Expense Reports ***/\nexport const EXPENSE_PAYMENT_MODE_API = 'expenses';\nexport const EXPENSE_REPORT_API = 'expenses/report';\n/** Inventory Reports***/\nexport const INVENTORY_REPORT_API = 'inventory_item/inventory_report';\n\n/** MLM Reports**/\nexport const MLM_Reports = 'patients/mlm_report';\nexport const MLM_Agent_Wallet = 'patients/agent_wallet_balance';\n/** Payment Reports**/\nexport const PAYMENT_REPORTS = 'xyz';\n\n/** Income Reports**/\nexport const INCOME_REPORTS = \"invoice/invoice_reports\";\n\n/** Return Invoice**/\n\nexport const RETURN_INVOICE_REPORTS =\"return/return_reports/\";\n\n/** Amount Due Reports **/\nexport const AMOUNT_DUE_REPORTS ='invoice/amount_due/';\n\nexport const APPOINTMENT_REPORTS = 'clinics/%s/appointment_report/';\nexport const EXPENSE_REPORT = 'clinics/%s/expense_report/';\nexport const INVOICE_REPORTS = 'clinics/%s/invoice_report/';\n// export const PATIENTS_REPORTS = 'clinics/%s/patients_report/';\nexport const PAYMENTS_REPORTS = 'clinics/%s/payments_report/';\nexport const TREATMENT_REPORTS = 'clinics/%s/treatment_report/';\nexport const DRUG_TYPE_API = 'clinics/%s/drugtype/';\nexport const DRUG_UNIT_API = 'clinics/%s/drugunit/';\nexport const PRINT_PREVIEW_RENDER = 'patients/print/';\nexport const MEMBERSHIP_API = 'clinics/%s/membership/';\nexport const BED_BOOKING_REPORTS = 'clinics/seat_booking_report';\nexport const ACCEPT_PAYMENT = 'clinics/payment/';\n\nexport const MAILING_USERS_LIST = '/users/reports_mail/';\n/**\n * Blogs API\n * */\n\nexport const BLOG_POST = 'post/';\nexport const SINGLE_POST = 'post/%s/';\nexport const BLOG_VIDEOS = 'video/';\nexport const SINGLE_VIDEO = 'video/%s/';\nexport const BLOG_DISEASE = 'disease/';\nexport const SINGLE_DISEASE = 'disease/%s/';\nexport const BLOG_EVENTS = 'events/';\nexport const SINGLE_EVENTS = 'events/%s/';\nexport const BLOG_CONTACTUS = 'contactus/';\nexport const SINGLE_CONTACT = 'contactus/%s/';\nexport const BLOG_PAGE_SEO = 'page_seo/';\nexport const SINGLE_PAGE_SEO = 'page_seo/%s/';\nexport const BLOG_SLIDER = 'slider/';\nexport const SINGLE_SLIDER = 'slider/%s/';\nexport const BLOG_FACILITY = 'facility/';\nexport const SINGLE_FACILITY = 'facility/%s/';\nexport const LANDING_PAGE_CONTENT = 'landing_page_content/';\nexport const SINGLE_LANDING_PAGE_CONTENT = 'landing_page_content/%s/';\nexport const LANDING_PAGE_VIDEO = 'landing_page_video/';\nexport const SINGLE_LANDING_PAGE_VIDEO = 'landing_page_video/%s/';\nexport const MANAGE_PRODUCT = 'product_content/';\nexport const MANAGE_SINGLE_PRODUCT = 'product_content/%s/';\nexport const MANAGE_THERAPY = 'therapy_content/';\nexport const MANAGE_SINGLE_THERAPY = 'therapy_content/%s/';\n\n\n/**\n * INVENTORY API\n * */\n\nexport const EXPENSES_API = \"expenses/\";\nexport const SINGLE_EXPENSES_API = \"expenses/%s/\";\nexport const VENDOR_API = \"clinics/%s/vendor/\";\nexport const SINGLE_VENDOR_API = \"vendor/%s/\";\nexport const ACTIVITY_API = \"activity/\";\nexport const SINGLE_ACTIVITY_API = \"activity/%s/\";\nexport const LAB_API = \"lab/\";\nexport const SINGLE_LAB_API = \"lab/%s/\";\nexport const MANUFACTURER_API = \"manufacturer/\";\nexport const SINGLE_MANUFACTURER_API = \"manufacturer/%s/\";\nexport const INVENTORY_ITEM_API = \"inventory_item/\";\nexport const SINGLE_INVENTORY_ITEM_API = \"inventory_item/%s/\";\nexport const INVENTORY_API = \"inventory/\";\nexport const SINGLE_INVENTORY_API = \"inventory/%s/\";\nexport const ITEM_TYPE_STOCK = \"item_type_stock/\";\nexport const SINGLE_ITEM_TYPE_STOCK = \"item_type_stock/%s/\";\nexport const STOCK_ENTRY = \"stock_entry/\";\nexport const BULK_STOCK_ENTRY = \"stock_entry/bulk/\";\nexport const SUPPLIER_API = 'stock_entry/practice_supplier';\nexport const SEARCH_THROUGH_QR = 'item_type_stock/find_item';\nexport const BILL_SUPPLIER = 'stock_entry/bills_suppliers/';\nexport const INVENTORY_ITEM_EXPORT = 'inventory_item/export'\n\n/**\n * MLM API\n * */\nexport const ROLE_COMMISION = \"role_commission/\";\nexport const PRODUCT_LEVEL = \"product_level\";\nexport const PRODUCT_MARGIN = \"product_margin/\";\nexport const SINGLE_PRODUCT_MARGIN = \"product_margin/%s/\";\nexport const GENERATE_MLM_COMMISSON = 'product_margin/generate_mlm/';\nexport const AGENT_ROLES = 'role_commission/agent_roles/';\nexport const AGENT_WALLET = 'patient_wallet/?patient=%s';\nexport const WALLET_LEDGER = 'wallet_ledger/?patient=%s';\nexport const WALLET_LEDGER_SUM = 'wallet_ledger/ledger_sum/?patient=%s';\nexport const MY_AGENTS = 'patients/%s/my_agents/';\n\n/**\n * PDFs Links\n * */\n\nexport const PRESCRIPTION_PDF = 'patients/prescriptions_pdf/?id=%s';\nexport const VITAL_SIGN_PDF = 'patients/vital_sign_pdf/?id=%s';\nexport const CLINIC_NOTES_PDF = 'patients/clinic_notes_pdf/?id=%s';\nexport const TREATMENTPLANS_PDF = 'patients/treatment_plan_pdf/?id=%s';\nexport const MEDICAL_CERTIFICATE_PDF = 'patients/medical_certificate_pdf/?id=%s';\nexport const PAYMENT_PDF = 'payment/%s/get_pdf/';\n\n/**\n * Reservation System\n * */\nexport const ROOM_TYPE = 'clinics/%s/room_types/';\nexport const BED_PACKAGES = 'clinics/%s/bed_packages/';\nexport const MEDICINE_PACKAGES = 'clinics/%s/medicine_packages/';\nexport const BOOK_SEAT = 'clinics/%s/seat_booking/';\nexport const CHECK_SEAT_AVAILABILITY = 'clinics/%s/seat_availability/';\nexport const DISEASE_LIST = 'clinics/%s/other_diseases/';\n\n\n/** Agent Tree***/\nexport const AGENT_TREE = 'patients/%s/agents_chain/';\n\n/**suggestions**/\nexport const SUGGESTIONS = 'suggestions/';\n\n/** Credentials Save**/\nexport const CREDENTIALS = 'https://www.bkarogyam.com/api/authenticate';\nexport const SWITCH_PORTAL = '';\nexport const SAVE_CREDENTIALS = 'users/%s/task_login/';\n\n/** Meetings**/\nexport const MEETING_USER = 'meetings/zoom_user/';\nexport const MEETINGS = 'meetings/';\nexport const MEETING_DETAILS = 'meetings/details';\nexport const SINGLE_MEETING = 'meetings/%s/';\n\n/** Alternate Medicine Conversion **/\nexport const ALTERNATE_MEDICINE = 'conversion/';\n","export const hideMobile = function (mobile) {\n    let hideString = '*';\n    if (mobile && mobile.length > 8) {\n        return mobile.substring(0, 3) + hideString.repeat(mobile.length - 5) + mobile.substring(mobile.length - 2);\n    }\n    return mobile;\n}\nexport const hideEmail = function (email) {\n    let hideString = '*';\n    if (email && email.length > 8) {\n        return email.substring(0, 3) + hideString.repeat(email.length - email.indexOf('@') - 4) + email.substring(email.length - email.indexOf('@') - 4);\n    }\n    return email;\n}\n","module.exports = __webpack_public_path__ + \"static/media/kidneycarelogo.3378a129.png\";","import React from \"react\";\nimport {\n    Button,\n    Checkbox,\n    DatePicker,\n    Divider,\n    Form,\n    Icon,\n    Input,\n    InputNumber,\n    message,\n    Modal,\n    Radio,\n    Select,\n    Tag,\n    TimePicker,\n    Upload,\n} from \"antd\";\nimport {\n    CHECKBOX_FIELD,\n    CITY_FIELD,\n    COLOR_PICKER,\n    COUNTRY_FIELD,\n    DATE_PICKER,\n    DATE_TIME_PICKER,\n    DIVIDER_FIELD,\n    EMAIL_FIELD,\n    INPUT_FIELD, LABEL_FIELD,\n    MAIL_TEMPLATE_FIELD,\n    MULTI_IMAGE_UPLOAD_FIELD,\n    MULTI_SELECT_FIELD,\n    NUMBER_FIELD,\n    PASSWORD_FIELD,\n    QUILL_TEXT_FIELD,\n    RADIO_FIELD,\n    SELECT_FIELD,\n    SINGLE_CHECKBOX_FIELD,\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    SMS_FIELD,\n    STATE_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD,\n    TIME_PICKER\n} from \"../../constants/dataKeys\";\nimport {REQUIRED_FIELD_MESSAGE} from \"../../constants/messages\";\nimport {displayMessage, getAPI, makeFileURL, makeURL, postAPI, putAPI} from \"../../utils/common\";\nimport moment from \"moment\";\nimport SwatchesPicker from 'react-color/lib/Swatches';\nimport {EXTRA_DATA, FILE_UPLOAD_API, FILE_UPLOAD_BASE64} from \"../../constants/api\";\nimport WebCamField from \"./WebCamField\";\nimport {Editor} from 'react-draft-wysiwyg';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport {ContentState, convertToRaw, EditorState} from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nconst {TextArea} = Input;\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst CheckboxGroup = Checkbox.Group;\n\n\nclass DynamicFieldsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: this.props.fields, //Fields data to create the form\n            formData: {},\n            formProp: this.props.formProp,    //Form data to send on form submission\n            disabled: false,\n            loading: false,\n            countryOptions: [],\n            stateOptions: [],\n            cityOptions: [],\n            smsFields: {},\n            urlInitialValues: {},\n            webCamState: {},\n            editorState: {}\n        }\n        this.resetFormData = this.resetFormData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.colorChange = this.colorChange.bind(this);\n        this.loadCountryData = this.loadCountryData.bind(this);\n        this.addSMSTag = this.addSMSTag.bind(this);\n        // this.onFormFieldDataChange = this.onFormFieldDataChange.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log(\"Recieved New Props in Dynamic Form\", nextProps);\n    }\n\n    fieldDecorators = (field, formData) => {\n        let urlInitialValues = this.state.urlInitialValues;\n        // console.log(urlInitialValues);\n        if (field.type == MULTI_SELECT_FIELD) {\n            return {\n                initialValue: formData[field.key] ? formData[field.key] : (urlInitialValues[field.key] ? urlInitialValues[field.key] : formData[field.key]),\n                rules: [{\n                    required: field.required,\n                    message: REQUIRED_FIELD_MESSAGE,\n                    type: 'array'\n                }]\n            }\n        }\n\n        return {\n            initialValue: formData[field.key] ? formData[field.key] : (urlInitialValues[field.key] ? urlInitialValues[field.key] : formData[field.key]),\n            rules: [{\n                required: field.required,\n                message: REQUIRED_FIELD_MESSAGE\n            }]\n        }\n    }\n\n    componentDidMount() {\n        let that = this;\n        this.resetFormData();\n        this.props.fields.forEach(function (field) {\n            if (field.type == COUNTRY_FIELD) {\n                that.loadCountryData();\n            }\n        });\n        if (this.props.history && this.props.history.location.search) {\n            let pairValueArray = this.props.history.location.search.substr(1).split('&');\n            if (pairValueArray.length) {\n                let urlInitialValue = {};\n                pairValueArray.forEach(function (item) {\n                    let keyValue = item.split('=');\n                    if (keyValue && keyValue.length == 2) {\n                        if (!isNaN(keyValue[1]) && keyValue[1].toString().indexOf('.') != -1) {\n                            urlInitialValue[keyValue[0]] = parseFloat(keyValue[1]);\n                        } else if (!isNaN(keyValue[1])) {\n                            urlInitialValue[keyValue[0]] = parseInt(keyValue[1]);\n                        } else {\n                            urlInitialValue[keyValue[0]] = keyValue[1];\n                        }\n                    }\n                });\n                this.setState({\n                    urlInitialValues: urlInitialValue\n                })\n            }\n        }\n    }\n\n    resetFormData() {\n        let formData = {};\n        this.state.fields.forEach(function (field) {\n            formData[field.key] = field.initialValue\n        });\n        this.setState({\n            formData: formData\n        })\n    }\n\n    // onFormFieldDataChange() {\n    //     if (this.props.formProp.onFieldsDataChange) {\n    //         let values = this.props.form.getFieldsValue();\n    //         console.log(values);\n    //         this.props.formProp.onFieldsDataChange(values);\n    //     }\n    // }\n\n    handleSubmit = (e) => {\n        let that = this;\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                if (this.props.defaultValues) {\n                    this.props.defaultValues.forEach(function (object) {\n                        // values[object.key] = object.value;\n                        values = {[object.key]: object.value, ...values}\n                    })\n                }\n                if (this.state.colorPickerKey) {\n                    values[this.state.colorPickerKey] = this.state.colorPickerColor;\n                }\n                that.props.fields.forEach(function (formFields) {\n                    if (formFields.type == SINGLE_IMAGE_UPLOAD_FIELD) {\n                        let key = formFields.key;\n                        if (values[key] && values[key].file && values[key].file.response)\n                            values[key] = values[key].file.response.image_path;\n                        else\n                            values[key] = formFields.initialValue;\n                    } else if (formFields.type == MULTI_IMAGE_UPLOAD_FIELD) {\n                        let key = formFields.key;\n                        if (values[key] && values[key].file && values[key].file.response)\n                            values[key] = values[key].fileList.map(file => file.response.id);\n                        else\n                            values[key] = formFields.initialValue;\n                    } else if (formFields.type == TIME_PICKER || formFields.type == DATE_PICKER || formFields.type == DATE_TIME_PICKER) {\n                        let key = formFields.key;\n                        if (formFields.format) {\n                            values[key] = moment(values[key]).isValid() ? moment(values[key]).format(formFields.format) : null;\n                        }\n                    } else if (formFields.type == QUILL_TEXT_FIELD) {\n                        let key = formFields.key;\n                        values[key] = that.state.editorState[key] ? draftToHtml(convertToRaw(that.state.editorState[key].getCurrentContent())) : formFields.initialValue;\n                    }\n                });\n                if (that.state.formProp.beforeSend) {\n                    values = that.state.formProp.beforeSend(values);\n                }\n                if (that.state.formProp.confirm) {\n                    Modal.confirm({\n                        title: that.state.formProp.confirmText || \"Are you sure to submit?\",\n                        onOk: function () {\n                            that.submitForm(values);\n                        },\n                        onCancel: function () {\n\n                        }\n                    })\n                } else {\n                    that.submitForm(values);\n                }\n\n            }\n        });\n    }\n\n    submitForm(data) {\n        let that = this;\n        this.setState({\n            disabled: true,\n            loading: true,\n        });\n        let successFn = function (data) {\n            that.state.formProp.successFn(data);\n            that.setState({\n                disabled: false,\n                loading: false,\n            });\n            if (that.props.changeRedirect) {\n                that.props.changeRedirect();\n            }\n        };\n        let errorFn = function () {\n            that.state.formProp.errorFn();\n            that.setState({\n                disabled: false,\n                loading: false,\n            });\n        };\n        if (this.props.formProp.method == \"post\") {\n            postAPI(this.props.formProp.action, data, successFn, errorFn);\n        } else if (this.props.formProp.method == \"put\") {\n            putAPI(this.props.formProp.action, data, successFn, errorFn);\n        }\n    }\n\n    colorChange(color, key) {\n        let that = this;\n        this.setState({\n            colorPickerKey: key,\n            colorPickerColor: color.hex,\n        }, function () {\n            that.props.form.setFieldsValue({[key]: color.hex})\n        });\n    }\n\n    setAddressField(type, value) {\n        if (type == 'country') {\n            this.setState(function (prevState) {\n                let states = []\n                prevState.countryOptions.forEach(function (country) {\n                    if (country.id == value) {\n                        states = country.states\n                    }\n                })\n                return {stateOptions: states}\n            })\n        } else {\n            this.setState(function (prevState) {\n                let cities = [];\n                prevState.stateOptions.forEach(function (state) {\n                    if (state.id == value) {\n                        cities = state.cities\n                    }\n                })\n                return {cityOptions: cities}\n            })\n        }\n    }\n\n    loadCountryData() {\n        var that = this;\n        let successFn = function (data) {\n            that.setState({\n                countryOptions: data.country,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(EXTRA_DATA, successFn, errorFn);\n    }\n\n    addSMSTag(key, value) {\n        let that = this;\n        let prevValue = that.props.form.getFieldValue(key) || '';\n        that.props.form.setFieldsValue({\n            [key]: prevValue + value\n        });\n    }\n\n    addMailTemplateTag = (key, value) => {\n        let that = this;\n        this.setState(function (prevState) {\n            let currentHtml = prevState.editorState[key] ? draftToHtml(convertToRaw(prevState.editorState[key].getCurrentContent())) : '';\n            currentHtml += value;\n            return {\n                editorState: {\n                    ...prevState.editorState,\n                    [key]: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(currentHtml)))\n                }\n            }\n        })\n    }\n    toggleWebCam = (type, value) => {\n        this.setState(function (prevState) {\n            return {\n                webCamState: {...prevState.webCamState, [type]: value}\n            }\n        })\n    }\n    getImageandUpload = (fieldKey, image) => {\n        let that = this;\n        let reqData = new FormData();\n\n        reqData.append('image', image);\n        reqData.append('name', 'file');\n\n        let successFn = function (data) {\n            that.props.form.setFieldsValue({[fieldKey]: {file: {response: data}}});\n            displayMessage(SUCCESS_MSG_TYPE, \"Image Captured and processed.\");\n            that.setState(function (prevState) {\n                return {\n                    webCamState: {...prevState.webCamState, [fieldKey]: false}\n                }\n            })\n        }\n        let errorFn = function () {\n\n        }\n        postAPI(FILE_UPLOAD_BASE64, reqData, successFn, errorFn, {\n            'content-type': 'multipart/form-data'\n        });\n\n    }\n    onEditorStateChange = (key, editorState) => {\n        this.setState(function (prevState) {\n            return {\n                editorState: {...prevState.editorState, [key]: editorState}\n\n            }\n        });\n    };\n\n    render() {\n        const that = this;\n        const formItemLayout = (this.props.formLayout ? this.props.formLayout : {\n            labelCol: {span: 8},\n            wrapperCol: {span: 14},\n        });\n        const {getFieldDecorator} = this.props.form;\n        return <div>\n            <Form onSubmit={this.handleSubmit}>\n                {this.props.title ? <h2>{this.props.title}</h2> : null}\n                {this.state.fields ? this.state.fields.map(function (field) {\n                    switch (field.type) {\n                        case PASSWORD_FIELD:\n                            return <Form.Item key={field.key} label={field.label}  {...formItemLayout}\n                                              extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                           type=\"password\"\n                                           placeholder={field.placeholder}\n                                           onChange={(e) => function () {\n                                               if (field.onChange)\n                                                   field.onChange(e)\n                                           }}\n                                           disabled={field.disabled ? field.disabled : that.state.disabled}/>\n                                )}\n                            </Form.Item>;\n                        case INPUT_FIELD:\n                            return <FormItem key={field.key} label={field.label}  {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Input placeholder={field.placeholder}\n                                           onChange={(e) => function () {\n                                               if (field.onChange)\n                                                   field.onChange(e)\n                                           }}\n                                           disabled={field.disabled ? field.disabled : that.state.disabled}/>\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n                            </FormItem>;\n                        case SELECT_FIELD:\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select placeholder={field.placeholder}\n                                            disabled={field.disabled ? field.disabled : that.state.disabled}\n                                            mode={field.mode ? field.mode : \"default\"}>\n                                        {field.options.map((option) => <Select.Option\n                                            value={option.value}>{option.label}</Select.Option>)}\n                                    </Select>\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n                            </FormItem>;\n                        case MULTI_SELECT_FIELD:\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, {...that.fieldDecorators(field, that.state.formData)})(\n                                    <Select mode=\"multiple\" placeholder={field.placeholder}\n                                            showSearch={field.showSearch ? field.showSearch : null}\n                                            disabled={field.disabled ? field.disabled : that.state.disabled}>\n                                        {field.options.map((option) => <Select.Option\n                                            value={option.value}>{option.label}</Select.Option>)}\n                                    </Select>\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n                            </FormItem>;\n                        case RADIO_FIELD:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <RadioGroup disabled={field.disabled ? field.disabled : that.state.disabled}>\n                                        {field.options.map((option) => <Radio\n                                            value={option.value}>{option.label}</Radio>)}\n                                    </RadioGroup>\n                                )}\n                            </FormItem>;\n                        case CHECKBOX_FIELD:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <CheckboxGroup options={field.options}\n                                                   disabled={field.disabled ? field.disabled : that.state.disabled}/>\n                                )}\n                            </FormItem>;\n                        case SINGLE_CHECKBOX_FIELD:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, {\n                                        valuePropName: 'checked',\n                                        initialValue: field.initialValue\n                                    },\n                                    {\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <Checkbox\n                                        disabled={field.disabled ? field.disabled : that.state.disabled}>{field.follow}</Checkbox>\n                                )}\n                            </FormItem>;\n                        case NUMBER_FIELD:\n                            return <FormItem key={field.key}\n                                             {...formItemLayout}\n                                             label={field.label} extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <InputNumber min={field.min} max={field.max}\n                                                 disabled={field.disabled ? field.disabled : that.state.disabled}/>\n                                )}\n                                <span className=\"ant-form-text\">{field.follow}</span>\n                            </FormItem>;\n                        case DATE_PICKER:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key,\n                                    {\n                                        initialValue: field.initialValue ? moment(field.initialValue) : null,\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <DatePicker format={field.format}/>\n                                )}\n                            </FormItem>;\n                        case DATE_TIME_PICKER:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key,\n                                    {initialValue: field.initialValue ? moment(field.initialValue) : null},\n                                    {\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <DatePicker format={field.format} showTime onChange={(e) => (field.onChange ?\n                                        field.onChange(e) :\n                                        function () {\n                                        })}/>\n                                )}\n                            </FormItem>;\n                        case TEXT_FIELD:\n                            return <div key={field.key}>\n                                <FormItem key={field.key} label={field.label}  {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                        <TextArea autosize={{minRows: field.minRows, maxRows: field.maxRows}}\n                                                  placeholder={field.placeholder}\n                                                  disabled={field.disabled ? field.disabled : that.state.disabled}\n                                                  onChange={that.inputChange}/>\n                                    )}\n\n                                </FormItem>\n                            </div>;\n                        case SMS_FIELD:\n                            return <div>\n                                <FormItem key={field.key} label={field.label}  {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                        <TextArea autosize={{minRows: field.minRows, maxRows: field.maxRows}}\n                                                  placeholder={field.placeholder}\n                                                  disabled={field.disabled ? field.disabled : that.state.disabled}\n                                        />\n                                    )}\n                                    {field.options && field.options.map(item =>\n                                        <Tag color=\"#108ee9\"\n                                             onClick={() => that.addSMSTag(field.key, item.value)}>{item.label}</Tag>)}\n                                </FormItem>\n                            </div>;\n                        case MAIL_TEMPLATE_FIELD:\n                            return <div>\n                                <FormItem key={field.key} label={field.label}  {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, {\n                                        initialValue: (field.initialValue && field.initialValue.length ? field.initialValue : ''),\n                                        rules: [{\n                                            required: field.required,\n                                            message: REQUIRED_FIELD_MESSAGE\n                                        }]\n                                    })(\n                                        <div style={{border: '1px solid #eee'}}>\n                                            <Editor\n                                                editorState={(that.state.editorState[field.key] ? that.state.editorState[field.key] : (field.initialValue ? EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(field.initialValue))) : EditorState.createEmpty()))}\n                                                onEditorStateChange={(editorState) => that.onEditorStateChange(field.key, editorState)}/>\n                                            {/*// <ReactQuill theme=\"snow\" placeholder={field.placeholder}/>*/}\n                                        </div>\n                                    )}\n                                    {field.options && field.options.map(item =>\n                                        <Tag color=\"#108ee9\"\n                                             onClick={() => that.addMailTemplateTag(field.key, item.value)}>{item.label}</Tag>)}\n                                    {field.preview ? <div>\n                                        <Divider>Preview</Divider>\n                                        <div style={{maxHeight: 200, overflowY: 'scroll'}}\n                                             dangerouslySetInnerHTML={{__html: `${that.state.editorState[field.key] ? draftToHtml(convertToRaw(that.state.editorState[field.key].getCurrentContent())) : field.initialValue}` || ''}}/>\n                                        <Divider/>\n                                    </div> : null}\n                                    {/*<div dangerouslySetInnerHTML={{__html: field.initialValue}}/>*/}\n                                </FormItem>\n                            </div>;\n                        case QUILL_TEXT_FIELD:\n                            return <div>\n                                <FormItem key={field.key} label={field.label}  {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, {\n                                        initialValue: (field.initialValue && field.initialValue.length ? field.initialValue : ''),\n                                        rules: []\n                                    })(\n                                        <div style={{border: '1px solid #eee'}}>\n                                            <Editor\n                                                editorState={(that.state.editorState[field.key] ? that.state.editorState[field.key] : (field.initialValue ? EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(field.initialValue))) : EditorState.createEmpty()))}\n                                                onEditorStateChange={(editorState) => that.onEditorStateChange(field.key, editorState)}/>\n                                            {/*// <ReactQuill theme=\"snow\" placeholder={field.placeholder}/>*/}\n                                        </div>\n                                    )}\n                                    {field.preview ? <div>\n                                        <Divider>Preview</Divider>\n                                        <div style={{maxHeight: 200, overflowY: 'scroll'}}\n                                             dangerouslySetInnerHTML={{__html: `${that.state.editorState[field.key] ? draftToHtml(convertToRaw(that.state.editorState[field.key].getCurrentContent())) : field.initialValue}` || ''}}/>\n                                        <Divider/>\n                                    </div> : null}\n                                    {/*<div dangerouslySetInnerHTML={{__html: field.initialValue}}/>*/}\n                                </FormItem>\n                            </div>;\n                        case TIME_PICKER:\n                            return <FormItem key={field.key} label={field.label} {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, {\n                                    initialValue: field.initialValue ? moment(field.initialValue, field.format) : null,\n                                    rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                })(\n                                    <TimePicker format={field.format}/>\n                                )}\n                            </FormItem>;\n                        case COLOR_PICKER:\n                            return <FormItem key={field.key} label={field.label}  {...formItemLayout}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <div>\n                                        <SwatchesPicker style={{width: '100%'}}\n                                                        onChange={(color) => that.colorChange(color, field.key)}/>\n                                        {that.state.colorPickerKey ? <div style={{\n                                            margin: '10px',\n                                            backgroundColor: that.state.colorPickerColor,\n                                            height: '40px',\n                                            width: '40px'\n                                        }}/> : (that.state.formData[field.key] ? <div style={{\n                                            margin: '10px',\n                                            backgroundColor: that.state.formData[field.key],\n                                            height: '40px',\n                                            width: '40px'\n                                        }}/> : null)}\n                                    </div>\n                                )}\n                            </FormItem>;\n                        case SINGLE_IMAGE_UPLOAD_FIELD:\n                            const singleUploadprops = {\n                                name: 'image',\n                                data: {\n                                    name: 'hello'\n                                },\n                                action: makeURL(FILE_UPLOAD_API),\n                                headers: {\n                                    authorization: 'authorization-text',\n                                },\n                                onChange(info) {\n                                    if (info.file.status !== 'uploading') {\n                                        console.log(info.file, info.fileList);\n                                    }\n                                    if (info.file.status === 'done') {\n                                        message.success(`${info.file.name} file uploaded successfully`);\n                                    } else if (info.file.status === 'error') {\n                                        message.error(`${info.file.name} file upload failed.`);\n                                    }\n                                },\n                            };\n                            return <Form.Item key={field.key} {...formItemLayout} label={field.label}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData), {valuePropName: field.key,})(\n                                    <Upload {...singleUploadprops}>\n                                        <Button>\n                                            <Icon type=\"upload\"/> Select File\n                                        </Button>\n                                        {field.initialValue ?\n                                            <img src={makeFileURL(field.initialValue)}\n                                                 style={{maxWidth: '100%'}}/> : null}\n                                    </Upload>\n                                )}\n                                {field.allowWebcam ? <span className=\"ant-form-text\">\n                                    <a onClick={() => that.toggleWebCam(field.key, Math.random())}>\n                                        Open Webcam\n                                    </a>\n                                </span> : null}\n                                <Modal\n                                    footer={null}\n                                    onCancel={() => that.toggleWebCam(field.key, false)}\n                                    visible={!!that.state.webCamState[field.key]}\n                                    width={680}\n                                    key={that.state.webCamState[field.key]}>\n                                    <WebCamField getScreenShot={(value) => that.getImageandUpload(field.key, value)}/>\n                                </Modal>\n                            </Form.Item>;\n                        case MULTI_IMAGE_UPLOAD_FIELD:\n                            const multiuploadprops = {\n                                name: 'image',\n                                data: {\n                                    name: 'hello'\n                                },\n                                action: makeURL(FILE_UPLOAD_API),\n                                headers: {\n                                    authorization: 'authorization-text',\n                                },\n                                onChange(info) {\n                                    if (info.file.status !== 'uploading') {\n                                        console.log(info.file, info.fileList);\n                                    }\n                                    if (info.file.status === 'done') {\n                                        message.success(`${info.file.name} file uploaded successfully`);\n                                    } else if (info.file.status === 'error') {\n                                        message.error(`${info.file.name} file upload failed.`);\n                                    }\n                                },\n                            };\n                            return <Form.Item key={field.key} {...formItemLayout} label={field.label}>\n                                {getFieldDecorator(field.key, {valuePropName: field.key,})(\n                                    <Upload {...multiuploadprops}>\n                                        <Button>\n                                            <Icon type=\"upload\"/> Select File\n                                        </Button>\n                                        {field.initialValue && field.initialValue.length ?\n                                            field.initialValue.map(img => <img src={img}\n                                                                               style={{maxWidth: '100%'}}/>) : null}\n                                    </Upload>\n                                )}\n                            </Form.Item>;\n                        case COUNTRY_FIELD:\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select placeholder={field.placeholder}\n                                            disabled={field.disabled ? field.disabled : that.state.disabled}\n                                            mode={field.mode ? field.mode : \"default\"}\n                                            onChange={(value) => that.setAddressField('country', value)}>\n                                        {that.state.countryOptions.map((option) => <Select.Option\n                                            value={option.id}>{option.name}</Select.Option>)}\n                                    </Select>\n                                )}\n                            </FormItem>;\n                        case STATE_FIELD:\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select placeholder={field.placeholder}\n                                            disabled={field.disabled ? field.disabled : that.state.disabled}\n                                            mode={field.mode ? field.mode : \"default\"}\n                                            onChange={(value) => that.setAddressField('state', value)}>\n                                        {that.state.stateOptions.map((option) => <Select.Option\n                                            value={option.id}>{option.name}</Select.Option>)}\n                                    </Select>\n                                )}\n                            </FormItem>;\n\n                        case EMAIL_FIELD:\n                            return <Form.Item\n                                key={field.key}\n                                {...formItemLayout}\n                                label={field.label}\n                                extra={field.extra}\n                            >\n                                {getFieldDecorator(field.key, {\n                                    initialValue: that.state.formData[field.key],\n                                    rules: [{\n                                        type: 'email', message: 'The input is not valid E-mail!',\n                                    }, {\n                                        required: true, message: 'Please input your E-mail!',\n                                    }],\n                                })(\n                                    <Input placeholder={field.placeholder}\n                                           disabled={field.disabled ? field.disabled : that.state.disabled}\n                                           onChange={that.inputChange}/>\n                                )}\n                            </Form.Item>\n\n                        case CITY_FIELD:\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select placeholder={field.placeholder}\n                                            disabled={field.disabled ? field.disabled : that.state.disabled}\n                                            mode={field.mode ? field.mode : \"default\"}>\n                                        {that.state.cityOptions.map((option) => <Select.Option\n                                            value={option.id}>{option.name}</Select.Option>)}\n                                    </Select>\n                                )}\n                            </FormItem>;\n                        case DIVIDER_FIELD :\n                            return <Divider style={{margin: 4}}/>\n\n\n                        case LABEL_FIELD :\n                            return <FormItem key={field.key} {...formItemLayout} label={field.label}\n                                             extra={field.extra}>\n\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n\n                            </FormItem>;\n                        default:\n                            return null;\n                    }\n                }) : null}\n                <FormItem {...formItemLayout}>\n                    {/*<Button onClick={this.resetFormData}>Reset</Button>*/}\n                    <Button loading={that.state.loading} type=\"primary\" htmlType=\"submit\" style={{margin: 5}}>\n                        Submit\n                    </Button>\n                    {that.props.history ?\n                        <Button style={{margin: 5}} onClick={() => that.props.history.goBack()}>\n                            Cancel\n                        </Button> : null}\n                </FormItem>\n            </Form>\n        </div>\n    }\n}\n\nexport default DynamicFieldsForm;","/**\n * Different Connection Configs */\n\nimport CONFIG from \"../../app.config\";\n\nexport const BACKEND_BASE_URL = CONFIG.backendBaseUrl;\nexport const IMAGE_BASE_URL = CONFIG.imageBaseUrl;\nexport const RAZORPAY_KEY = 'rzp_live_Wl01N16ABswm3p';\n","import React from 'react';\nimport {CONFIG_API, MAILING_USERS_LIST, PRACTICESTAFF} from \"../constants/api\";\nimport {getAPI, interpolate} from \"./common\";\nimport {DOCTORS_ROLE} from \"../constants/dataKeys\";\nimport {Link} from \"react-router-dom\";\nimport {Menu} from 'antd';\n\nexport const loadDoctors = function (that) {\n    let successFn = function (data) {\n        let doctor = [];\n        let selectedDoctor = {};\n        data.staff.forEach(function (usersdata) {\n\n            if (usersdata.role.indexOf(parseInt(DOCTORS_ROLE)) > -1 || usersdata.role.indexOf(DOCTORS_ROLE) > -1) {\n                doctor.push(usersdata);\n                if (that.props.user.id == usersdata.user.id) {\n                    selectedDoctor = usersdata;\n                }\n            }\n        });\n        that.setState({\n            practiceDoctors: doctor,\n            selectedDoctor: (doctor.length && !selectedDoctor.id ? doctor[0] : selectedDoctor)\n        });\n    };\n    let errorFn = function () {\n    };\n    getAPI(interpolate(PRACTICESTAFF, [that.props.active_practiceId]), successFn, errorFn);\n}\n\nexport const patientSettingMenu = (<Menu>\n        <Menu.Item key=\"1\">\n            <Link to={\"/settings/prescriptions\"}>\n                Add/Edit Drugs\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n            <Link to={\"/settings/procedures\"}>\n                Add/Edit Procedures\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n            <Link to={\"/settings/emr#treatmentnotes\"}>\n                Add/Edit Clinical Notes\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n            <Link to={\"/settings/printout\"}>\n                Modify EMR/Billing Printout\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n            <Link to={\"/settings/billing#taxcatalog\"}>\n                Add/Edit taxes\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"6\">\n            <Link to={\"/settings/billing#paymentmodes\"}>\n                Add/Edit Payment Modes\n            </Link>\n        </Menu.Item>\n    </Menu>\n);\n\nexport const hashCode = function (str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 6) - hash);\n        hash = (hash >> 6) + hash\n    }\n    return hash;\n}\n\nexport const intToRGB = function (i) {\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nexport const loadConfigParameters = function (that, params = []) {\n    let successFn = function (data) {\n        that.setState({\n            ...data\n        });\n    };\n    let errorFn = function () {\n\n    };\n    let parameters = params.join(',');\n    getAPI(CONFIG_API, successFn, errorFn, {parameters});\n}\n\nexport const loadMailingUserListForReportsMail = function (that) {\n    let successFn = function (data) {\n        that.setState({\n            mailingUsersList: data\n        })\n    }\n    let errorFn = function () {\n\n    }\n    getAPI(MAILING_USERS_LIST, successFn, errorFn)\n}\n\nexport const sendReportMail = function(url,params){\n    let successFn = function (data){\n\n    }\n    let errorFn = function (){\n\n    }\n    getAPI(url,successFn,errorFn,params);\n}","import React from \"react\";\nimport {Button, Result, Row} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nclass Error404 extends React.Component {\n    render() {\n        return <Row style={{marginTop: '20px'}} gutter={24}>\n            <Result\n                status=\"404\"\n                title={<span><h1><b>404</b></h1>\n        <h2>Page Not Found</h2></span>}\n                subTitle=\"The page you are looking for has been temporarily moved or did not exist.\"\n                extra={<Link to=\"/\"><Button type=\"primary\">Go to Home</Button></Link>}\n            />\n        </Row>\n    }\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {Spin, Row, Col, Avatar, Icon, Button, Divider, Tag, Popconfirm} from \"antd\";\nimport {displayMessage, getAPI, interpolate, putAPI} from \"../../utils/common\";\nimport {APPOINTMENT_API} from \"../../constants/api\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {\n    CANCELLED_STATUS,\n    CHECKOUT_STATUS,\n    ENGAGED_STATUS,\n    SCHEDULE_STATUS,\n    WAITING_STATUS\n} from \"../../constants/hardData\";\nimport {ERROR_MSG_TYPE, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\n\nexport default class EventPatientPopover extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            appointment: null\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        if (this.props.appointmentId) {\n            this.loadAppointmentDetails();\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    loadAppointmentDetails = () => {\n        this.setState({\n            loading: true\n        })\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                appointment: data,\n                loading: false\n            });\n            console.log(\"event\", data)\n        };\n        let errorFn = function () {\n            that.setState({\n                loading: false\n            });\n        };\n        getAPI(interpolate(APPOINTMENT_API, [this.props.appointmentId]), successFn, errorFn);\n\n\n    }\n    updateAppointmentStatus = (id, currentStatus, targetStatus) => {\n        let that = this;\n        let reqData = {\n            status: targetStatus\n        };\n        if (targetStatus == WAITING_STATUS) {\n            reqData.waiting = moment().format()\n        } else if (targetStatus == ENGAGED_STATUS) {\n            reqData.engaged = moment().format()\n        } else if (targetStatus == CHECKOUT_STATUS) {\n            reqData.checkout = moment().format()\n        }\n        let successFn = function (data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"Appointment Status Changed Successfully!!\");\n            that.loadAppointmentDetails()\n        }\n        let errorFn = function () {\n\n        }\n        putAPI(interpolate(APPOINTMENT_API, [id]), reqData, successFn, errorFn\n        )\n    }\n\n    changeAppointmentStatus = (id, currentStatus, targetStatus) => {\n        let that = this;\n        let successFn = function (data) {\n            if (data.status == currentStatus) {\n                that.updateAppointmentStatus(id, currentStatus, targetStatus)\n            } else {\n                displayMessage(ERROR_MSG_TYPE, \"Appointment status has already changed. Updating Appointments...\")\n                that.loadAppointmentDetails();\n            }\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(APPOINTMENT_API, [id]), successFn, errorFn);\n    }\n\n    render() {\n        let that = this;\n        let appointment = this.state.appointment;\n        return <div style={{width: '300px', minHeight: '200px'}}>\n            <Spin spinning={this.state.loading}>\n                {this.state.appointment ? <div>\n                        <Row>\n                            <Col span={8}>\n                                {this.state.appointment.patient.image?<Avatar src={this.state.appointment.patient.image} size={80}/>:\n                                    <Avatar style={{backgroundColor: '#87d068'}}>\n                                        {this.state.appointment.patient.user.first_name ? this.state.appointment.patient.user.first_name.charAt(0) :\n                                            <Icon type=\"user\"/>}\n                                    </Avatar>\n                                }\n                            </Col>\n                            <Col span={16}>\n                                <Link to={\"/patient/\" + this.state.appointment.patient.id + \"/profile\"}>\n                                    <h3>{this.state.appointment.patient.user.first_name}\n                                        <br/>\n                                        <small>\n                                            Patient\n                                            ID: {this.state.appointment.patient.custom_id} , {this.state.appointment.patient.gender}\n                                            <br/>{this.state.appointment.patient.user.mobile}\n                                        </small>\n                                    </h3>\n                                </Link>\n                            </Col>\n                        </Row>\n                        <Divider style={{margin: 0}}/>\n                        <small>Status: {this.state.appointment.status}</small>\n                        <br/>\n                        <small>\n                            <Icon\n                                type=\"clock-circle\"/> {moment(this.state.appointment.schedule_at).format('HH:mm A on MMMM Do')} for {this.state.appointment.slot} mins.\n                        </small>\n                        {showStatusTimeline(appointment)}\n                        <Row style={{height: '100px', overflow: 'scroll', backgroundColor: '#eee', padding: 5}}>\n                            <div>\n                                {appointment.status == SCHEDULE_STATUS ?\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, SCHEDULE_STATUS, WAITING_STATUS)} disabled={that.props.activePracticePermissions.ChangeAppointmentStatus}> Check In</a></span> : null}\n                                {appointment.status == WAITING_STATUS ?\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, WAITING_STATUS, ENGAGED_STATUS)} disabled={that.props.activePracticePermissions.ChangeAppointmentStatus}> Engage</a></span> : null}\n                                {appointment.status == ENGAGED_STATUS ?\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, ENGAGED_STATUS, CHECKOUT_STATUS)} disabled={that.props.activePracticePermissions.ChangeAppointmentStatus}> Check Out</a></span> : null}\n                                {appointment.status == CHECKOUT_STATUS ?\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <small>Checked Out</small></span> : null}\n                                {this.state.appointment.doctor_data ? <Tag\n                                    color={this.state.appointment.doctor_data ? this.state.appointment.doctor_data.calendar_colour : null}>\n                                    <b>{\"With \" + this.state.appointment.doctor_data.user.first_name} </b>\n                                </Tag> : null}\n                            </div>\n                            <Divider style={{margin: 0}}/>\n                            <b>Category:</b>{this.state.appointment.category_data ? this.state.appointment.category_data.name : null}\n                        </Row>\n                        <Divider style={{margin: 0}}/>\n                        <Row style={{textAlign: 'right'}}>\n                            <Button.Group size={\"small\"}>\n                                {that.props.activePracticePermissions.EditAppointment || that.props.allowAllPermissions ?\n                                <Button>\n                                    <Link to={\"/calendar/\" + this.state.appointment.id + \"/edit-appointment\"}>\n                                        <Icon type={\"edit\"}/> Edit\n                                    </Link>\n                                </Button>:null}\n                                {that.props.activePracticePermissions.ChangeAppointmentStatus || that.props.allowAllPermissions?\n                                <Popconfirm title=\"Are you sure delete this?\"\n                                            onConfirm={() => that.changeAppointmentStatus(appointment.id, appointment.status, CANCELLED_STATUS)}\n                                            okText=\"Yes\" cancelText=\"No\">\n                                    <Button type={\"danger\"}>\n                                        <Icon type={\"cross\"}/> Cancel\n                                    </Button>\n                                </Popconfirm>:null}\n                            </Button.Group>\n                        </Row>\n                    </div> :\n                    <h4>No Patient Found</h4>}\n            </Spin>\n        </div>\n    }\n}\n\nfunction showStatusTimeline(appointment) {\n    switch (appointment.status) {\n        case WAITING_STATUS:\n            return <div>\n                <br/><small>Checked in At {moment(appointment.waiting).format('lll')}</small>\n            </div>\n        case ENGAGED_STATUS:\n            return <div>\n                <small>Waiting Time {moment(appointment.engaged).from(moment(appointment.waiting))}</small>\n                <br/><small>Engaged At {moment(appointment.engaged).format('lll')}</small>\n            </div>\n        case CHECKOUT_STATUS:\n            return <div>\n                <small>Waiting Time {moment(appointment.engaged).from(moment(appointment.waiting))}</small>\n                <br/><small>Engaged Time {moment(appointment.checkout).from(moment(appointment.engaged))}</small>\n                <br/><small>Total Stay Time {moment(appointment.checkout).from(moment(appointment.waiting))}</small>\n            </div>\n    }\n    return null\n}\n","import {\n    APPOINTMENT_FOR_EACH_CATEGORY,\n    CANCELLATION_NUMBERS,\n    AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE,\n    AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE,\n    REASONS_FOR_CANCELLATIONS,\n    DAILY_APPOINTMENT_COUNT,\n    APPOINTMENT_FOR_EACH_DOCTOR,\n    MONTHLY_APPOINTMENT_COUNT,\n    APPOINTMENT_FOR_EACH_PATIENT_GROUP,\n    NEW_PATIENTS,\n    DAILY_NEW_PATIENTS,\n    PATIENTS_FIRST_APPOINTMENT,\n    MONTHLY_NEW_PATIENTS,\n    NEW_MEMBERSHIP,\n    EXPIRING_MEMBERSHIP,\n    AGEING_AMOUNT_DUE,\n    AMOUNT_DUE_PER_DOCTOR,\n    AMOUNT_DUE_PER_PROCEDURE,\n    UNSETTLED_INVOICE,\n    DAILY_TREATMENT_COUNT,\n    TREATMENTS_FOR_EACH_DOCTOR,\n    MONTHLY_TREATMENT_COUNT,\n    TREATMENT_FOR_EACH_CATEGORY,\n    DAILY_EXPENSES,\n    MONTHLY_EXPENSES,\n    EXPENSES_EACH_TYPE,\n    DAILY_INVENTORY,\n    MONTHLY_INVENTORY,\n    TOP_INVENTORY,\n    DAILY_BOOKING_COUNT,\n    MONTHLY_BOOKING_COUNT,\n    MEDICINE_USAGE_COUNT,\n    BED_BOOKING_PACKAGE_COUNT,\n    MARGIN_TYPE_WISE,\n    PRODUCT_WISE,\n    TRANSFERED_AMOUNT,\n    WALLET_BALANCE_AMOUNT,\n    CREDIT_AMOUNT_PER_DOCTOR,\n    PAYMENT_REFUND,\n    PATIENTS_UNSETTLED_ADVANCE,\n    PAYMENT_RECEIVED_PATIENT_GROUP,\n    MODE_OF_PAYMENTS,\n    PAYMENT_RECEIVED_PER_DAY,\n    PAYMENT_RECEIVED_PER_DOCTOR,\n    PAYMENT_RECEIVED_PER_MONTH,\n    PAYMENT_SETTLEMENT,\n    PAYMENT_SETTLEMENT_PER_DOCTOR,\n    CREDIT_NOTES,\n    ACTIVE_PATIENTS,\n    AGENT_TREE_VIEW,\n    FOLLOW_UP,\n    MEDICINE,\n    ALL_INVOICE,\n    DAILY_INCOME,\n    MONTHLY_INCOME,\n    TAXED_INCOME,\n    PATIENT_GROUPS_INCOME,\n    PRODUCT_INCOME,\n    PROCEDURE_INCOME,\n    DOCTOR_EACH_INCOME,\n    APPOINTMENT_FOR_PATIENT_CONVERSION,\n    ALL_INVOICE_RETURN,\n    DAILY_WISE_INVOICE,\n    MONTHLY_WISE_INCOME,\n    RETURN_ITEMS,\n    RETURN_INVOICE_FOR_EACH_PROCEDURE,\n    RETURN_INVOICE_FOR_EACH_DOCTOR,\n    RETURN_INVOICE_FOR_EACH_PRODUCT,\n    RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS,\n    RETURN_INVOICE_FOR_EACH_TAX, MONTHLY_WISE_RETURN_INVOICE, DAILY_WISE_RETURN_INVOICE\n} from \"../constants/dataKeys\";\n\nexport const PAYMENT_TYPES = [\n    {label: 'cash', value: 'cash'},\n    {label: 'cheque', value: 'cheque'},\n    {label: 'card', value: 'card'},\n    {label: 'netbanking', value: 'netbanking'},\n    {label: 'unknown', value: 'unknown'},\n]\nexport const DISEASE_TYPES = [\n    {label: 'Kidney Disease', value: 'Kidney Disease'},\n    {label: 'Cancer Disease', value: 'Cancer Disease'},\n    {label: 'Other Disease', value: 'Other Disease'}\n];\nexport const DRUG = \"Medicine\";\nexport const EQUIPMENT = \"Equipment\";\nexport const SUPPLIES = \"Supplies\";\nexport const PROCEDURES = \"Procedure\";\nexport const PRESCRIPTIONS = \"Prescriptions\";\nexport const INVENTORY = \"Inventory\";\n\n\nexport const INVOICE_ITEM_TYPE = [\n    {label: PROCEDURES, value: PROCEDURES},\n    {label: PRESCRIPTIONS, value: PRESCRIPTIONS},\n    {label: INVENTORY, value: INVENTORY}\n];\nexport const INVENTORY_ITEM_TYPE = [\n    {label: DRUG, value: DRUG},\n    {label: EQUIPMENT, value: EQUIPMENT},\n    {label: SUPPLIES, value: SUPPLIES}\n];\n\n\nexport const ADD_STOCK = \"ADD\";\nexport const CONSUME_STOCK = \"CONSUME\";\n\nexport const APPOINTMENT_CONFIRMATION_SMS_TAG_OPTIONS = [\n    {\n        label: \"PATIENT ID\",\n        value: \"{{PATIENT_ID}}\"\n    }, {\n        label: \"CLINIC CONTACT\",\n        value: \"{{CLINICCONTACTNUMBER}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{CLINIC}}\"\n    }, {\n        label: \"PATIENT NAME\",\n        value: \"{{PATIENT}}\"\n    }, {\n        label: \"APPOINTMENT CATEGORY\",\n        value: \"{{CATEGORY}}\"\n    }, {\n        label: \"DATE\",\n        value: \"{{DATE}}\"\n    }, {\n        label: \"TIME\",\n        value: \"{{TIME}}\"\n    }];\n\nexport const EMR_TYPE = \"EMR\";\nexport const BILLING_TYPE = \"BILLING\";\n\nexport const EMR_SUB_TYPE = [\n    {title: 'PRESCRIPTION'},\n    {title: 'TREATMENT PLAN'},\n    {title: 'CASE SHEET'},\n    {title: 'MEDICAL LEAVE'},\n    {title: 'REPORT MANUAL'},\n    {title: 'LAB ORDER'},\n    // {title: 'LAB ORDER RESULT'},\n    {title: 'CLINICAL NOTES'}\n];\nexport const BILLING_SUB_TYPE = [\n    {title: 'INVOICE'},\n    {title: 'RECEIPTS'},\n    {title: 'RETURN'}\n];\n\nexport const CUSTOMIZE_PAPER_TYPE = [\n    'PAGE', 'HEADER', 'PATIENT', 'FOOTER'\n];\n\nexport const PAPER_SIZE = ['A2', 'A3', 'A4', 'A5'];\n\nexport const PAGE_ORIENTATION = [\n    {value: 'PORTRAIT'},\n    {value: 'LANDSCAPE'}\n];\n\nexport const PRINTER_TYPE = [\n    {value: 'COLOR'},\n    {value: 'BLACK'}\n];\nexport const HEADER_INCLUDE = [\n    {title: 'Yes', value: true},\n    {title: 'No , I already have a letter head.', value: false}\n];\nexport const LOGO_TYPE = [\n    {value: 'Square'},\n    {value: 'Narrow'},\n    {value: 'Wide'}\n];\nexport const LOGO_ALIGMENT = [\n    {value: 'RIGHT'},\n    {value: 'LEFT'},\n    {value: 'CENTRE'}\n];\nexport const LOGO_INCLUDE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n];\nexport const PATIENT_DETAILS_LIST = [\n    {value: 'Exclude Medical History'},\n    {value: 'Exclude Patient Number'},\n    {value: 'Exclude address'},\n    {value: 'Exclude Blood Group'}\n];\nexport const EXCLUDE_PATIENT_DOB = \"Exclude Patient Gender & DOB\";\n\nexport const SMS_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const EMAIL_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const BIRTHDAY_SMS_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const DURATIONS_UNIT = [\n    {label: 'day(s)', value: 'day(s)'},\n    {label: 'week(s)', value: 'week(s)'},\n    {label: 'month(s)', value: 'month(s)'},\n    {label: 'year(s)', value: 'year(s)'},\n];\n\nexport const DOSE_FREQUENCIES = [\n    {label: 'day(s)', value: 'day(s)'},\n];\n\nexport const DOSE_REQUIRED = [\n    {label: 'twice daily', value: 'twice daily'},\n    {label: 'three times a day', value: 'three times a day'},\n    {label: 'four times a day', value: 'four times a day'},\n    {label: 'every four hours', value: 'every four hours'},\n    {label: 'as needed', value: 'as needed'},\n    {label: 'every 2 hour(s)', value: 'every 2 hour(s)'},\n    {label: 'every other hour', value: 'every other hour'},\n    {label: 'every day', value: 'every day'},\n    {label: 'every other day', value: 'every other day'},\n];\n\nexport const SCHEDULE_STATUS = 'Scheduled';\nexport const WAITING_STATUS = 'Waiting';\nexport const ENGAGED_STATUS = 'Engaged';\nexport const CHECKOUT_STATUS = 'CheckOut';\nexport const CANCELLED_STATUS = 'Cancelled';\n\nexport const TYPE_OF_CONSUMPTION = [\n    {label: \"Sales\", value: \"SALES\"},\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Damaged\", value: \"DAMAGED\"},\n    {label: \"Returned\", value: \"RETURNED\"},\n    {label: \"Adjustment\", value: \"ADJUSTMENT\"},\n];\n\nexport const TYPES_OF_BED_PACKAGES_ROOM_TYPE = [\n    {label: \"Private\", value: \"PRIVATE\"},\n    {label: \"Dormitory\", value: \"DORMITORY\"},\n    {label: \"Semi Private\", value: \"SEMI PRIVATE\"},\n]\n\nexport const CUSTOM_STRING_SEPERATOR = '$_$';\n\nexport const DAY_KEYS = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\nexport const NOTES = [\n    {label: \"Valid for absence from court attendance\", value: \"valid_court\"},\n    {label: \"Invalid for absence from court attendance\", value: \"invalid_court\"},\n    {label: \"Dont mention\", value: \"no_mention\"}\n];\n\nexport const DEFAULT_TEMPERATURE_IN = [\n    {label: \"Degree Fahrenheit\", value: \"Degree Fahrenheit\"},\n    {label: \"Degree Celsius\", value: \"Degree Celsius\"}\n];\nexport const DEFAULT_TEMPERATURE_METHOD = [\n    {label: \"Armpit\", value: \"Armpit\"},\n    {label: \"Forehead\", value: \"Forehead\"},\n    {label: \"Anus\", value: \"Anus\"},\n    {label: \"Mouth\", value: \"Mouth\"},\n    {label: \"Ear\", value: \"Ear\"}\n];\nexport const DEFAULT_BP_METHOD = [\n    {label: \"Sitting\", value: \"Sitting\"},\n    {label: \"Standing\", value: \"Standing\"}\n];\n\nexport const APPOINTMENT_STATUS = [\n    {label: \"Scheduled\", value: SCHEDULE_STATUS},\n    {label: \"Cancelled\", value: CANCELLED_STATUS},\n    {label: \"Engaged\", value: ENGAGED_STATUS}\n];\nexport const MAILED = 'true';\n\nexport const Booking_Type = [\n    {value: 'TATKAL'},\n    {value: 'NORMAL'}\n];\nexport const PAYMENT_STATUS = [\n    {label: \"Success\", value: \"SUCCESSFUL\"},\n    {label: \"Failed\", value: \"FAILED\"},\n    {label: \"Pending\", value: \"PENDING\"}\n];\nexport const OPD_IPD = [\n    {label: \"OPD\", value: \"OPD\"},\n    {label: \"IPD\", value: \"IPD\"}\n];\n\nexport const ROLES = [\n    {label: \"ADMIN\", value: '1'},\n    {label: \"CLINIC_ADMIN\", value: '2'}\n];\n/*Patient Reports*/\nexport const PATIENTS_RELATED_REPORT = [\n    {name: 'Daily New Patients', value: DAILY_NEW_PATIENTS},\n    {name: 'Expiring Membership', value: EXPIRING_MEMBERSHIP},\n    {name: 'Patients First Appointment', value: PATIENTS_FIRST_APPOINTMENT},\n    {name: 'Monthly New Patients', value: MONTHLY_NEW_PATIENTS},\n    {name: 'New Membership', value: NEW_MEMBERSHIP},\n    {name: 'Active Patients', value: ACTIVE_PATIENTS},\n    {name: \"Follow Up Report\", value: FOLLOW_UP},\n    {name: \"Medicine Report\", value: MEDICINE},\n];\n\n/*Appointment Reports*/\nexport const APPOINTMENT_RELATED_REPORT = [\n    {name: 'Appointments For Each Category', value: APPOINTMENT_FOR_EACH_CATEGORY},\n    {name: 'Cancellation Numbers', value: CANCELLATION_NUMBERS},\n    {name: 'Average Waiting/engaged Time Day Wise', value: AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE},\n    {name: 'Average Waiting/engaged Time Month Wise', value: AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE},\n    // {name: 'Reasons For Cancellations', value: REASONS_FOR_CANCELLATIONS},\n    {name: 'Daily Appointment Count', value: DAILY_APPOINTMENT_COUNT},\n    {name: 'Appointments For Each Doctor', value: APPOINTMENT_FOR_EACH_DOCTOR},\n    {name: 'Monthly Appointment Count', value: MONTHLY_APPOINTMENT_COUNT},\n    {name: 'Appointment For Each Patient Group', value: APPOINTMENT_FOR_EACH_PATIENT_GROUP},\n    {name: 'Patient Conversion', value: APPOINTMENT_FOR_PATIENT_CONVERSION},\n];\n\n/*Emr Reports*/\nexport const EMR_RELATED_REPORT = [\n    {name: 'Daily Treatments Count', value: DAILY_TREATMENT_COUNT},\n    {name: 'Treatments For Each Doctor', value: TREATMENTS_FOR_EACH_DOCTOR},\n    {name: 'Monthly Treatments Count', value: MONTHLY_TREATMENT_COUNT},\n    {name: 'Treatments For Each Category', value: TREATMENT_FOR_EACH_CATEGORY}\n];\n\n/*Amount Due Reports*/\nexport const AMOUNT_DUE_RELATED_REPORT = [\n    {name: 'Ageing Amount Due', value: AGEING_AMOUNT_DUE},\n    {name: 'Amount Due Per Doctor', value: AMOUNT_DUE_PER_DOCTOR},\n    // {name: 'Amount Due Per Procedure', value: AMOUNT_DUE_PER_PROCEDURE},\n    // {name: 'Unsettled Invoice', value: UNSETTLED_INVOICE},\n];\n\nexport const BLOOD_GROUPS = [\n    {name: \"A+\", value: 'A+'},\n    {name: \"A-\", value: 'A-'},\n    {name: \"B+\", value: 'B+'},\n    {name: \"B-\", value: 'B-'},\n    {name: \"AB+\", value: 'AB+'},\n    {name: \"AB-\", value: 'AB-'},\n    {name: \"O+\", value: 'O+'},\n    {name: \"O-\", value: 'O-'},\n];\n\n/*** Expense Reports ***/\nexport const EXPENSE_RELATED_REPORT = [\n    {name: 'Daily Expenses', value: DAILY_EXPENSES},\n    {name: 'Expenses For Each Type', value: EXPENSES_EACH_TYPE},\n    {name: 'Monthly Expenses', value: MONTHLY_EXPENSES}];\n\n/***Inventory Reports **/\nexport const INVENTORY_RELATED_REPORT = [\n    {name: 'Daily Stock Consumption Item Wise', value: DAILY_INVENTORY},\n    {name: 'Monthly Stock Consumption Item Wise', value: MONTHLY_INVENTORY},\n    {name: 'Top 10 Consumed Items', value: TOP_INVENTORY}\n];\nexport const PRODUCT_ITEM = [\n    {label: 'All', value: 'ALL'},\n    {label: DRUG, value: DRUG},\n    {label: EQUIPMENT, value: EQUIPMENT},\n    {label: SUPPLIES, value: SUPPLIES},\n];\n/*Bed Booking Reports*/\nexport const BED_BOOKING_RELATED_REPORT = [\n    {name: 'Daily Booking Count', value: DAILY_BOOKING_COUNT},\n    {name: 'Monthly Booking Count', value: MONTHLY_BOOKING_COUNT},\n    {name: 'Medicine Usage Count', value: MEDICINE_USAGE_COUNT},\n    {name: 'Bed Booking Package Count', value: BED_BOOKING_PACKAGE_COUNT},\n];\n/*MLM reports*/\nexport const MLM_RELATED_REPORT = [\n    {name: 'Margin Type wise', value: MARGIN_TYPE_WISE},\n    // {name:'Product Wise', value:PRODUCT_WISE},\n    {name: 'Wallet Balance Amount', value: WALLET_BALANCE_AMOUNT},\n    {name: 'Agent Tree View', value: AGENT_TREE_VIEW},\n];\n\n/*Payments Reports*/\nexport const PAYMENT_RELATED_REPORT = [\n    {name: 'Refund Payments', value: PAYMENT_REFUND},\n    {name: 'Payment Received From Each Patient Group', value: PATIENTS_UNSETTLED_ADVANCE},\n    {name: 'Patients With Unsettled Advance, As Of Today', value: PAYMENT_RECEIVED_PATIENT_GROUP},\n    {name: 'Modes Of Payment', value: MODE_OF_PAYMENTS},\n    {name: 'Payment Received Per Day', value: PAYMENT_RECEIVED_PER_DAY},\n    {name: 'Payment Received Per Doctor', value: PAYMENT_RECEIVED_PER_DOCTOR},\n    {name: 'Payment Received Per Month', value: PAYMENT_RECEIVED_PER_MONTH},\n    {name: 'Payment Settlement', value: PAYMENT_SETTLEMENT},\n    {name: 'Payment Settlement Per Doctor', value: PAYMENT_SETTLEMENT_PER_DOCTOR},\n    {name: 'Credit Notes', value: CREDIT_NOTES},\n    {name: 'Credit Amount Per Doctor', value: CREDIT_AMOUNT_PER_DOCTOR},\n];\n\n/*Income Reports*/\n\nexport const INCOME_RELATED_REPORT = [\n    {name: \"Daily Invoiced Income\", value: DAILY_INCOME},\n    {name: \"Monthly Invoiced Income\", value: MONTHLY_INCOME},\n    {name: \"Taxed Invoiced Income\", value: TAXED_INCOME},\n    {name: \"Invoiced Income For Each Doctor\", value: DOCTOR_EACH_INCOME},\n    {name: \"Invoiced Income For Each Procedure\", value: PROCEDURE_INCOME},\n    {name: \"Invoiced Income For Each Patient Group\", value: PATIENT_GROUPS_INCOME},\n    {name: \"Invoiced Income For Each Product\", value: PRODUCT_INCOME},\n\n];\n\n/* Invoiced Report */\nexport const INVOICE_RELATED_REPORT = [\n    // {name:\"All Returned Invoices\" ,value:ALL_INVOICE_RETURN},\n    {name: \"Day wise Return Invoice\", value: DAILY_WISE_RETURN_INVOICE},\n    {name: \"Monthly wise Return Invoice\", value: MONTHLY_WISE_RETURN_INVOICE},\n    {name: \"Return Invoice For Each Tax\", value: RETURN_INVOICE_FOR_EACH_TAX},\n    {name: \"Return Invoice For Each Procedure\", value: RETURN_INVOICE_FOR_EACH_PROCEDURE},\n    {name: \"Return Invoice For Each Product\", value: RETURN_INVOICE_FOR_EACH_PRODUCT},\n    {name: \"Return Invoice For Each Doctor\", value: RETURN_INVOICE_FOR_EACH_DOCTOR},\n    {name: \"Return Invoice For Each Patient Groups\", value: RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS},\n];\n\n\nexport const SCHEDULE_OF_INVOICES = [\n    {label: \"all \", value: ''},\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Products\", value: \"PRODUCTS\"},\n    {label: \"Lab orders\", value: \"RESERVATION\"},\n];\n\nexport const DISCOUNT = [\n    {label: \"Zero\", value: \"ZERO\"},\n    {label: \"Non Zero\", value: \"NON_ZERO\"},\n];\n\nexport const SCHEDULE_OF_PAYMENT = [\n    {label: \"all payments\", value: \"SALES\"},\n    {label: \"Only advance payments\", value: \"SERVICES\"},\n    {label: \"Payment for services\", value: \"DAMAGED\"},\n    {label: \"Payment for products\", value: \"RETURNED\"},\n];\n\nexport const PATIENT_AGE = [\n    {label: 'DOB', value: 'DOB'},\n    {label: 'Age', value: 'AGE'}\n];\n\n/** Suggestions Reports***/\nexport const SUGGESTIONS_STATUS = [\n    {label: \"Open\", value: \"Open\"},\n    {label: \"In Progress\", value: \"InProgress\"},\n    {label: \"Closed\", value: \"Closed\"},\n];\n\nexport const SOURCE_PLATFORM = [\n    {label: 'Facebook', value: 'FACEBOOK'},\n    {label: \"News Paper\", value: \"NEWS_PAPER\"},\n    {label: \"TV\", value: \"TV\"},\n    {label: 'Street Banners', value: \"STREET\"},\n];\n\nexport const OUTER_KEYS_HOTKEYS = 'alt+c ,alt+p, alt+r, alt+s, alt+b ,alt+w';\n\nexport const INNER_KEYS_HOTKEYS = 'alt+f ,alt+a, alt+o, alt+m, alt+l ,alt+i,alt+e ,alt+n ,alt+y ,alt+t,alt+s ,alt+k, alt+g,alt+u,alt+w';\n\n\nexport const FAMILY_GROUPS = [\n    {name: \"Child\", value: 'CHILD'},\n    {name: \"Parent  \", value: 'PARENT'},\n    {name: \"Brother/Sister\", value: 'BROTHER/SISTER'},\n    {name: \"Husband/Wife\", value: 'HUSBAND/WIFE'},\n    {name: \"Grandchild\", value: 'GRANDCHILD'},\n    {name: \"GrandParent\", value: 'GRANDPARENT'},\n    {name: \"Uncle/Aunt\", value: 'O+'},\n    {name: \"Nephew/Niece\", value: 'NEPHEW/NIECE'},\n    {name: \"Cousin\", value: 'COUSIN'},\n];\n\n// //\n// export const ADVANCED_SEARCH = [\n//     {label: 'Patient Name', value: 'name', input_type: \"text\", placeholder: \"Patient Name\"},\n//     {label: 'Contact No', value: 'phone', input_type: \"text\", placeholder: \"Contact No\"},\n//     {label: 'Age is', value: 'age', input_type: \"number\", placeholder: \"Age is\"},\n//     {label: 'Age more than', value: 'age_gte', input_type: \"number\", placeholder: \"Age more than\"},\n//     {label: 'Age Less Than', value: 'age_lte', input_type: \"number\", placeholder: \"Age less than\"},\n//     {\n//         label: 'Has Age', value: 'has_age', input_type: \"dropdown\", values: [\n//             \"12\", \"25\", \"45\", \"78\"\n//         ]\n//     },\n//\n// ];\n\n/** Advanced Search Constant Data**/\nexport const ADVANCED_SEARCH = [\n    {label: 'Patient Name', value: 'name'},\n    {label: 'Contact No', value: 'phone'},\n    {label: 'Age is ', value: 'age'},\n    {label: 'Age more than ', value: 'age_gte'},\n    {label: 'Age Less Than', value: 'age_lte'},\n    {label: 'Has Age ', value: 'has_age'},\n    {label: 'Date of Birth is ', value: 'dob'},\n    {label: 'Date of Birth is more than ', value: 'dob_gte'},\n    {label: 'Date of Birth is less than', value: 'dob_lte'},\n    {label: 'Birthday is in', value: 'dob_month'},\n    {label: 'Has Date of Birth', value: 'has_dob'},\n    {label: 'Patient Id', value: 'patient_id'},\n    {label: 'Has Aadhar Id', value: 'has_aadhar'},\n    {label: 'Aadhar Id', value: 'aadhar'},\n    {label: 'Email', value: 'email'},\n    {label: 'Has Email', value: 'has_email'},\n    {label: 'Gender is', value: 'gender'},\n    {label: 'Has Gender', value: 'has_gender'},\n    {label: 'Pincode', value: 'pincode'},\n    {label: 'Has Pincode', value: 'has_pincode'},\n    {label: 'Has Street Address', value: 'has_street'},\n    {label: 'Street Address ', value: 'street'},\n    {label: 'Blood Group', value: 'blood_group'},\n    {label: 'Referal Source', value: 'source'},\n    {label: 'Refered by Agent', value: 'agent_referal'},\n    // {label:'Refered by Agent' ,value:'agent_referal'},\n\n];\n\nexport const HAS_AGE = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_DOB = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\nexport const HAS_AADHAR_ID = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\nexport const HAS_EMAIL = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_GENDER = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_PINCODE = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_STREET = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const REFERED_BY_AGENT = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const GENDER_OPTION = [\n    {label: 'Female', value: 'female'},\n    {label: 'Male', value: 'male'},\n    {label: 'Other', value: 'other'},\n];\n\nexport const CURRENCY_TYPE = [\n    {label: 'Percent', value: '%'},\n    {label: 'Rupees', value: 'INR'}\n];\n\n\nexport const ROUTES_TO_HIDE_PATIENT_SIDE_PANEL = [\n    '/patients/profile/add',\n    '/patient/:id/emr/vitalsigns/add',\n    \"/patient/:id/emr/vitalsigns/edit\",\n    \"/patient/:id/emr/clinicnotes/add\",\n    \"/patient/:id/emr/clinicnotes/edit\",\n    \"/patient/:id/emr/plans/add\",\n    \"/patient/:id/emr/plans/edit\",\n    \"/patient/:id/emr/workdone/add\",\n    \"/patient/:id/emr/workdone/edit\",\n    \"/patient/:id/emr/prescriptions/add\",\n    \"/patient/:id/emr/prescriptions/edit\",\n    \"/patient/:id/prescriptions/template/add\",\n    \"/patient/:id/billing/invoices/add\",\n    \"/patient/:id/billing/invoices/edit\",\n    \"/patient/:id/billing/payments/add\",\n    \"/patient/:id/billing/payments/edit\"\n];\n\n\nexport const PROMO_CODE_SMS_TAG_OPTIONS = [\n    {\n        label: \"PATIENT NAME\",\n        value: \"{{PATIENT}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{CLINIC}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{EXPIRY}}\"\n    }, {\n        label: \"VALUE\",\n        value: \"{{VALUE}}\"\n    }, {\n        label: \"MAX VALUE\",\n        value: \"{{MAX_VALUE}}\"\n    }, {\n        label: \"MIN PURCHASE\",\n        value: \"{{MIN_PURCHASE}}\"\n    }];\nexport const BLOOD_GROUP_CONFIG_PARAM = 'config_blood_group';\nexport const PATIENT_SOURCE_CONFIG_PARAM = 'config_source';\nexport const SMS_LANGUAGE_CONFIG_PARAM = 'config_sms_language';\nexport const FAMILY_RELATION_CONFIG_PARAM = 'config_family_relation';\nexport const GENDER_CONFIG_PARAM = 'config_gender';\n\n\n\nexport const INCOME_TYPE = [\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Products\", value: \"PRODUCTS\"},\n];\n","import React from \"react\";\nimport Webcam from \"react-webcam\";\nimport {Button} from \"antd\";\n\nexport default class WebCamField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    setRef = webcam => {\n        this.webcam = webcam;\n    };\n\n    capture = () => {\n        const imageSrc = this.webcam.getScreenshot();\n        if(this.props.getScreenShot)\n            this.props.getScreenShot(imageSrc);\n    };\n\n    render() {\n        const videoConstraints = {\n            width: 1280,\n            height: 720,\n            facingMode: \"user\"\n        };\n        return <div style={{width:680}}>\n            <Webcam audio={false}\n                    height={480}\n                    width={640}\n                    ref={this.setRef}\n                    videoConstraints={videoConstraints}\n                    screenshotFormat=\"image/jpeg\"/>\n            <Button onClick={this.capture}>Capture photo</Button>\n        </div>\n    }\n}\n","export const ERROR = 'error';\nexport const ENTERUSERNAME = 'enter username';\nexport const VALID = 'validating';\nexport const SUCCESS = 'success';\nexport const USERAVAIL = 'Username available';\nexport const USEREXIST = 'Username already exist';\nexport const USERVALIDALPHA = \"Username can be only 'a-z', 'A-Z', '_' '0-9'\" ;\nexport const USERVALIDLEN=\"Too short username\";\nexport const PASSLEN = 'Password should be more than 6 character';\nexport const PASSUPER = 'Password must have atleast 1 uppercase letter';\nexport const PASSLOWER = 'Password must have atleast 1 lowercase letter';\nexport const PASSDIGIT = 'Password must contain atleast 1 digit';\nexport const PASSSPEC =  'Password must have atleast 1 special character';\nexport const SUBSUCCESS= 'Submission sucessful';\nexport const SUBFAILED= 'submission failed';\nexport const CHECKUSERORMOB= 'Check username or Mobile Number';\nexport const INPUTUSERNAME= 'Please input your username!';\nexport const INPUTFIRSTNAME= 'Please input your First Name!';\nexport const INPUTFULLNAME= 'Please input your fullName!';\nexport const NOTVALIDEMAIL= 'Not  Valid  email!';\nexport const INPUTEMAIL= 'Please input your email!';\nexport const INPUTDOB= 'Please input your Date Of Birth!';\nexport const INPUTPHNO= 'Please input your phone number!';\nexport const INPUTPASS= 'Please input your password!';\nexport const INPUTCITY= 'Please input your City!';\nexport const INPUTCOMPANY= 'Please input your Company Name!';\nexport const REQUIRED_FIELD_MESSAGE = 'This field is required!'\n\nexport const ERROR_INTERNET_CONNECTIVITY = 'Connection Failed';\nexport const ERROR_MESSAGE_500 = 'Internal Server Error';\nexport const ERROR_MESSAGE_404 = 'Not Found';\n\n\nexport const PASS_LEN = 'Password should be atleast 6 character long';\nexport const PASS_UPPER = 'Password must have atleast 1 uppercase letter';\nexport const PASS_LOWER = 'Password must have atleast 1 lowercase letter';\nexport const PASS_DIGIT = 'Password must contain atleast 1 digit';\nexport const PASS_SPEC =  'Password must have atleast 1 special character';\n","import lockr from 'lockr';\nimport axios from 'axios';\nimport {AUTH_TOKEN, PASSWORD, ROLE, EMAIL, PRACTICE, GROUP, ERROR_MSG_TYPE} from \"../constants/dataKeys\";\nimport {displayMessage, getAPI, handleErrorResponse, makeURL} from \"./common\";\nimport {LOGIN_URL, OTP_LOGIN_URL, USER_DATA} from \"../constants/api\";\nimport {CURRENT_PRACTICE} from \"../constants/formLabels\";\n\n\nexport const loggedInUser = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    if (role && token) {\n        return role;\n    }\n    return null;\n};\n\nexport const currentPractice = function () {\n\n}\nexport const setCurrentPractice = function (practice) {\n    lockr.set(CURRENT_PRACTICE, practice);\n}\nexport const loggedInUserGroup = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let group = lockr.get(GROUP);\n    if (role && token && group) {\n        return group;\n    }\n    return null;\n};\nexport const loggedInUserPractices = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let practice = lockr.get(PRACTICE);\n    if (role && token && practice) {\n        return practice;\n    }\n    return [];\n};\nexport const loggedInactivePractice = function () {\n    let currentPractice = lockr.get(CURRENT_PRACTICE);\n    if (currentPractice && currentPractice != {}) {\n        return currentPractice;\n    } else {\n        let practice = lockr.get(PRACTICE);\n        if (practice && practice.length) {\n            console.log(practice);\n            setCurrentPractice(practice[0].practice.id);\n            return loggedInactivePractice();\n        }\n    }\n    return null\n}\n\n\nexport const loggedInPermissions = function () {\n    let groups = lockr.get(GROUP);\n    let permissions = {};\n    if (groups)\n        groups.forEach(function (group) {\n            group.permissions.forEach(function (permission) {\n                permissions[permission.codename] = true\n            });\n        })\n    return permissions;\n}\n\nexport const getAllPermissions = function () {\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.ADMIN && lockrPermissions.ADMIN.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\n\nexport const getSuperUserPermissions = function () {\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.SUPERUSER && lockrPermissions.SUPERUSER.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\nexport const logInUser = function (data, successFn, errorFn) {\n    console.log(\"workign\");\n    var reqData = {\n        'mobile': data.email,\n        [PASSWORD]: data.password\n    };\n    axios.post(makeURL(LOGIN_URL), reqData).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        lockr.set(ROLE, data.user);\n        lockr.set(AUTH_TOKEN, data.token);\n        lockr.set(PRACTICE, data.practice_list);\n        // lockr.set('PERMISSIONS', data.permissions_list);\n        successFn()\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n};\nexport const logInUserWithOtp = function (data, successFn, errorFn) {\n    var reqData = {\n        'phone_no': data.phone_no,\n        'otp': data.otp\n    };\n    axios.post(makeURL(OTP_LOGIN_URL), reqData).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        lockr.set(ROLE, data.user);\n        lockr.set(AUTH_TOKEN, data.token);\n        lockr.set(PRACTICE, data.practice_list);\n        // lockr.set('PERMISSIONS', data.permissions_list);\n        successFn()\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n};\nexport const loadUserDetails = function (practice, callBackFn,callBackErrorFn) {\n    let successFn = function (data) {\n        lockr.set(ROLE, data.user);\n        // lockr.set(PRACTICE, data.practice_permissions);\n        lockr.set(PRACTICE, data.practice_list);\n        callBackFn(data);\n    }\n    let errorFn = function () {\n        displayMessage(ERROR_MSG_TYPE, \"Permission Loading Failed. Kindly refresh or check your internet connection...\");\n        callBackErrorFn();\n    }\n    getAPI(USER_DATA, successFn, errorFn, {practice: practice});\n}\nexport const saveAuthToken = function (response, successFn) {\n    let data = response;\n    lockr.set(ROLE, data.id);\n    lockr.set(AUTH_TOKEN, data.token);\n    successFn()\n}\n\nexport const logOutUser = function (successFn, errorFn) {\n    lockr.rm(ROLE);\n    lockr.rm(AUTH_TOKEN);\n    lockr.rm(PRACTICE);\n    lockr.rm(GROUP);\n    successFn();\n};\nexport const getAuthToken = function () {\n    let token = lockr.get(AUTH_TOKEN);\n    return token;\n};\n\nexport const checkRole = function (role) {\n    let roles = lockr.get(ROLE);\n    if (roles[role] === undefined || roles[role] === '' || !roles[role]) {\n        return false;\n    }\n    return roles[role];\n}\n\n\nexport const sendLoginOTP = function(url,phone,successFn,errorFn){\n    let reqData = {\n        \"phone_no\": phone\n    };\n    axios.post(url, reqData).then(function (response) {\n        // console.log(response);\n        successFn(response)\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n}\n","/***\n * Status Constants\n * */\n\nexport const SUCCESS_MSG_TYPE = 'success';\nexport const WARNING_MSG_TYPE = 'warning';\nexport const ERROR_MSG_TYPE = 'error';\nexport const INFO_MSG_TYPE = 'info';\n\n/***\n * Data Keys Constants\n * */\nexport const USERNAME = 'username';\nexport const PASSWORD = 'password';\nexport const PHONE = 'mob';\nexport const EMAIL = 'email';\nexport const DOB = 'dob';\nexport const GENDER = 'gender';\nexport const FIRST_NAME = 'firstname';\nexport const LAST_NAME = 'lastname';\nexport const AUTH_TOKEN = 'token';\nexport const ROLE = 'role';\nexport const GROUP = 'group';\nexport const PRACTICE = 'practice';\nexport const MEDICAL_HISTORY_KEY = 'Medical History';\nexport const PATIENT_GROUP_KEY = 'Patient Group';\n\n/***\n * Form Data Types\n * */\nexport const INPUT_FIELD = 'input';\nexport const RADIO_FIELD = 'radio';\nexport const SELECT_FIELD = 'select';\nexport const MULTI_SELECT_FIELD = 'multiselect';\nexport const CHECKBOX_FIELD = 'checkbox';\nexport const SINGLE_CHECKBOX_FIELD = 'singlecheckbox';\nexport const NUMBER_FIELD = 'number';\nexport const DATE_PICKER = 'datepicker';\nexport const DATE_TIME_PICKER = 'datetimepicker';\nexport const TEXT_FIELD = 'textfield';\nexport const TIME_PICKER = 'timepicker';\nexport const COLOR_PICKER = 'colorpicker';\nexport const QUILL_TEXT_FIELD = 'quilltextfield';\nexport const SINGLE_IMAGE_UPLOAD_FIELD = 'singleimageupload';\nexport const MULTI_IMAGE_UPLOAD_FIELD = 'multiimageupload';\nexport const COUNTRY_FIELD = 'country';\nexport const STATE_FIELD = 'state';\nexport const CITY_FIELD = 'city';\nexport const PASSWORD_FIELD = 'password';\nexport const EMAIL_FIELD = 'email';\nexport const SMS_FIELD = 'sms_field';\nexport const DIVIDER_FIELD = 'divider_field';\nexport const MAIL_TEMPLATE_FIELD = 'mail_field';\nexport const LABEL_FIELD ='label_field';\n/***\n *Role\n **/\nexport const DOCTORS_ROLE = '3';\nexport const CALENDAR_SETTINGS = 'calendar_settings';\n\n/***Reports***/\n\n/*Patient Reports*/\nexport const NEW_PATIENTS='DETAILED';\nexport const DAILY_NEW_PATIENTS='DAILY';\nexport const EXPIRING_MEMBERSHIP='EXPIRED';\nexport const PATIENTS_FIRST_APPOINTMENT='patientsfirstappointment';\nexport const MONTHLY_NEW_PATIENTS='MONTHLY';\nexport const NEW_MEMBERSHIP='NEW';\nexport const ACTIVE_PATIENTS='ACTIVE';\nexport const FOLLOW_UP='FOLLOW_UP';\nexport const MEDICINE='MEDICINE';\n\n/*Appointment Reports*/\nexport const ALL_APPOINTMENT='ALL';\nexport const APPOINTMENT_FOR_EACH_CATEGORY='CATEGORY' ;\nexport const CANCELLATION_NUMBERS='CANCEL_NUMBERS';\nexport const AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE='DAILY_WAIT';\nexport const AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE='MONTHLY_WAIT';\nexport const REASONS_FOR_CANCELLATIONS='reasonsforcancellations';\nexport const DAILY_APPOINTMENT_COUNT='DAILY';\nexport const APPOINTMENT_FOR_EACH_DOCTOR='DOCTOR';\nexport const MONTHLY_APPOINTMENT_COUNT='MONTHLY';\nexport const APPOINTMENT_FOR_EACH_PATIENT_GROUP='PATIENT_GROUPS';\nexport const APPOINTMENT_FOR_PATIENT_CONVERSION='CONVERSION_REPORT';\n\n\n/*Amount Due Reports*/\nexport const TOTAL_AMOUNT_DUE='ALL';\nexport const AGEING_AMOUNT_DUE='AGEING';\nexport const AMOUNT_DUE_PER_DOCTOR='DOCTOR';\n// export const AMOUNT_DUE_PER_PROCEDURE='c';\n// export const UNSETTLED_INVOICE='d';\n\n\n/*EMR Reports*/\nexport const ALL_TREATMENTS='ALL';\nexport const DAILY_TREATMENT_COUNT='DAILY';\nexport const TREATMENTS_FOR_EACH_DOCTOR='DOCTOR';\nexport const MONTHLY_TREATMENT_COUNT='MONTHLY';\nexport const TREATMENT_FOR_EACH_CATEGORY='CATEGORY';\n\n/*Inventory Retails*/\nexport const ALL='ALL';\n\n/*Expenses Reports*/\nexport const ALL_EXPENSES ='ALL';\nexport const DAILY_EXPENSES ='DAILY';\nexport const MONTHLY_EXPENSES ='MONTHLY';\nexport const EXPENSES_EACH_TYPE='EXPENSE_TYPE';\n\n/*Inventory Reports*/\nexport const ALL_INVENTORY='ALL';\nexport const DAILY_INVENTORY='DAILY';\nexport const MONTHLY_INVENTORY='MONTHLY';\nexport const TOP_INVENTORY='TOP';\n\n/** Bed Booking Reports**/\nexport const DAILY_BOOKING_COUNT='DAILY';\nexport const MONTHLY_BOOKING_COUNT='MONTHLY';\nexport const MEDICINE_USAGE_COUNT='MEDICINE_COUNT';\nexport const BED_BOOKING_PACKAGE_COUNT='BED_PACKAGE_COUNT';\n\n/** MLM Reports***/\nexport const MARGIN_TYPE_WISE='MARGIN';\nexport const PRODUCT_WISE='PRODUCT';\nexport const WALLET_BALANCE_AMOUNT='WALLET';\nexport const AGENT_TREE_VIEW='AGENTVIEW'\n\n/** Payments Reports**/\nexport const ALL_PAYMENTS='ALL';\nexport const CREDIT_AMOUNT_PER_DOCTOR='DOCTOR';\nexport const CREDIT_NOTES='NOTES';\nexport const MODE_OF_PAYMENTS='MODE';\nexport const PATIENTS_UNSETTLED_ADVANCE='ADVANCE';\nexport const PAYMENT_RECEIVED_PATIENT_GROUP='GROUP';\nexport const PAYMENT_RECEIVED_PER_DAY='DAY';\nexport const PAYMENT_RECEIVED_PER_DOCTOR='PER_DOCTOR';\nexport const PAYMENT_RECEIVED_PER_MONTH='MONTH';\nexport const PAYMENT_SETTLEMENT='SETTLEMENT';\nexport const PAYMENT_SETTLEMENT_PER_DOCTOR='SETTLEMENT_DOCTOR';\nexport const PAYMENT_REFUND='REFUND';\n\n\n/*Income Reports*/\nexport const ALL_INVOICE='ALL';\nexport const DAILY_INCOME=\"DAILY\";\nexport const MONTHLY_INCOME=\"MONTHLY\";\nexport const TAXED_INCOME=\"TAX\";\nexport const DOCTOR_EACH_INCOME='DOCTOR';\nexport const PROCEDURE_INCOME=\"PROCEDURE\";\nexport const PRODUCT_INCOME=\"PRODUCT\";\nexport const PATIENT_GROUPS_INCOME=\"PATIENT_GROUPS\";\n\n/*Invoice Return Reports */\nexport const ALL_INVOICE_RETURN='ALL';\nexport const DAILY_WISE_RETURN_INVOICE='DAILY';\nexport const MONTHLY_WISE_RETURN_INVOICE='MONTHLY';\nexport const RETURN_INVOICE_FOR_EACH_TAX='TAX';\nexport const RETURN_INVOICE_FOR_EACH_PROCEDURE='PROCEDURE';\nexport const RETURN_INVOICE_FOR_EACH_PRODUCT='PRODUCT';\nexport const RETURN_INVOICE_FOR_EACH_DOCTOR='DOCTOR';\nexport const RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS='PATIENT_GROUPS';\n\nexport const RELATION='Relation';\n\nexport const CHOOSE ='Choose';\n\nexport const OTP_DELAY_TIME=130;\nexport const MAX_PARTICIPANT=100;\nexport const ASCENDING_ORDER='asc';\n"],"sourceRoot":""}