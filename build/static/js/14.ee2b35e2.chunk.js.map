{"version":3,"sources":["app/components/core/AppHeader.js","app/components/core/AppSider.js","app/components/auth/forms/ChangePasswordForm.js","app/components/auth/Profile.js","app/components/patients/patient/PrintPatientForm.js","app/components/calendar/BlockCalendar.js","app/components/core/SuggestionBox.js","crashHandling/ErrorBoundary.js","crashHandling/utils/crashHandlingUtils.js","app/components/core/AppBase.js","app/utils/clinicUtils.js","app/components/common/DynamicFieldsForm.js","app/constants/hardData.js","app/utils/permissionUtils.js","app/components/common/errors/PermissionDenied.js","app/components/common/WebCamField.js","app/assets/img/kidneycarelogo.png","app/components/common/errors/Error404.js","app/components/calendar/EventPatientPopover.js"],"names":["Header","AppHeader","props","searchPatient","value","that","setState","prevState","searchPatientString","getAPI","interpolate","SEARCH_PATIENT","data","patientListData","results","switchPortal","SAVE_CREDENTIALS","user","id","setUserCredentials","login","password","displayMessage","ERROR_MSG_TYPE","handlePatientSelect","event","history","push","replace","CUSTOM_STRING_SEPERATOR","state","email","msg","startLoadingMessage","sessionStorage","removeItem","reqData","getItem","postOuterAPI","CREDENTIALS","success","stopLoadingMessage","SUCCESS_MSG_TYPE","setItem","token","window","open","this","userMenu","Item","key","to","Divider","onClick","logout","style","background","padding","boxShadow","zIndex","float","margin","className","type","collapsed","toggleSider","mode","lineHeight","placeholder","showSearch","dropdownMatchSelectWidth","dropdownStyle","width","onSearch","defaultActiveFirstOption","showArrow","filterOption","onSelect","map","option","Option","toString","Meta","avatar","image","src","makeFileURL","backgroundColor","first_name","charAt","title","description","activePracticePermissions","PatientPhoneNumber","mobile","hideMobile","custom_id","Group","AddPatient","allowAllPermissions","MergePatients","onChange","switchPractice","defaultValue","active_practiceId","maxWidth","practiceList","practice","name","is_superuser","color","overlay","placement","icon","React","Component","Sider","SubMenu","AppSider","ItemGroup","onOpenChange","openKeys","latestOpenKey","find","indexOf","onHotKeyDown","bind","keyNm","console","log","keyName","OUTER_KEYS_HOTKEYS","onKeyDown","trigger","collapsible","breakpoint","onBreakpoint","broken","onCollapse","Applogo","alt","defaultSelectedKeys","theme","ViewCalendar","currentPatient","WebAdmin","FormItem","ChangePasswordForm","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","changePassLoading","OLD_PASSWORD","oldPass","NEW_PASSWORD","newPass","postAPI","CHANGE_PASSWORD","message","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validatePassword","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","onSubmit","label","rules","required","prefix","validator","onBlur","loading","htmlType","Content","Profile","USER_DATA","userProfile","ChangePasswordLayout","create","minHeight","size","dataSource","activePracticeData","permissions_data","renderItem","item","gutter","UsersRow","marginBottom","textAlign","PrintPatientForm","setTimeout","print","newProps","httpEquiv","content","marginTop","borderBottom","logo","fontSize","address","locality","city","pincode","contact","website","colSpan","display","BlockCalendar","changeParamsForBlockedAppointments","blockedAppointmentParams","retrieveBlockingAppointments","block_from","block_to","APPOINTMENT_PERPRACTICE_API","blockingAppointments","start","moment","format","end","doctor","validateFields","BLOCK_CALENDAR","practiceDoctors","loadDoctors","initialValue","REQUIRED_FIELD_MESSAGE","showTime","use12Hours","allowClear","goBack","apppointment","status","CANCELLED_STATUS","border","borderRadius","textDecoration","borderLeft","practice_doctors","doctors_object","calendar_colour","AppointmentCard","changeAppointmentStatus","appointment","EventPatientPopover","appointmentId","schedule_at","patient","doctor_data","TextArea","SuggestionBox","onClose","close","SUGGESTIONS","visible","layout","autosize","minRows","maxRows","marginRight","ErrorBoundary","redirectToHome","location","hasError","error","errorInfo","crashData","hostname","text","componentStack","pathname","loggedInUser","CONFIG","prodDomain","crashHandling","slack","sendOnProduction","sendOnDevelopment","webHookUrl","logErrorToSlackChannel","subTitle","extra","children","WebCall","loadable","Calendar","ReportsHome","WebAdminHome","InventoryHome","MeetingBooking","SettingsDash","PatientHome","AppBase","showDrawer","loggedInactivePractice","loggedInUserPractices","specialisations","loadingPermissions","activeData","successFn","permissions","practice_permissions","forEach","permission","codename","global_permissions","errorFn","activePracticeObj","practiceObj","length","setCurrentPractice","loadUserDetails","practiceId","spinning","tip","height","position","right","bottom","shape","path","render","route","exact","PermissionDenied","match","params","refreshClinicData","ViewMeeting","component","Error404","confirm","PRACTICESTAFF","selectedDoctor","staff","usersdata","role","parseInt","DOCTORS_ROLE","patientSettingMenu","hashCode","str","hash","i","charCodeAt","intToRGB","c","toUpperCase","substring","loadConfigParameters","parameters","join","CONFIG_API","loadMailingUserListForReportsMail","MAILING_USERS_LIST","mailingUsersList","sendReportMail","url","successMsg","errorMsg","mail_to","okText","okType","cancelText","onOk","SUCCESS","MAIL_SEND_MSG","MAIL_SEND_ERROR_MSG","onCancel","sendMail","RadioGroup","CheckboxGroup","DynamicFieldsForm","fieldDecorators","field","formData","urlInitialValues","MULTI_SELECT_FIELD","defaultValues","object","colorPickerKey","colorPickerColor","fields","formFields","SINGLE_IMAGE_UPLOAD_FIELD","file","response","image_path","MULTI_IMAGE_UPLOAD_FIELD","fileList","TIME_PICKER","DATE_PICKER","DATE_TIME_PICKER","isValid","QUILL_TEXT_FIELD","editorState","draftToHtml","convertToRaw","getCurrentContent","formProp","beforeSend","confirmText","submitForm","addMailTemplateTag","currentHtml","EditorState","createWithContent","ContentState","createFromBlockArray","htmlToDraft","toggleWebCam","webCamState","getImageandUpload","fieldKey","FormData","append","FILE_UPLOAD_BASE64","setFieldsValue","onEditorStateChange","authorisation","disabled","countryOptions","stateOptions","cityOptions","smsFields","resetFormData","colorChange","loadCountryData","addSMSTag","nextProps","COUNTRY_FIELD","search","pairValueArray","substr","split","urlInitialValue","keyValue","isNaN","parseFloat","changeRedirect","headers","Authorization","undefined","method","action","putAPI","hex","states","country","cities","EXTRA_DATA","prevValue","formLayout","PASSWORD_FIELD","INPUT_FIELD","follow","SELECT_FIELD","options","RADIO_FIELD","CHECKBOX_FIELD","SINGLE_CHECKBOX_FIELD","valuePropName","NUMBER_FIELD","min","max","TEXT_FIELD","inputChange","SMS_FIELD","MAIL_TEMPLATE_FIELD","createEmpty","preview","maxHeight","overflowY","dangerouslySetInnerHTML","__html","COLOR_PICKER","singleUploadprops","makeURL","FILE_UPLOAD_API","authorization","info","allowWebcam","Math","random","footer","getScreenShot","multiuploadprops","img","setAddressField","STATE_FIELD","EMAIL_FIELD","CITY_FIELD","DIVIDER_FIELD","LABEL_FIELD","PAYMENT_TYPES","PAYMENT_OFFLINE_MODE","DISEASE_TYPES","DRUG","EQUIPMENT","SUPPLIES","PROCEDURES","PRESCRIPTIONS","INVENTORY","INVENTORY_ITEM_TYPE","ADD_STOCK","CONSUME_STOCK","APPOINTMENT_CONFIRMATION_SMS_TAG_OPTIONS","EMR_TYPE","BILLING_TYPE","EMR_SUB_TYPE","BILLING_SUB_TYPE","CUSTOMIZE_PAPER_TYPE","PAPER_SIZE","PAGE_ORIENTATION","PRINTER_TYPE","HEADER_INCLUDE","LOGO_TYPE","LOGO_ALIGMENT","LOGO_INCLUDE","PATIENT_DETAILS_LIST","EXCLUDE_PATIENT_DOB","SMS_ENABLE","EMAIL_ENABLE","BIRTHDAY_SMS_ENABLE","DURATIONS_UNIT","DOSE_REQUIRED","SCHEDULE_STATUS","WAITING_STATUS","ENGAGED_STATUS","CHECKOUT_STATUS","TYPE_OF_CONSUMPTION","DAY_KEYS","NOTES","DEFAULT_TEMPERATURE_IN","DEFAULT_TEMPERATURE_METHOD","DEFAULT_BP_METHOD","APPOINTMENT_STATUS","PAYMENT_STATUS","OPD_IPD","ROLES","PATIENTS_RELATED_REPORT","DAILY_NEW_PATIENTS","EXPIRING_MEMBERSHIP","PATIENTS_FIRST_APPOINTMENT","MONTHLY_NEW_PATIENTS","NEW_MEMBERSHIP","ACTIVE_PATIENTS","FOLLOW_UP","MEDICINE","APPOINTMENT_RELATED_REPORT","APPOINTMENT_FOR_EACH_CATEGORY","CANCELLATION_NUMBERS","AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE","AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE","DAILY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_DOCTOR","MONTHLY_APPOINTMENT_COUNT","APPOINTMENT_FOR_EACH_PATIENT_GROUP","APPOINTMENT_FOR_PATIENT_CONVERSION","EMR_RELATED_REPORT","DAILY_TREATMENT_COUNT","TREATMENTS_FOR_EACH_DOCTOR","MONTHLY_TREATMENT_COUNT","TREATMENT_FOR_EACH_CATEGORY","AMOUNT_DUE_RELATED_REPORT","AGEING_AMOUNT_DUE","AMOUNT_DUE_PER_DOCTOR","BLOOD_GROUPS","EXPENSE_RELATED_REPORT","DAILY_EXPENSES","EXPENSES_EACH_TYPE","MONTHLY_EXPENSES","INVENTORY_RELATED_REPORT","DAILY_INVENTORY","MONTHLY_INVENTORY","TOP_INVENTORY","BED_BOOKING_RELATED_REPORT","DAILY_BOOKING_COUNT","MONTHLY_BOOKING_COUNT","MEDICINE_USAGE_COUNT","BED_BOOKING_PACKAGE_COUNT","MLM_RELATED_REPORT","MARGIN_TYPE_WISE","WALLET_BALANCE_AMOUNT","AGENT_TREE_VIEW","PAYMENT_RELATED_REPORT","PAYMENT_RECEIVED_PATIENT_GROUP","PATIENTS_UNSETTLED_ADVANCE","MODE_OF_PAYMENTS","PAYMENT_RECEIVED_PER_DAY","PAYMENT_RECEIVED_PER_DOCTOR","PAYMENT_RECEIVED_PER_MONTH","INCOME_RELATED_REPORT","DAILY_INCOME","MONTHLY_INCOME","TAXED_INCOME","DOCTOR_EACH_INCOME","PROCEDURE_INCOME","PATIENT_GROUPS_INCOME","PRODUCT_INCOME","INVOICE_RELATED_REPORT","DAILY_WISE_RETURN_INVOICE","MONTHLY_WISE_RETURN_INVOICE","RETURN_INVOICE_FOR_EACH_TAX","RETURN_INVOICE_FOR_EACH_PROCEDURE","RETURN_INVOICE_FOR_EACH_PRODUCT","RETURN_INVOICE_FOR_EACH_DOCTOR","RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS","SCHEDULE_OF_INVOICES","DISCOUNT","SCHEDULE_OF_PAYMENT","PATIENT_AGE","INNER_KEYS_HOTKEYS","ADVANCED_SEARCH","HAS_AGE","HAS_DOB","HAS_AADHAR_ID","HAS_EMAIL","HAS_GENDER","HAS_PINCODE","HAS_STREET","REFERED_BY_AGENT","GENDER_OPTION","CURRENCY_TYPE","ROUTES_TO_HIDE_PATIENT_SIDE_PANEL","PROMO_CODE_SMS_TAG_OPTIONS","PROMO_CODE_RUPEE_SMS_TAG_OPTIONS","BLOOD_GROUP_CONFIG_PARAM","PATIENT_SOURCE_CONFIG_PARAM","SMS_LANGUAGE_CONFIG_PARAM","FAMILY_RELATION_CONFIG_PARAM","GENDER_CONFIG_PARAM","INCOME_TYPE","PDF_FILE_EXTENSION","repeat","hideEmail","WebCamField","setRef","webcam","capture","imageSrc","getScreenshot","audio","ref","videoConstraints","facingMode","screenshotFormat","module","exports","loadAppointmentDetails","APPOINTMENT_API","updateAppointmentStatus","currentStatus","targetStatus","waiting","engaged","checkout","gender","slot","from","showStatusTimeline","overflow","ChangeAppointmentStatus","category_data","first_appointment","EditAppointment","onConfirm"],"mappings":"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","file":"static/js/14.ee2b35e2.chunk.js","sourcesContent":["import React from \"react\";\nimport {AutoComplete, Avatar, Button, Dropdown, Icon, Layout, List, Menu, Select, Tag} from \"antd\";\nimport {Link, Redirect} from 'react-router-dom';\nimport axios from \"axios\";\nimport {\n    displayMessage,\n    getAPI,\n    handleErrorResponse,\n    interpolate,\n    makeFileURL,\n    makeURL,\n    postOuterAPI, startLoadingMessage, stopLoadingMessage\n} from \"../../utils/common\";\nimport {CREDENTIALS, PATIENT_PROFILE, SAVE_CREDENTIALS, SEARCH_PATIENT, SWITCH_PORTAL} from \"../../constants/api\";\nimport {hideMobile} from \"../../utils/permissionUtils\";\nimport {getAuthToken} from \"../../utils/auth\";\nimport {ERROR_MSG_TYPE, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\nimport {CUSTOM_STRING_SEPERATOR} from \"../../constants/hardData\";\n\nconst {Header} = Layout;\n\nclass AppHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientListData: [],\n            // searchPatientString: null,\n            // loading:false\n        }\n    }\n\n    searchPatient = (value) => {\n        const that = this;\n        this.setState(function (prevState) {\n            return {\n                searchPatientString: value\n            }\n        });\n        const successFn = function (data) {\n            that.setState(function (prevState) {\n                if (prevState.searchPatientString == value)\n                    return {\n                        patientListData: [...data.results],\n                    }\n                return {}\n            })\n        };\n        const errorFn = function (data) {\n            that.setState({\n                searchPatientString: null,\n            })\n        };\n        if (value) {\n            getAPI(interpolate(SEARCH_PATIENT, [value]), successFn, errorFn);\n        }\n\n    };\n\n    setUserCredentials(email, password) {\n        const that = this;\n        const msg = startLoadingMessage(\"Waiting for authentication from server...\");\n        sessionStorage.removeItem('token');\n        const reqData = {\n            email,\n            password\n        };\n        const successFn = function (data) {\n            if (data.success) {\n                stopLoadingMessage(msg, SUCCESS_MSG_TYPE, \" Authentication Successfully!!\");\n                sessionStorage.setItem(\"token\", data.token);\n            }\n            if (sessionStorage.getItem('token')) {\n                window.open('/task/');\n            } else {\n                stopLoadingMessage(msg, ERROR_MSG_TYPE, \"Authentication failed. User not found.\");\n            }\n\n        };\n        const errorFn = function () {\n\n        };\n        if (sessionStorage.getItem('token') == null) {\n            postOuterAPI(CREDENTIALS, reqData, successFn, errorFn);\n        }\n\n    };\n\n    switchPortal = () => {\n        const that = this;\n        const successFn = function (data) {\n            if (data) {\n                that.setUserCredentials(data.login, data.password);\n                // that.setUserCredentials(data.email,data.password);\n            }\n\n        };\n        const errorFn = function () {\n            displayMessage(ERROR_MSG_TYPE, \"Something went wrong.\");\n        };\n\n        getAPI(interpolate(SAVE_CREDENTIALS, [that.props.user.id]), successFn, errorFn);\n    };\n\n\n    handlePatientSelect = (event) => {\n        if (event) {\n            this.props.history.push(`/patient/${  event.replace(CUSTOM_STRING_SEPERATOR, '')  }/profile`);\n            this.setState({\n                searchPatientString: null,\n            });\n        }\n    }\n\n    render() {\n        const that = this;\n        const userMenu = (\n            <Menu>\n                <Menu.Item key=\"profile\">\n                    <Link to=\"/profile\">Profile</Link>\n                </Menu.Item>\n                <Menu.Divider />\n                <Menu.Item key=\"website\" onClick={this.switchPortal}>\n                    <small>Switch to Tasks ></small>\n                </Menu.Item>\n                <Menu.Divider />\n                <Menu.Item key=\"logout\">\n                    <a onClick={this.props.logout}>Log out</a>\n                </Menu.Item>\n            </Menu>\n        );\n        return (\n<Header style={{background: '#fff', padding: 0, boxShadow: '0 2px 4px 0 rgba(38,50,69,.2)', zIndex: 1}}>\n            <div style={{float: 'left', margin: '0px 20px'}}>\n                <Icon\n                  className=\"trigger\"\n                  type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                  onClick={() => this.props.toggleSider(!this.props.collapsed)}\n                />\n            </div>\n            <Menu\n              mode=\"horizontal\"\n              style={{lineHeight: '64px'}}\n            >\n                <Menu.Item key=\"5\">\n                    <AutoComplete\n                      placeholder=\"Patient Name\"\n                      showSearch\n                      dropdownMatchSelectWidth={false}\n                      dropdownStyle={{width: 400}}\n                      onSearch={this.searchPatient}\n                      defaultActiveFirstOption={false}\n                      showArrow={false}\n                      value={this.state.searchPatientString}\n                      filterOption={false}\n                      onSelect={this.handlePatientSelect}\n                    >\n                        {this.state.patientListData.map((option) => (\n<AutoComplete.Option\n  value={option.id.toString() + CUSTOM_STRING_SEPERATOR}\n>\n                            <List.Item style={{padding: 0}}>\n                                <List.Item.Meta\n                                  avatar={(option.image ? <Avatar src={makeFileURL(option.image)} /> : (\n                                        <Avatar style={{backgroundColor: '#87d068'}}>\n                                            {option.user.first_name ? option.user.first_name.charAt(0) :\n                                                <Icon type=\"user\" />}\n                                        </Avatar>\n                                      ))}\n                                  title={option.user.first_name}\n                                  description={that.props.activePracticePermissions.PatientPhoneNumber ? option.user.mobile : hideMobile(option.user.mobile)}\n                                />\n                                <div>{option.custom_id ? option.custom_id : option.user.id}</div>\n                            </List.Item>\n</AutoComplete.Option>\n))}\n                    </AutoComplete>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                    <Button.Group>\n                        {that.props.activePracticePermissions.AddPatient || that.props.allowAllPermissions ? (\n                            <Link to=\"/patients/profile/add\">\n                                <Button type=\"primary\">\n                                    <Icon type=\"plus\" />Add Patient\n                                </Button>\n                            </Link>\n                          ) : null}\n                        {that.props.activePracticePermissions.MergePatients || that.props.allowAllPermissions ? (\n                            <Link to=\"/patients/merge\">\n                                <Button type=\"primary\">\n                                    <Icon type=\"user-add\" />Merge Patients\n                                </Button>\n                            </Link>\n                          ) : null}\n                    </Button.Group>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                    <Select\n                      onChange={this.props.switchPractice}\n                      defaultValue={this.props.active_practiceId}\n                      value={this.props.active_practiceId}\n                      style={{width: '300px', maxWidth: '70vw'}}\n                    >\n                        {this.props.practiceList && this.props.practiceList.map((option) => (\n<Select.Option\n  key={option.practice.id}\n  value={option.practice.id}\n>{option.practice.name}\n</Select.Option>\n))}\n                    </Select>\n                </Menu.Item>\n                {/* <Menu.Item key=\"3\"><Search */}\n                {/* placeholder=\"Search\" */}\n                {/* onSearch={value => console.log(value)} */}\n                {/* style={{width: 200}} */}\n                {/* /></Menu.Item> */}\n\n                <div style={{float: 'right', margin: '0px 20px'}}>\n                    {this.props.user && this.props.user.is_superuser ? <Tag color=\"red\">SuperUser</Tag> : null}\n                    <Dropdown overlay={userMenu} placement=\"bottomRight\">\n\n                        <Avatar style={{backgroundColor: '#87d068'}} icon=\"user\" />\n                    </Dropdown>\n                </div>\n\n            </Menu>\n</Header>\n)\n    }\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport {Divider, Icon, Layout, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Hotkeys from \"react-hot-keys\";\nimport Applogo from '../../assets/img/kidneycarelogo.png'\nimport {OUTER_KEYS_HOTKEYS} from \"../../constants/hardData\";\n\nconst {Sider} = Layout;\nconst {SubMenu} = Menu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass AppSider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openKeys: [],\n        }\n        this.onHotKeyDown = this.onHotKeyDown.bind(this);\n    }\n\n    onOpenChange = (openKeys) => {\n        const rootSubmenuKeys = ['sub1', 'sub2'];\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({openKeys});\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    onHotKeyDown(keyNm) {\n        console.log(keyNm);\n        const that = this;\n        switch (keyNm) {\n            case 'alt+c':\n                that.props.history.push(\"/calendar\");\n                break;\n            case 'alt+p':\n                that.props.history.push(\"/patients/profile\");\n                break;\n            case 'alt+r':\n                that.props.history.push(\"/reports/appointments\");\n                break;\n            case 'alt+s':\n                that.props.history.push('/settings/clinics');\n                break;\n            case 'alt+b':\n                that.props.history.push(\"/inventory\");\n                break;\n            case 'alt+w':\n                that.props.history.push(\"/web/videos\");\n                break;\n        }\n    }\n\n\n    render() {\n        const that = this;\n        return (\n<Hotkeys keyName={OUTER_KEYS_HOTKEYS} onKeyDown={(value) => this.onHotKeyDown(value)}>\n            <Sider\n                // style={{background: '#fff'}}\n              trigger={null}\n              collapsible\n              collapsed={this.props.collapsed}\n              style={{zIndex: 1}}\n              breakpoint=\"xxl\"\n                // collapsedWidth=\"0\"\n              onBreakpoint={(broken) => {\n                    // console.log(broken);\n                    that.props.toggleSider(broken);\n                }}\n              onCollapse={(collapsed, type) => {\n                    // console.log(collapsed, type);\n                }}\n            >\n                <img src={Applogo} alt=\"\" style={{width: '100%', padding: '20px'}} />\n\n                <Menu\n                  mode=\"inline\"\n                  defaultSelectedKeys={['1']}\n                  openKeys={this.state.openKeys}\n                  onOpenChange={this.onOpenChange}\n                  theme=\"dark\"\n                >\n                    {this.props.activePracticePermissions.ViewCalendar ? (\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/calendar\">\n                                <Icon type=\"schedule\" />\n                                <span className=\"nav-text\"><span\n                                  className=\"shortcutLetterHighlight\"\n                                >C\n                                                           </span>alendar\n                                </span>\n                            </Link>\n                        </Menu.Item>\n                      ) : null}\n                    <Menu.Item key=\"26\">\n                        <Link\n                          to={this.props.currentPatient ? `/patient/${  this.props.currentPatient.id  }/profile` : \"/patients/profile\"}\n                        >\n                            <Icon type=\"user\" />\n                            <span className=\"nav-text\"><span\n                              className=\"shortcutLetterHighlight\"\n                            >P\n                                                       </span>atients\n                            </span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"27\">\n                        <Link to=\"/reports/appointments\">\n                            <Icon type=\"bar-chart\" />\n                            <span className=\"nav-text\"><span className=\"shortcutLetterHighlight\">R</span>eports</span>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"5\">\n                        <Link to=\"/settings/clinics\">\n                            <Icon type=\"setting\" />\n                            <span className=\"nav-text\"><span\n                              className=\"shortcutLetterHighlight\"\n                            >S\n                                                       </span>ettings\n                            </span>\n                        </Link>\n                    </Menu.Item>\n                    <SubMenu\n                      key=\"sub1\"\n                      title={<span><Icon type=\"gold\" /><span><span className=\"shortcutLetterHighlight\">B</span>ack Office</span></span>}\n                    >\n                        <Menu.Item key=\"6\">\n                            <Link to=\"/inventory/expenses\">\n                                <Icon type=\"credit-card\" />\n                                <span className=\"nav-text\">Expenses</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"7\">\n                            <Link to=\"/inventory/activity\">\n                                <Icon type=\"bell\" />\n                                <span className=\"nav-text\">Activities</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"8\">\n                            <Link to=\"/inventory/manufacture\">\n                                <Icon type=\"database\" />\n                                <span className=\"nav-text\">Manufacturers</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"42\">\n                            <Link to=\"/inventory/vendor\">\n                                <Icon type=\"database\" />\n                                <span className=\"nav-text\">Vendor</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"9\">\n                            <Link to=\"/inventory/lab\">\n                                <Icon type=\"experiment\" />\n                                <span className=\"nav-text\">Labs</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"10\">\n                            <Link to=\"/inventory\">\n                                <Icon type=\"gold\" />\n                                <span className=\"nav-text\">Inventory</span>\n                            </Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    {this.props.activePracticePermissions.WebAdmin ? (\n                        <Menu.Item key=\"web-1\">\n                            <Link to=\"/web/videos\">\n                                <Icon type=\"google\" />\n                                <span className=\"nav-text\"><span className=\"shortcutLetterHighlight\">W</span>eb Admin</span>\n                            </Link>\n                        </Menu.Item>\n                      )\n                        : null}\n                        <Menu.Item key=\"11\">\n                            <Link to=\"/meeting-booking\">\n                                <Icon type=\"reconciliation\" />\n                                <span className=\"nav-text\">Meeting Booking</span>\n                            </Link>\n                        </Menu.Item>\n                    {/* <Menu.Item key={'12'}> */}\n                    {/*    <Link to=\"/alternate-medicine\"> */}\n                    {/*        <Icon type={\"swap\"}/> */}\n                    {/*        <span className=\"nav-text\">Alternate Medicines</span> */}\n                    {/*    </Link> */}\n                    {/* </Menu.Item> */}\n                </Menu>\n            </Sider>\n</Hotkeys>\n)\n    }\n}\n\nexport default AppSider;\n","import React from \"react\";\nimport {Button, Form, Icon, message, Input} from \"antd\";\nimport {postAPI, putAPI, validatePassword} from \"../../../utils/common\";\nimport {CHANGE_PASSWORD} from \"../../../constants/api\";\nimport {NEW_PASSWORD, OLD_PASSWORD} from \"../../../constants/formLabels\";\n\nconst FormItem = Form.Item;\nexport default class ChangePasswordForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            changePassLoading: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const that = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                that.setState({\n                    changePassLoading: true\n                });\n                const data = {\n                    [OLD_PASSWORD]: values.oldPass,\n                    [NEW_PASSWORD]: values.newPass,\n                };\n                const successFn = function (data) {\n                    message.success(data.message);\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                const errorFn = function () {\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                postAPI(CHANGE_PASSWORD, data, successFn, errorFn);\n            }\n        });\n    };\n\n    handleConfirmBlur = (e) => {\n        const {value} = e.target;\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && value != form.getFieldValue('newPass')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        callback(validatePassword(rule, value, callback));\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem label=\"Old Password\" {...formItemLayout}>\n                    {getFieldDecorator('oldPass', {\n                        rules: [{required: true, message: 'Please enter your old Password!'}],\n                    })(\n                        <Input\n                          prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />}\n                          type=\"password\"\n                          placeholder=\"Old Password\"\n                        />\n                    )}\n                </FormItem>\n                <FormItem label=\"New Password\" {...formItemLayout}>\n                    {getFieldDecorator('newPass', {\n                        rules: [{\n                            required: true, message: 'Please enter your new Password!'\n                        }, {\n                            validator: this.validateToNextPassword\n                        }]\n                    })(\n                        <Input\n                          prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />}\n                          type=\"password\"\n                          placeholder=\"New Password\"\n                        />\n                    )}\n                </FormItem>\n                <FormItem label=\"Confirm Password\" {...formItemLayout}>\n                    {getFieldDecorator('confirmPass', {\n                        rules: [{required: true, message: 'Please confirm your new Password!'}, {\n                            validator: this.compareToFirstPassword\n                        }],\n                    })(\n                        <Input\n                          prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />}\n                          type=\"password\"\n                          placeholder=\"Confirm Password\"\n                          onBlur={this.handleConfirmBlur}\n                        />\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button\n                      loading={this.state.changePassLoading}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                    >\n                        Change Password\n                    </Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n","import {Card, Col, Form, List, Row, Divider,Layout} from \"antd\";\nimport React from \"react\";\nimport ChangePasswordForm from \"./forms/ChangePasswordForm\";\n\nimport {getAPI, interpolate} from \"../../utils/common\";\nimport {USER_DATA} from \"../../constants/api\";\n\nconst {Content} = Layout;\nexport default class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(this.state);\n    }\n\n    loadProfile() {\n        const that = this;\n        const successFn = function (data) {\n            that.setState({\n                userProfile: data,\n                loading: false\n            });\n        };\n        const errorFn = function () {\n            that.setState({\n                loading: false\n            })\n        };\n        getAPI(USER_DATA, successFn, errorFn);\n    }\n\n    render() {\n        const that = this;\n        const ChangePasswordLayout = Form.create()(ChangePasswordForm);\n        return (\n<Content\n  className=\"main-container\"\n  style={{\n            margin: '24px 16px',\n            // padding: 24,\n            minHeight: 280,\n            // marginLeft: '200px'\n        }}\n>\n            <Row>\n                <Col span={12}>\n                    <Card title=\"Change Password\">\n                        <ChangePasswordLayout />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card title=\"My Permissions\">\n                        <List\n                          size=\"small\"\n                          dataSource={that.props.activePracticeData ? that.props.activePracticeData.permissions_data : []}\n                          renderItem={item => <List.Item>{item.name}</List.Item>}\n                        />\n                    </Card>\n                </Col>\n                <Divider />\n                <Col span={12}>\n                    <Card title=\"My Profile\">\n                        <Row gutter={16}>\n                            <Col span={6}>\n                                <UsersRow label=\"Name \" value={this.props.user.first_name} />\n                                <UsersRow label=\"Email Id \" value={this.props.user.email} />\n                                <UsersRow label=\"Contact No.\" value={this.props.user.mobile} />\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n</Content>\n)\n    }\n}\n\nfunction UsersRow(props) {\n    return (\n<Row gutter={16} style={{marginBottom: '5px'}}>\n        <Col span={12} style={{textAlign: 'right'}}>{props.label}:</Col>\n        <Col span={12}><strong>{props.value}</strong></Col>\n</Row>\n)\n}\n","import React from \"react\";\nimport '../../../assets/printpatientform.css';\nimport {makeFileURL} from \"../../../utils/common\";\n\n\nexport default class PrintPatientForm extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.activePracticeData) {\n            setTimeout(function () {\n                window.print();\n            }, 1000)\n\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.activePracticeData) {\n            setTimeout(function () {\n                window.print();\n            }, 1000)\n\n        }\n    }\n\n    render() {\n        if (this.props.activePracticeData)\n            return (\n<html className=\"PrintPatientForm\">\n            <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n            <body style={{margin: '0 auto', marginTop: '20px'}}>\n            <div style={{margin: \"0px 10%\"}}>\n\n                <table style={{borderBottom: \"1px solid #000\", width: '100%'}}>\n                    <tr>\n                        <td style={{width: '150px'}}>\n                            <img\n                              style={{width:'150px'}}\n                              src={makeFileURL(this.props.activePracticeData.logo)}\n                            />\n                        </td>\n                        <td>\n                            <h2 style={{margin: \"5px\"}}>{this.props.activePracticeData.name}</h2>\n                            <p style={{margin: \"5px\", fontSize: \"11px\"}}>{this.props.activePracticeData.address}<br />{this.props.activePracticeData.locality}<br />{this.props.activePracticeData.city}, {this.props.activePracticeData.state}-\n                                {this.props.activePracticeData.pincode}\n                            </p>\n                            <div style={{margin: \"5px\", fontSize: \"11px\"}}>\n                                Email : <strong>{this.props.activePracticeData.email}</strong>\n                                <br />\n\n                                Phone : <strong>{this.props.activePracticeData.contact}</strong>\n                                <br />\n\n                                Website : <strong>{this.props.activePracticeData.website}</strong>\n                                <br />\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n\n\n                <h3 className=\"centeralign\">\n                    Patient Information \n                </h3>\n                <table>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>Personal Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\" style={{width: '30%'}}>Name</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Patient ID</td>\n                        <td>\n                            <div className=\"textfield\" />\n                            <span className=\"leftrightmargin_10\">(official use)</span>\n                        </td>\n                    </tr>\n                    <tr id=\"nationalid\" style={{display: \"none\"}}>\n                        <td className=\"rightalign\">\n                            <span id=\"nationalidlabel\" />\n                        </td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Mobile Number</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>Contact Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Email</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Land-line Number(s)</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Address</td>\n                        <td>\n                            <div className=\"textarea\" />\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h4>General Details</h4>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Gender</td>\n                        <td>\n                            <div className=\"radio\" />\n                            <label>Male </label>\n                            <div className=\"radio\" />\n                            <label>Female </label>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Blood Group</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"rightalign\">Date of Birth / Age</td>\n                        <td>\n                            <div className=\"textfield\" />\n                        </td>\n                    </tr>\n\n\n                </table>\n                <p>I hereby declare that the information provided above is true and correct to the best of my knowledge.\n                    I give consent to the performance of medical / surgical / anesthesia / diagnostic procedure /\n                    treatment to be performed upon myself at B.K. Arogyam & Research Pvt Ltd. I will pay in full any\n                    cost of treatment or insurance co-payments according to the office's financial policy. \n                </p>\n                <div className=\"date\">Date</div>\n                <div className=\"signature\">Patient's Signature</div>\n            </div>\n            </body>\n</html>\n)\n        return null;\n    }\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport {Form, Card, Row, Col,Popover, List,Button, DatePicker,TimePicker,Input,Select,Divider} from \"antd\";\nimport { tag } from \"postcss-selector-parser\";\nimport {\n    DATE_PICKER,\n    DATE_TIME_PICKER, DOCTORS_ROLE,\n    ERROR_MSG_TYPE,\n    INPUT_FIELD,\n    SELECT_FIELD,\n    TIME_PICKER\n} from \"../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../common/DynamicFieldsForm\";\nimport {APPOINTMENT_PERPRACTICE_API, BLOCK_CALENDAR, PRACTICESTAFF} from \"../../constants/api\";\nimport {displayMessage, getAPI, interpolate,postAPI} from \"../../utils/common\";\nimport { loadDoctors } from \"../../utils/clinicUtils\";\nimport {\n    CANCELLED_STATUS,\n    CHECKOUT_STATUS,\n    ENGAGED_STATUS,\n    SCHEDULE_STATUS,\n    WAITING_STATUS\n} from \"../../constants/hardData\";\nimport EventPatientPopover from \"./EventPatientPopover\";\nimport {REQUIRED_FIELD_MESSAGE} from \"../../constants/messages\";\n\nclass BlockCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            practiceDoctors: [],\n            blockedAppointmentParams: {\n                block_from:moment(),\n                block_to:moment(),\n            }\n        };\n        loadDoctors(this);\n    }\n\n    // componentDidMount() {\n    //\n    // }\n    changeParamsForBlockedAppointments = (type, value) => {\n        const that = this;\n        this.setState(function (prevState) {\n            return {\n                blockedAppointmentParams: {\n                    ...prevState.blockedAppointmentParams,\n                    [type]: value\n                }\n            }\n        }, function () {\n            // if (valueObj.block_from && valueObj.block_to)\n            that.retrieveBlockingAppointments();\n        })\n    }\n\n    retrieveBlockingAppointments = () => {\n        const that = this;\n        that.setState({\n            loading: true\n        });\n        const successFn = function (data) {\n            that.setState(function (prevState) {\n                return {\n                    blockingAppointments: data,\n                    loading: false\n                }\n            });\n        }\n        const errorFn = function () {\n            that.setState({\n                loading: false\n            })\n        }\n        if (this.state.blockedAppointmentParams.block_from && this.state.blockedAppointmentParams.block_to)\n            getAPI(interpolate(APPOINTMENT_PERPRACTICE_API, [this.props.active_practiceId]), successFn, errorFn, {\n                start: moment(that.state.blockedAppointmentParams.block_from).format('YYYY-MM-DD'),\n                end: moment(that.state.blockedAppointmentParams.block_to).format('YYYY-MM-DD'),\n                doctor:that.state.blockedAppointmentParams.doctor,\n            });\n    }\n\n    handleSubmit =(e)=>{\n        const that=this;\n        e.preventDefault();\n        let reqData={}\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                reqData = {...values,\n                    practice:this.props.active_practiceId,\n                    // block_from:moment(that.state.blockedAppointmentParams.block_from).format('YYYY-MM-DD'),\n                    // block_to:moment(that.state.blockedAppointmentParams.block_to).format('YYYY-MM-DD'),\n\n                };\n\n            }\n        });\n\n        const successFn =function(data){\n            if (that.props.history){\n                that.props.history.replace('/calendar');\n            }\n        };\n        const errorFn=function(){\n\n        };\n        postAPI(BLOCK_CALENDAR,reqData,successFn,errorFn)\n    };\n\n    render(){\n        const that = this;\n        const {getFieldDecorator} = this.props.form;\n\n        const formItemLayout = ({\n            labelCol: {span: 6},\n            wrapperCol: {span: 4},\n        });\n        //\n        // let doctorArray=this.state.practiceDoctors;\n        // let loginUser =that.props.user;\n        // const doctorId={};\n        // let flag=true;\n        // doctorArray.forEach(function (items) {\n        //     if (items.user.id == loginUser.id){\n        //         doctorId.id=that.loginUser.id;\n        //         flag=false;\n        //         return false;\n        //     }\n        // },function () {\n        //     doctorId.id=doctorArray[0].user.id\n        // });\n\n        return(\n<Card title=\"Block Calendar\">\n                <Row>\n                    <Col span={18}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"Block From\" {...formItemLayout}>\n                                {getFieldDecorator('block_from',{initialValue:moment(),rules: [{ required: true, message: REQUIRED_FIELD_MESSAGE }]})\n                                (<DatePicker showTime={{use12Hours: true}} format=\"YYYY-MM-DD hh:mm a\" allowClear={false} onChange={(value)=>this.changeParamsForBlockedAppointments('block_from',value)} />)}\n                            </Form.Item>\n\n                            <Form.Item label=\"Block To\" {...formItemLayout}>\n                                {getFieldDecorator('block_to',{initialValue:moment(),rules: [{ required: true, message: REQUIRED_FIELD_MESSAGE }],})\n                                (<DatePicker showTime={{ use12Hours: true }} format=\"YYYY-MM-DD hh:mm a\" allowClear={false} onChange={(value)=>this.changeParamsForBlockedAppointments('block_to',value)} />)}\n                            </Form.Item>\n\n                            <Form.Item label=\"Event Name\" {...formItemLayout}>\n                                {getFieldDecorator('event', {})\n                                (<Input placeholder=\"Event Name\" />)}\n                            </Form.Item>\n\n                            <Form.Item label=\"Doctor\" {...formItemLayout}>\n                                {getFieldDecorator('doctor', {initialValue:6})\n                                (<Select placeholder=\"Doctor List\" onChange={(value) => this.changeParamsForBlockedAppointments(\"doctor\", value)}>\n                                    {this.state.practiceDoctors.map((option) => (\n<Select.Option\n  value={option.id}\n  key={option.id}\n>{option.user.first_name}\n</Select.Option>\n))}\n                                 </Select>)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button style={{margin: 5}} type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                                {that.props.history ? (\n                                    <Button style={{margin: 5}} onClick={() => that.props.history.goBack()}>\n                                        Cancel\n                                    </Button>\n                                  ) : null}\n                            </Form.Item>\n\n                        </Form>\n                    </Col>\n\n                    <Col span={6}>\n                        <List\n                          size=\"small\"\n                          dataSource={this.state.blockingAppointments}\n                          renderItem={(apppointment) => (apppointment.status == CANCELLED_STATUS ? <div /> : (\n<List.Item\n  color=\"transparent\"\n  style={{padding: 0}}\n>\n                                <div\n                                  style={{\n                                        border: '1px solid #ddd',\n                                        borderRadius: '5px',\n                                        textDecoration: (apppointment.status == CANCELLED_STATUS ? 'line-through' : 'inherit'),\n                                        backgroundColor: (apppointment.status == CANCELLED_STATUS ? '#aaa' : '#eee'),\n                                        width: '100%',\n                                        marginTop: '2px',\n                                        borderLeft: `5px solid${  apppointment.doctor && that.state.practice_doctors && that.state.practice_doctors[apppointment.doctor] ? that.props.doctors_object[apppointment.doctor].calendar_colour : 'transparent'}`\n                                    }}\n                                >\n                                    <AppointmentCard\n                                      {...apppointment}\n                                      changeAppointmentStatus={this.changeAppointmentStatus}\n                                      {...this.props}\n                                    />\n                                </div>\n</List.Item>\n))}\n                        />\n                    </Col>\n                </Row>\n\n</Card>\n\n        )\n    }\n}\nexport default Form.create()(BlockCalendar);\n\nfunction AppointmentCard(appointment) {\n    return (\n<div style={{width: '100%'}}>\n\n        <p style={{marginBottom: 0}}>\n        <Divider type=\"vertical\" />\n            <Popover\n              placement=\"right\"\n              content={(\n<EventPatientPopover\n  appointmentId={appointment.id}\n  key={appointment.id}\n  {...appointment}\n/>\n)}\n            >\n            <span\n              style={{width: 'calc(100% - 60px)'}}\n            ><b>{moment(appointment.schedule_at).format(\"LLL\")}</b>&nbsp;\n                {appointment.patient.user.first_name}\n            </span>\n            <p style={{color:appointment.doctor_data ?appointment.doctor_data.calendar_colour:null}}><Divider type=\"vertical\" /><span>{appointment.doctor_data ? appointment.doctor_data.user.first_name:null}</span></p>\n            </Popover>\n        </p>\n</div>\n);\n}\n","import React from \"react\";\nimport {Layout, Spin, Button, Drawer, Row, Col, Form, Input, Divider, Modal} from \"antd\";\nimport {SUGGESTIONS} from \"../../constants/api\";\nimport {displayMessage, interpolate, postAPI} from \"../../utils/common\";\nimport {SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\n\nconst {TextArea} = Input;\n\nclass SuggestionBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n    }\n\n\n    onClose = () => {\n        const that = this;\n        that.props.close();\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const that = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                const reqData = {\n                    ...values,\n                }\n                const successFn = function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"Save Your Suggestions\");\n                    that.props.close();\n\n                }\n                const errorFn = function () {\n\n                }\n                postAPI(SUGGESTIONS, reqData, successFn, errorFn);\n            }\n\n        })\n    };\n\n    render() {\n        const that = this;\n        const {getFieldDecorator} = this.props.form;\n        return (\n<div>\n            <Modal\n              title=\"Your Suggestion\"\n              width={720}\n              onClose={this.onClose}\n              visible={that.props.visible}\n            >\n\n                <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item label=\"Name\">\n                                {getFieldDecorator('name', {\n                                    rules: [{required: true, message: 'Please enter  name'}],\n                                })(<Input placeholder=\"Please enter user name\" />)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Email\">\n                                {getFieldDecorator('email', {\n                                    rules: [{required: true, message: 'Please enter Email'}],\n                                })(\n                                    <Input\n                                      style={{width: '100%'}}\n                                      placeholder=\"Please enter Email\"\n                                    />,\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item label=\"Mobile\">\n                                {getFieldDecorator('mobile')\n                                (<Input placeholder=\"Please enter Mobile\" />)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"Subject\">\n                                {getFieldDecorator('subject')(\n                                    <Input\n                                      style={{width: '100%'}}\n                                      placeholder=\"Please enter Email\"\n                                    />,\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item label=\"Description\">\n                                {getFieldDecorator('description')\n                                (<TextArea\n                                  placeholder=\"Please enter description\"\n                                  autosize={{minRows: 4, maxRows: 6}}\n                                />)}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <div\n                      style={{\n                            textAlign: '-webkit-center',\n                        }}\n                    >\n                        <Button onClick={this.onClose} style={{marginRight: 8}}>\n                            Cancel\n                        </Button>\n                        <Button htmlType=\"submit\" onSubmit={this.handleSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n\n            </Modal>\n</div>\n)\n\n    }\n}\n\nexport default Form.create()(SuggestionBox);\n","import React from \"react\";\nimport {Button, Result} from \"antd\";\nimport {logErrorToSlackChannel} from \"./utils/crashHandlingUtils\";\n\nexport default class ErrorBoundary extends React.Component {\n    static getDerivedStateFromError() {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n\n        logErrorToSlackChannel(error, errorInfo);\n    }\n\n    redirectToHome = () => {\n        window.location.replace(\"/\");\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n<Result\n  status=\"500\"\n  title=\"500\"\n  subTitle=\"Sorry, something went wrong.\"\n  extra={<Button type=\"primary\" onClick={this.redirectToHome}>Back Home</Button>}\n/>\n);\n        }\n\n        return this.props.children;\n    }\n}\n","import moment from \"moment\";\nimport {postOuterAPI} from \"../../app/utils/common\";\nimport CONFIG from \"../../app.config\";\nimport {loggedInUser} from \"../../app/utils/auth\";\n\nexport const logErrorToSlackChannel = function (error, errorInfo) {\n    const crashData = {\n        \"text\": error.toString(),\n        \"attachments\": [\n            {\n                \"color\": \"#36a64f\",\n                \"author_name\": window.location.hostname,\n                \"author_link\": \"http://flickr.com/bobby/\",\n                \"author_icon\": `${window.location.hostname  }/favicon.ico`,\n                \"title\": \"BK ERP Admin Application Crash Error\",\n                text: errorInfo.componentStack,\n                \"fields\": [\n                    {\n                        \"title\": \"Priority\",\n                        \"value\": \"High\",\n                        \"short\": false\n                    }, {\n                        \"title\": \"Domain\",\n                        \"value\": window.location.hostname,\n                        \"short\": false\n                    }, {\n                        \"title\": \"Path\",\n                        \"value\": window.location.pathname,\n                        \"short\": false\n                    }, {\n                        \"title\": \"User\",\n                        \"value\": loggedInUser(),\n                        \"short\": false\n                    }\n                ],\n                \"ts\": moment().format('X')\n            }\n        ]\n    }\n    const successFn = function () {\n        // eslint-disable-next-line\n        console.log(\"The above error has been notified to devs.\");\n    }\n    const errorFn = function () {\n        // eslint-disable-next-line\n        console.log(\"The above error notifications failed\");\n    }\n    if ((CONFIG.prodDomain && CONFIG.crashHandling.slack.sendOnProduction && CONFIG.prodDomain.indexOf(window.location.hostname) > -1) || CONFIG.crashHandling.slack.sendOnDevelopment) {\n        postOuterAPI(CONFIG.crashHandling.slack.webHookUrl, crashData, successFn, errorFn, {\n            'Content-type': 'application/x-www-form-urlencoded'\n        });\n    }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Layout, Spin, Button} from \"antd\";\nimport loadable from '@loadable/component';\nimport AppHeader from \"./AppHeader\";\nimport AppSider from \"./AppSider\";\nimport {loadUserDetails, loggedInactivePractice, loggedInUserPractices, setCurrentPractice} from \"../../utils/auth\";\nimport Error404 from \"../common/errors/Error404\";\nimport Profile from \"../auth/Profile\";\nimport PrintPatientForm from \"../patients/patient/PrintPatientForm\";\nimport BlockCalendar from \"../calendar/BlockCalendar\";\nimport PermissionDenied from \"../common/errors/PermissionDenied\";\nimport SuggestionBox from \"./SuggestionBox\";\nimport ErrorBoundary from \"../../../crashHandling/ErrorBoundary\";\n\nconst WebCall = loadable(() => import('../conference/WebCall'));\nconst Calendar = loadable(() => import('../calendar/Calendar'));\nconst ReportsHome = loadable(() => import('../reports/ReportsHome'));\nconst WebAdminHome = loadable(() => import('../webAdmin/WebAdminHome'));\nconst InventoryHome = loadable(() => import('../inventory/InventoryHome'));\nconst MeetingBooking = loadable(() => import('../conference/meeting/MeetingBooking'));\nconst SettingsDash = loadable(() => import('../settings/SettingsDash'));\nconst PatientHome = loadable(() => import('../patients/PatientHome'));\n\nclass AppBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            active_practiceId: loggedInactivePractice(),\n            practiceList: loggedInUserPractices(),\n            activePracticeData: null,\n            activePracticePermissions: {},\n            specialisations: null,\n            allowAllPermissions: false,\n            loadingPermissions: false,\n            visible: false,\n\n        };\n        this.activeData = this.activeData.bind(this);\n        // this.clinicData = this.clinicData.bind(this);\n        this.switchPractice = this.switchPractice.bind(this);\n\n\n    }\n\n    componentDidMount() {\n        this.activeData();\n\n    }\n\n\n    toggleSider = (option) => {\n        this.setState({\n            collapsed: !!option,\n        });\n    }\n\n    activeData() {\n        const that = this;\n        const successFn = function (data) {\n            that.setState(function (prevState) {\n                const permissions = {};\n                data.practice_permissions.forEach(function (permission) {\n                    permissions[permission.codename] = permission;\n                });\n                data.global_permissions.forEach(function (permission) {\n                    permissions[permission.codename] = permission;\n                });\n                return {\n                    activePracticePermissions: permissions,\n                    loadingPermissions: false,\n                    practiceList: loggedInUserPractices(),\n                }\n            }, function () {\n                // that.clinicData();\n            });\n        }\n        const errorFn = function () {\n            that.setState({\n                loadingPermissions: false\n            })\n        }\n\n        that.setState(function (prevState) {\n            let activePracticeObj = null;\n            prevState.practiceList.forEach(function (practiceObj) {\n                if (practiceObj.practice.id == prevState.active_practiceId) {\n                    activePracticeObj = practiceObj.practice\n                }\n            });\n            if (activePracticeObj || !prevState.practiceList.length)\n                return {\n                    activePracticeData: activePracticeObj,\n                    loadingPermissions: true\n                }\n            setCurrentPractice(prevState.practiceList[0].practice.id);\n            return {\n                activePracticeData: prevState.practiceList[0].practice,\n                active_practiceId: prevState.practiceList[0].practice.id,\n                loadingPermissions: true\n            }\n        }, function () {\n            loadUserDetails(that.state.active_practiceId, successFn, errorFn);\n        })\n\n\n    }\n\n    switchPractice(practiceId) {\n        const that = this;\n        that.setState(function (prevState) {\n            return {\n                active_practiceId: practiceId,\n            }\n        }, function () {\n            setCurrentPractice(practiceId);\n            that.activeData();\n        });\n\n\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    render() {\n        const that = this;\n\n        if (this.state.loadingPermissions) {\n            return (\n                <Spin spinning={this.state.loadingPermissions} tip=\"Loading Permissions....\">\n                    <div style={{width: '100vw', height: '100vh'}} />\n                </Spin>\n            )\n        }\n        return (\n            <Layout style={{minHeight: '100vh'}}>\n                <ErrorBoundary>\n                    <div style={{\n                        position: 'fixed', right: '29px',\n                        bottom: '23px', zIndex: '20'\n                    }}\n                    >\n                        <Button type=\"primary\" shape=\"circle\" icon=\"mail\" size=\"large\" onClick={this.showDrawer} />\n                    </div>\n                    <Switch>\n                        <Route\n                          path=\"/patients/patientprintform\"\n                          render={(route) => <PrintPatientForm {...this.state} key={that.state.active_practiceId} />}\n                        />\n                        <Route\n                          exact\n                          path=\"/webcall/:meetingId\"\n                          render={(route) => <WebCall {...this.state} {...this.props} {...route} />}\n                        />\n                        <Route>\n                            <Layout>\n                                <AppSider\n                                  toggleSider={this.toggleSider}\n                                  {...this.state}\n                                  key={that.state.active_practiceId}\n                                  {...this.props}\n                                />\n                                <Layout>\n                                    <AppHeader\n                                      {...this.props}\n                                      {...this.state}\n                                      switchPractice={this.switchPractice}\n                                      toggleSider={this.toggleSider}\n                                    />\n                                    <Switch>\n\n                                        {this.state.activePracticePermissions.WebAdmin ? (\n                                                <Route\n                                                  path=\"/web\"\n                                                  render={(route) => (\n                                                        <WebAdminHome\n                                                          {...this.state}\n                                                          {...this.props}\n                                                          {...route}\n                                                          key={that.state.active_practiceId}\n                                                        />\n                                                    )}\n                                                />\n                                            )\n                                            : null}\n\n                                        <Route\n                                          exact\n                                          path=\"/calendar/blockcalendar\"\n                                          render={(route) => (that.state.activePracticePermissions.BlockCalendar || that.state.allowAllPermissions ?\n                                                <BlockCalendar {...this.state} {...this.props} {...route} /> :\n                                                <PermissionDenied />)}\n                                        />\n                                        <Route\n                                          path=\"/calendar\"\n                                          render={(route) => (that.state.activePracticePermissions.ViewCalendar ? (\n                                                <Calendar\n                                                  {...that.state}\n                                                  {...that.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                />\n                                            ) : <PermissionDenied />)}\n                                        />\n                                        <Route\n                                          path=\"/patient/:id\"\n                                          render={(route) => (\n                                                <PatientHome\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={`${that.state.active_practiceId}|${route.match.params.id}`}\n                                                />\n                                            )}\n                                        />\n\n                                        <Route\n                                          path=\"/settings\"\n                                          render={(route) => (\n                                                <SettingsDash\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                  refreshClinicData={this.activeData}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                          path=\"/inventory\"\n                                          render={(route) => (\n                                                <InventoryHome\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                          path=\"/reports/:type\"\n                                          render={(route) => (\n                                                <ReportsHome\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                />\n                                            )}\n                                        />\n\n                                        <Route\n                                          path=\"/profile\"\n                                          render={(route) => (\n                                                <Profile\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                />\n                                            )}\n                                        />\n\n                                        <Route\n                                          path=\"/meeting-booking\"\n                                          render={(route) => (this.state.activePracticePermissions.ViewMeeting || this.state.allowAllPermissions ? (\n                                                    <MeetingBooking\n                                                      {...this.state}\n                                                      {...this.props}\n                                                      {...route}\n                                                      key={that.state.active_practiceId}\n                                                    />\n                                                ) :\n                                                <PermissionDenied />)}\n                                        />\n                                        {/* <Route path=\"/alternate-medicine\" render={(route)=>(this.state.activePracticePermissions.ManageMedicineConversion || this.state.allowAllPermissions? */}\n                                        {/*    <AlternateMedicineHome  {...this.state} {...this.props} {...route} */}\n                                        {/*                     key={that.state.active_practiceId}/>:<PermissionDenied/>)}/> */}\n\n                                        {this.state.activePracticePermissions.ViewCalendar ? (\n                                            <Route\n                                              exact\n                                              path=\"/\"\n                                              render={(route) => (\n                                                    <Calendar\n                                                      {...this.state}\n                                                      {...this.props}\n                                                      {...route}\n                                                      key={that.state.active_practiceId}\n                                                    />\n                                                )}\n                                            />\n                                        ) : null}\n\n\n                                        <Route\n                                          path=\"/\"\n                                          render={(route) => (\n                                                <PatientHome\n                                                  {...this.state}\n                                                  {...this.props}\n                                                  {...route}\n                                                  key={that.state.active_practiceId}\n                                                />\n                                            )}\n                                        />\n\n\n                                        <Route component={Error404} />\n\n                                    </Switch>\n                                    {/* <AppFooter/> */}\n                                </Layout>\n                            </Layout>\n                        </Route>\n                    </Switch>\n                    <SuggestionBox {...this.state} close={this.onClose} />\n                </ErrorBoundary>\n            </Layout>\n        );\n    }\n}\n\nexport default AppBase;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Menu, Modal} from 'antd';\nimport {CONFIG_API, MAILING_USERS_LIST, PRACTICESTAFF} from \"../constants/api\";\nimport {displayMessage, getAPI, interpolate} from \"./common\";\nimport {DOCTORS_ROLE, ERROR_MSG_TYPE} from \"../constants/dataKeys\";\nimport {MAIL_SEND_ERROR_MSG, MAIL_SEND_MSG, SUCCESS} from \"../constants/messages\";\n\nconst { confirm } = Modal;\nexport const loadDoctors = function (that) {\n    const successFn = function (data) {\n        const doctor = [];\n        let selectedDoctor = {};\n        data.staff.forEach(function (usersdata) {\n\n            if (usersdata.role.indexOf(parseInt(DOCTORS_ROLE)) > -1 || usersdata.role.indexOf(DOCTORS_ROLE) > -1) {\n                doctor.push(usersdata);\n                if (that.props.user.id == usersdata.user.id) {\n                    selectedDoctor = usersdata;\n                }\n            }\n        });\n        that.setState({\n            practiceDoctors: doctor,\n            selectedDoctor: (doctor.length && !selectedDoctor.id ? doctor[0] : selectedDoctor)\n        });\n    };\n    const errorFn = function () {\n    };\n    getAPI(interpolate(PRACTICESTAFF, [that.props.active_practiceId]), successFn, errorFn);\n}\n\nexport const patientSettingMenu = (\n<Menu>\n        <Menu.Item key=\"1\">\n            <Link to=\"/settings/prescriptions\">\n                Add/Edit Drugs\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n            <Link to=\"/settings/procedures\">\n                Add/Edit Procedures\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n            <Link to=\"/settings/emr#treatmentnotes\">\n                Add/Edit Clinical Notes\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n            <Link to=\"/settings/printout\">\n                Modify EMR/Billing Printout\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n            <Link to=\"/settings/billing#taxcatalog\">\n                Add/Edit taxes\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"6\">\n            <Link to=\"/settings/billing#paymentmodes\">\n                Add/Edit Payment Modes\n            </Link>\n        </Menu.Item>\n</Menu>\n);\n\nexport const hashCode = function (str) { // java String#hashCode\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 6) - hash);\n        hash = (hash >> 6) + hash\n    }\n    return hash;\n}\n\nexport const intToRGB = function (i) {\n    const c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nexport const loadConfigParameters = function (that, params = []) {\n    const successFn = function (data) {\n        that.setState({\n            ...data\n        });\n    };\n    const errorFn = function () {\n\n    };\n    const parameters = params.join(',');\n    getAPI(CONFIG_API, successFn, errorFn, {parameters});\n}\n\nexport const loadMailingUserListForReportsMail = function (that) {\n    const successFn = function (data) {\n        that.setState({\n            mailingUsersList: data\n        })\n    }\n    const errorFn = function () {\n\n    }\n    getAPI(MAILING_USERS_LIST, successFn, errorFn)\n}\n\nexport const sendReportMail = function(url,params,successMsg, errorMsg){\n    confirm({\n        title: 'Are you sure send mail?',\n        content: `Email Id :${ params.mail_to}`,\n        okText: 'Yes',\n        okType: 'danger',\n        cancelText: 'No',\n        onOk() {\n            const successFn = function (){\n                if (successMsg){\n                    displayMessage(SUCCESS,`${MAIL_SEND_MSG  }to${ params.mail_to}`)\n                }\n\n            }\n            const errorFn = function (){\n                if (errorMsg){\n                    displayMessage(ERROR_MSG_TYPE,MAIL_SEND_ERROR_MSG)\n                }\n\n\n            }\n            getAPI(url,successFn,errorFn,params);\n        },\n        onCancel() {\n        },\n    });\n\n}\n\nexport const sendMail= function (url, params) {\n\n    const successFn = function (){\n\n    };\n    const errorFn = function (){\n\n    };\n    getAPI(url,successFn,errorFn,params);\n}\n","import React from \"react\";\nimport {\n    Button,\n    Checkbox,\n    DatePicker,\n    Divider,\n    Form,\n    Icon,\n    Input,\n    InputNumber,\n    message,\n    Modal,\n    Radio,\n    Select,\n    Tag,\n    TimePicker,\n    Upload,\n    Avatar,\n} from \"antd\";\nimport moment from \"moment\";\nimport SwatchesPicker from 'react-color/lib/Swatches';\nimport WebCamField from \"./WebCamField\";\nimport {Editor} from 'react-draft-wysiwyg';\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport {ContentState, convertToRaw, EditorState} from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport {EXTRA_DATA, FILE_UPLOAD_API, FILE_UPLOAD_BASE64} from \"../../constants/api\";\nimport {displayMessage, getAPI, makeFileURL, makeURL, postAPI, putAPI} from \"../../utils/common\";\nimport {REQUIRED_FIELD_MESSAGE} from \"../../constants/messages\";\nimport {\n    CHECKBOX_FIELD,\n    CITY_FIELD,\n    COLOR_PICKER,\n    COUNTRY_FIELD,\n    DATE_PICKER,\n    DATE_TIME_PICKER,\n    DIVIDER_FIELD,\n    EMAIL_FIELD,\n    INPUT_FIELD, LABEL_FIELD,\n    MAIL_TEMPLATE_FIELD,\n    MULTI_IMAGE_UPLOAD_FIELD,\n    MULTI_SELECT_FIELD,\n    NUMBER_FIELD,\n    PASSWORD_FIELD,\n    QUILL_TEXT_FIELD,\n    RADIO_FIELD,\n    SELECT_FIELD,\n    SINGLE_CHECKBOX_FIELD,\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    SMS_FIELD,\n    STATE_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD,\n    TIME_PICKER\n} from \"../../constants/dataKeys\";\n\nconst {TextArea} = Input;\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst CheckboxGroup = Checkbox.Group;\n\n\nclass DynamicFieldsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: this.props.fields, // Fields data to create the form\n            formData: {},\n            formProp: {authorisation: true, ...this.props.formProp},    // Form data to send on form submission\n            disabled: false,\n            loading: false,\n            countryOptions: [],\n            stateOptions: [],\n            cityOptions: [],\n            smsFields: {},\n            urlInitialValues: {},\n            webCamState: {},\n            editorState: {}\n        }\n        this.resetFormData = this.resetFormData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.colorChange = this.colorChange.bind(this);\n        this.loadCountryData = this.loadCountryData.bind(this);\n        this.addSMSTag = this.addSMSTag.bind(this);\n        // this.onFormFieldDataChange = this.onFormFieldDataChange.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n    }\n\n    fieldDecorators = (field, formData) => {\n        const {urlInitialValues} = this.state;\n        if (field.type == MULTI_SELECT_FIELD) {\n            return {\n                initialValue: formData[field.key] ? formData[field.key] : (urlInitialValues[field.key] ? urlInitialValues[field.key] : formData[field.key]),\n                rules: [{\n                    required: field.required,\n                    message: REQUIRED_FIELD_MESSAGE,\n                    type: 'array'\n                }]\n            }\n        }\n\n        return {\n            initialValue: formData[field.key] ? formData[field.key] : (urlInitialValues[field.key] ? urlInitialValues[field.key] : formData[field.key]),\n            rules: [{\n                required: field.required,\n                message: REQUIRED_FIELD_MESSAGE\n            }]\n        }\n    }\n\n    componentDidMount() {\n        const that = this;\n        this.resetFormData();\n        this.props.fields.forEach(function (field) {\n            if (field.type == COUNTRY_FIELD) {\n                that.loadCountryData();\n            }\n        });\n        if (this.props.history && this.props.history.location.search) {\n            const pairValueArray = this.props.history.location.search.substr(1).split('&');\n            if (pairValueArray.length) {\n                const urlInitialValue = {};\n                pairValueArray.forEach(function (item) {\n                    const keyValue = item.split('=');\n                    if (keyValue && keyValue.length == 2) {\n                        if (!isNaN(keyValue[1]) && keyValue[1].toString().indexOf('.') != -1) {\n                            urlInitialValue[keyValue[0]] = parseFloat(keyValue[1]);\n                        } else if (!isNaN(keyValue[1])) {\n                            urlInitialValue[keyValue[0]] = parseInt(keyValue[1]);\n                        } else {\n                            urlInitialValue[keyValue[0]] = keyValue[1];\n                        }\n                    }\n                });\n                this.setState({\n                    urlInitialValues: urlInitialValue\n                })\n            }\n        }\n    }\n\n    resetFormData() {\n        const formData = {};\n        this.state.fields.forEach(function (field) {\n            formData[field.key] = field.initialValue\n        });\n        this.setState({\n            formData\n        })\n    }\n\n    // onFormFieldDataChange() {\n    //     if (this.props.formProp.onFieldsDataChange) {\n    //         let values = this.props.form.getFieldsValue();\n    //         console.log(values);\n    //         this.props.formProp.onFieldsDataChange(values);\n    //     }\n    // }\n\n    handleSubmit = (e) => {\n        const that = this;\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                if (this.props.defaultValues) {\n                    this.props.defaultValues.forEach(function (object) {\n                        // values[object.key] = object.value;\n                        values = {[object.key]: object.value, ...values}\n                    })\n                }\n                if (this.state.colorPickerKey) {\n                    values[this.state.colorPickerKey] = this.state.colorPickerColor;\n                }\n                that.props.fields.forEach(function (formFields) {\n                    if (formFields.type == SINGLE_IMAGE_UPLOAD_FIELD) {\n                        const {key} = formFields;\n                        if (values[key] && values[key].file && values[key].file.response)\n                            values[key] = values[key].file.response.image_path;\n                        else\n                            values[key] = formFields.initialValue;\n                    } else if (formFields.type == MULTI_IMAGE_UPLOAD_FIELD) {\n                        const {key} = formFields;\n                        if (values[key] && values[key].file && values[key].file.response)\n                            values[key] = values[key].fileList.map(file => file.response.id);\n                        else\n                            values[key] = formFields.initialValue;\n                    } else if (formFields.type == TIME_PICKER || formFields.type == DATE_PICKER || formFields.type == DATE_TIME_PICKER) {\n                        const {key} = formFields;\n                        if (formFields.format) {\n                            values[key] = moment(values[key]).isValid() ? moment(values[key]).format(formFields.format) : null;\n                        }\n                    } else if (formFields.type == QUILL_TEXT_FIELD) {\n                        const {key} = formFields;\n                        values[key] = that.state.editorState[key] ? draftToHtml(convertToRaw(that.state.editorState[key].getCurrentContent())) : formFields.initialValue;\n                    }\n                });\n                if (that.state.formProp.beforeSend) {\n                    values = that.state.formProp.beforeSend(values);\n                }\n                if (that.state.formProp.confirm) {\n                    Modal.confirm({\n                        title: that.state.formProp.confirmText || \"Are you sure to submit?\",\n                        onOk () {\n                            that.submitForm(values);\n                        },\n                        onCancel () {\n\n                        }\n                    })\n                } else {\n                    that.submitForm(values);\n                }\n\n            }\n        });\n    }\n\n    submitForm(data) {\n        const that = this;\n        this.setState({\n            disabled: true,\n            loading: true,\n        });\n        const successFn = function (data) {\n            that.state.formProp.successFn(data);\n            that.setState({\n                disabled: false,\n                loading: false,\n            });\n            if (that.props.changeRedirect) {\n                that.props.changeRedirect();\n            }\n        };\n        const errorFn = function () {\n            that.state.formProp.errorFn();\n            that.setState({\n                disabled: false,\n                loading: false,\n            });\n        };\n        const headers = {};\n        if (!that.state.formProp.authorisation) {\n            headers.Authorization = undefined;\n        }\n        if (this.props.formProp.method == \"post\") {\n            postAPI(this.props.formProp.action, data, successFn, errorFn, {...headers});\n        } else if (this.props.formProp.method == \"put\") {\n            putAPI(this.props.formProp.action, data, successFn, errorFn, {...headers});\n        }\n    }\n\n    colorChange(color, key) {\n        const that = this;\n        this.setState({\n            colorPickerKey: key,\n            colorPickerColor: color.hex,\n        }, function () {\n            that.props.form.setFieldsValue({[key]: color.hex})\n        });\n    }\n\n    setAddressField(type, value) {\n        if (type == 'country') {\n            this.setState(function (prevState) {\n                let states = []\n                prevState.countryOptions.forEach(function (country) {\n                    if (country.id == value) {\n                        states = country.states\n                    }\n                })\n                return {stateOptions: states}\n            })\n        } else {\n            this.setState(function (prevState) {\n                let cities = [];\n                prevState.stateOptions.forEach(function (state) {\n                    if (state.id == value) {\n                        cities = state.cities\n                    }\n                })\n                return {cityOptions: cities}\n            })\n        }\n    }\n\n    loadCountryData() {\n        const that = this;\n        const successFn = function (data) {\n            that.setState({\n                countryOptions: data.country,\n            })\n        };\n        const errorFn = function () {\n        };\n        getAPI(EXTRA_DATA, successFn, errorFn);\n    }\n\n    addSMSTag(key, value) {\n        const that = this;\n        const prevValue = that.props.form.getFieldValue(key) || '';\n        that.props.form.setFieldsValue({\n            [key]: prevValue + value\n        });\n    }\n\n    addMailTemplateTag = (key, value) => {\n        const that = this;\n        this.setState(function (prevState) {\n            let currentHtml = prevState.editorState[key] ? draftToHtml(convertToRaw(prevState.editorState[key].getCurrentContent())) : '';\n            currentHtml += value;\n            return {\n                editorState: {\n                    ...prevState.editorState,\n                    [key]: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(currentHtml)))\n                }\n            }\n        })\n    }\n\n    toggleWebCam = (type, value) => {\n        this.setState(function (prevState) {\n            return {\n                webCamState: {...prevState.webCamState, [type]: value}\n            }\n        })\n    }\n\n    getImageandUpload = (fieldKey, image) => {\n        const that = this;\n        const reqData = new FormData();\n\n        reqData.append('image', image);\n        reqData.append('name', 'file');\n\n        const successFn = function (data) {\n            that.props.form.setFieldsValue({[fieldKey]: {file: {response: data}}});\n            displayMessage(SUCCESS_MSG_TYPE, \"Image Captured and processed.\");\n            that.setState(function (prevState) {\n                return {\n                    webCamState: {...prevState.webCamState, [fieldKey]: false}\n                }\n            })\n        }\n        const errorFn = function () {\n\n        }\n        postAPI(FILE_UPLOAD_BASE64, reqData, successFn, errorFn, {\n            'content-type': 'multipart/form-data'\n        });\n\n    }\n\n    onEditorStateChange = (key, editorState) => {\n        this.setState(function (prevState) {\n            return {\n                editorState: {...prevState.editorState, [key]: editorState}\n\n            }\n        });\n    };\n\n    render() {\n        const that = this;\n        const formItemLayout = (this.props.formLayout ? this.props.formLayout : {\n            labelCol: {span: 8},\n            wrapperCol: {span: 14},\n        });\n        const {getFieldDecorator} = this.props.form;\n        return (\n<div>\n            <Form onSubmit={this.handleSubmit}>\n                {this.props.title ? <h2>{this.props.title}</h2> : null}\n                {this.state.fields ? this.state.fields.map(function (field) {\n                    switch (field.type) {\n                        case PASSWORD_FIELD:\n                            return (\n<Form.Item\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Input\n                                      prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />}\n                                      type=\"password\"\n                                      placeholder={field.placeholder}\n                                      onChange={(e) => function () {\n                                               if (field.onChange)\n                                                   field.onChange(e)\n                                           }}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    />\n                                )}\n</Form.Item>\n);\n                        case INPUT_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Input\n                                      placeholder={field.placeholder}\n                                      onChange={(e) => function () {\n                                               if (field.onChange)\n                                                   field.onChange(e)\n                                           }}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    />\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n</FormItem>\n);\n                        case SELECT_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select\n                                      placeholder={field.placeholder}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                      mode={field.mode ? field.mode : \"default\"}\n                                    >\n                                        {field.options.map((option) => (\n<Select.Option\n  value={option.value}\n>{option.label}\n</Select.Option>\n))}\n                                    </Select>\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n</FormItem>\n);\n                        case MULTI_SELECT_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, {...that.fieldDecorators(field, that.state.formData)})(\n                                    <Select\n                                      mode=\"multiple\"\n                                      placeholder={field.placeholder}\n                                      showSearch={field.showSearch ? field.showSearch : null}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    >\n                                        {field.options.map((option) => (\n<Select.Option\n  value={option.value}\n>{option.label}\n</Select.Option>\n))}\n                                    </Select>\n                                )}\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n</FormItem>\n);\n                        case RADIO_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <RadioGroup disabled={field.disabled ? field.disabled : that.state.disabled}>\n                                        {field.options.map((option) => (\n<Radio\n  value={option.value}\n>{option.label}\n</Radio>\n))}\n                                    </RadioGroup>\n                                )}\n</FormItem>\n);\n                        case CHECKBOX_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <CheckboxGroup\n                                      options={field.options}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    />\n                                )}\n</FormItem>\n);\n                        case SINGLE_CHECKBOX_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, {\n                                        valuePropName: 'checked',\n                                        initialValue: field.initialValue\n                                    },\n                                    {\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <Checkbox\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    >{field.follow}\n                                    </Checkbox>\n                                )}\n</FormItem>\n);\n                        case NUMBER_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <InputNumber\n                                      min={field.min}\n                                      max={field.max}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                    />\n                                )}\n                                <span className=\"ant-form-text\">{field.follow}</span>\n</FormItem>\n);\n                        case DATE_PICKER:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key,\n                                    {\n                                        initialValue: field.initialValue ? moment(field.initialValue) : null,\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <DatePicker format={field.format} allowClear={false} />\n                                )}\n</FormItem>\n);\n                        case DATE_TIME_PICKER:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key,\n                                    {initialValue: field.initialValue ? moment(field.initialValue) : null},\n                                    {\n                                        rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                    })(\n                                    <DatePicker\n                                      format={field.format}\n                                      showTime\n                                      onChange={(e) => (field.onChange ?\n                                        field.onChange(e) :\n                                        function () {\n                                        })}\n                                    />\n                                )}\n</FormItem>\n);\n                        case TEXT_FIELD:\n                            return (\n<div key={field.key}>\n                                <FormItem key={field.key} label={field.label} {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                        <TextArea\n                                          autosize={{minRows: field.minRows, maxRows: field.maxRows}}\n                                          placeholder={field.placeholder}\n                                          disabled={field.disabled ? field.disabled : that.state.disabled}\n                                          onChange={that.inputChange}\n                                        />\n                                    )}\n\n                                </FormItem>\n</div>\n);\n                        case SMS_FIELD:\n                            return (\n<div>\n                                <FormItem key={field.key} label={field.label} {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                        <TextArea\n                                          autosize={{minRows: field.minRows, maxRows: field.maxRows}}\n                                          placeholder={field.placeholder}\n                                          disabled={field.disabled ? field.disabled : that.state.disabled}\n                                        />\n                                    )}\n                                    {field.options && field.options.map(item => (\n                                        <Tag\n                                          color=\"#108ee9\"\n                                          onClick={() => that.addSMSTag(field.key, item.value)}\n                                        >{item.label}\n                                        </Tag>\n                                      ))}\n                                </FormItem>\n</div>\n);\n                        case MAIL_TEMPLATE_FIELD:\n                            return (\n<div>\n                                <FormItem key={field.key} label={field.label} {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, {\n                                        initialValue: (field.initialValue && field.initialValue.length ? field.initialValue : ''),\n                                        rules: [{\n                                            required: field.required,\n                                            message: REQUIRED_FIELD_MESSAGE\n                                        }]\n                                    })(\n                                        <div style={{border: '1px solid #eee'}}>\n                                            <Editor\n                                              editorState={(that.state.editorState[field.key] ? that.state.editorState[field.key] : (field.initialValue ? EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(field.initialValue))) : EditorState.createEmpty()))}\n                                              onEditorStateChange={(editorState) => that.onEditorStateChange(field.key, editorState)}\n                                            />\n                                            {/* // <ReactQuill theme=\"snow\" placeholder={field.placeholder}/> */}\n                                        </div>\n                                    )}\n                                    {field.options && field.options.map(item => (\n                                        <Tag\n                                          color=\"#108ee9\"\n                                          onClick={() => that.addMailTemplateTag(field.key, item.value)}\n                                        >{item.label}\n                                        </Tag>\n                                      ))}\n                                    {field.preview ? (\n<div>\n                                        <Divider>Preview</Divider>\n                                        <div\n                                          style={{maxHeight: 200, overflowY: 'scroll'}}\n                                          dangerouslySetInnerHTML={{__html: `${that.state.editorState[field.key] ? draftToHtml(convertToRaw(that.state.editorState[field.key].getCurrentContent())) : field.initialValue}` || ''}}\n                                        />\n                                        <Divider />\n</div>\n) : null}\n                                    {/* <div dangerouslySetInnerHTML={{__html: field.initialValue}}/> */}\n                                </FormItem>\n</div>\n);\n                        case QUILL_TEXT_FIELD:\n                            return (\n<div>\n                                <FormItem key={field.key} label={field.label} {...formItemLayout} extra={field.extra}>\n                                    {getFieldDecorator(field.key, {\n                                        initialValue: (field.initialValue && field.initialValue.length ? field.initialValue : ''),\n                                        rules: []\n                                    })(\n                                        <div style={{border: '1px solid #eee'}}>\n                                            <Editor\n                                              editorState={(that.state.editorState[field.key] ? that.state.editorState[field.key] : (field.initialValue ? EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(field.initialValue))) : EditorState.createEmpty()))}\n                                              onEditorStateChange={(editorState) => that.onEditorStateChange(field.key, editorState)}\n                                            />\n                                            {/* // <ReactQuill theme=\"snow\" placeholder={field.placeholder}/> */}\n                                        </div>\n                                    )}\n                                    {field.preview ? (\n<div>\n                                        <Divider>Preview</Divider>\n                                        <div\n                                          style={{maxHeight: 200, overflowY: 'scroll'}}\n                                          dangerouslySetInnerHTML={{__html: `${that.state.editorState[field.key] ? draftToHtml(convertToRaw(that.state.editorState[field.key].getCurrentContent())) : field.initialValue}` || ''}}\n                                        />\n                                        <Divider />\n</div>\n) : null}\n                                    {/* <div dangerouslySetInnerHTML={{__html: field.initialValue}}/> */}\n                                </FormItem>\n</div>\n);\n                        case TIME_PICKER:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, {\n                                    initialValue: field.initialValue ? moment(field.initialValue, field.format) : null,\n                                    rules: [{required: field.required, message: REQUIRED_FIELD_MESSAGE}],\n                                })(\n                                    <TimePicker format={field.format} />\n                                )}\n</FormItem>\n);\n                        case COLOR_PICKER:\n                            return (\n<FormItem\n  key={field.key}\n  label={field.label}\n  {...formItemLayout}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <div>\n                                        <SwatchesPicker\n                                          style={{width: '100%'}}\n                                          onChange={(color) => that.colorChange(color, field.key)}\n                                        />\n                                        {that.state.colorPickerKey ? (\n<div style={{\n                                            margin: '10px',\n                                            backgroundColor: that.state.colorPickerColor,\n                                            height: '40px',\n                                            width: '40px'\n                                        }}\n/>\n) : (that.state.formData[field.key] ? (\n<div style={{\n                                            margin: '10px',\n                                            backgroundColor: that.state.formData[field.key],\n                                            height: '40px',\n                                            width: '40px'\n                                        }}\n/>\n) : null)}\n                                    </div>\n                                )}\n</FormItem>\n);\n                        case SINGLE_IMAGE_UPLOAD_FIELD:\n                            const singleUploadprops = {\n                                name: 'image',\n                                data: {\n                                    name: 'hello'\n                                },\n                                action: makeURL(FILE_UPLOAD_API),\n                                headers: {\n                                    authorization: 'authorization-text',\n                                },\n                                onChange(info) {\n                                    if (info.file.status !== 'uploading') {\n                                    }\n                                    if (info.file.status === 'done') {\n                                        message.success(`${info.file.name} file uploaded successfully`);\n                                    } else if (info.file.status === 'error') {\n                                        message.error(`${info.file.name} file upload failed.`);\n                                    }\n                                },\n                            };\n                            return (\n<Form.Item key={field.key} {...formItemLayout} label={field.label}>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData), {valuePropName: field.key,})(\n                                    <Upload {...singleUploadprops}>\n                                        <Button>\n                                            <Icon type=\"upload\" /> Select File\n                                        </Button>\n                                        {field.initialValue ?\n                                            // <img src={makeFileURL(field.initialValue)}\n                                            //      style={{maxWidth: '100%'}}/> \n                                            <Avatar size={64} src={makeFileURL(field.initialValue)} />\n                                            : null}\n                                    </Upload>\n                                )}\n                                {field.allowWebcam ? (\n<span className=\"ant-form-text\">\n                                    <a onClick={() => that.toggleWebCam(field.key, Math.random())}>\n                                        Open Webcam\n                                    </a>\n</span>\n) : null}\n                                <Modal\n                                  footer={null}\n                                  onCancel={() => that.toggleWebCam(field.key, false)}\n                                  visible={!!that.state.webCamState[field.key]}\n                                  width={680}\n                                  key={that.state.webCamState[field.key]}\n                                >\n                                    <WebCamField getScreenShot={(value) => that.getImageandUpload(field.key, value)} />\n                                </Modal>\n</Form.Item>\n);\n                        case MULTI_IMAGE_UPLOAD_FIELD:\n                            const multiuploadprops = {\n                                name: 'image',\n                                data: {\n                                    name: 'hello'\n                                },\n                                action: makeURL(FILE_UPLOAD_API),\n                                headers: {\n                                    authorization: 'authorization-text',\n                                },\n                                onChange(info) {\n                                    if (info.file.status !== 'uploading') {\n                                        // console.log(info.file, info.fileList);\n                                    }\n                                    if (info.file.status === 'done') {\n                                        message.success(`${info.file.name} file uploaded successfully`);\n                                    } else if (info.file.status === 'error') {\n                                        message.error(`${info.file.name} file upload failed.`);\n                                    }\n                                },\n                            };\n                            return (\n<Form.Item key={field.key} {...formItemLayout} label={field.label}>\n                                {getFieldDecorator(field.key, {valuePropName: field.key,})(\n                                    <Upload {...multiuploadprops}>\n                                        <Button>\n                                            <Icon type=\"upload\" /> Select File\n                                        </Button>\n                                        {field.initialValue && field.initialValue.length ?\n                                            field.initialValue.map(img => (\n<img\n  src={img}\n  style={{maxWidth: '100%'}}\n/>\n)) : null}\n                                    </Upload>\n                                )}\n</Form.Item>\n);\n                        case COUNTRY_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select\n                                      placeholder={field.placeholder}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                      mode={field.mode ? field.mode : \"default\"}\n                                      onChange={(value) => that.setAddressField('country', value)}\n                                    >\n                                        {that.state.countryOptions.map((option) => (\n<Select.Option\n  value={option.id}\n>{option.name}\n</Select.Option>\n))}\n                                    </Select>\n                                )}\n</FormItem>\n);\n                        case STATE_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select\n                                      placeholder={field.placeholder}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                      mode={field.mode ? field.mode : \"default\"}\n                                      onChange={(value) => that.setAddressField('state', value)}\n                                    >\n                                        {that.state.stateOptions.map((option) => (\n<Select.Option\n  value={option.id}\n>{option.name}\n</Select.Option>\n))}\n                                    </Select>\n                                )}\n</FormItem>\n);\n\n                        case EMAIL_FIELD:\n                            return (\n<Form.Item\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, {\n                                    initialValue: that.state.formData[field.key],\n                                    rules: [{\n                                        type: 'email', message: 'The input is not valid E-mail!',\n                                    }, {\n                                        required: true, message: 'Please input your E-mail!',\n                                    }],\n                                })(\n                                    <Input\n                                      placeholder={field.placeholder}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                      onChange={that.inputChange}\n                                    />\n                                )}\n</Form.Item>\n)\n\n                        case CITY_FIELD:\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n                                {getFieldDecorator(field.key, that.fieldDecorators(field, that.state.formData))(\n                                    <Select\n                                      placeholder={field.placeholder}\n                                      disabled={field.disabled ? field.disabled : that.state.disabled}\n                                      mode={field.mode ? field.mode : \"default\"}\n                                    >\n                                        {that.state.cityOptions.map((option) => (\n<Select.Option\n  value={option.id}\n>{option.name}\n</Select.Option>\n))}\n                                    </Select>\n                                )}\n</FormItem>\n);\n                        case DIVIDER_FIELD :\n                            return <Divider style={{margin: 4}} />\n\n\n                        case LABEL_FIELD :\n                            return (\n<FormItem\n  key={field.key}\n  {...formItemLayout}\n  label={field.label}\n  extra={field.extra}\n>\n\n                                {field.follow ? <span className=\"ant-form-text\">{field.follow}</span> : null}\n\n</FormItem>\n);\n                        default:\n                            return null;\n                    }\n                }) : null}\n                <FormItem {...formItemLayout}>\n                    {/* <Button onClick={this.resetFormData}>Reset</Button> */}\n                    <Button loading={that.state.loading} type=\"primary\" htmlType=\"submit\" style={{margin: 5}}>\n                        Submit\n                    </Button>\n                    {that.props.history ? (\n                        <Button style={{margin: 5}} onClick={() => that.props.history.goBack()}>\n                            Cancel\n                        </Button>\n                      ) : null}\n                </FormItem>\n            </Form>\n</div>\n)\n    }\n}\n\nexport default DynamicFieldsForm;\n","import {\n    APPOINTMENT_FOR_EACH_CATEGORY,\n    CANCELLATION_NUMBERS,\n    AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE,\n    AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE,\n    DAILY_APPOINTMENT_COUNT,\n    APPOINTMENT_FOR_EACH_DOCTOR,\n    MONTHLY_APPOINTMENT_COUNT,\n    APPOINTMENT_FOR_EACH_PATIENT_GROUP,\n    DAILY_NEW_PATIENTS,\n    PATIENTS_FIRST_APPOINTMENT,\n    MONTHLY_NEW_PATIENTS,\n    NEW_MEMBERSHIP,\n    EXPIRING_MEMBERSHIP,\n    AGEING_AMOUNT_DUE,\n    AMOUNT_DUE_PER_DOCTOR,\n    DAILY_TREATMENT_COUNT,\n    TREATMENTS_FOR_EACH_DOCTOR,\n    MONTHLY_TREATMENT_COUNT,\n    TREATMENT_FOR_EACH_CATEGORY,\n    DAILY_EXPENSES,\n    MONTHLY_EXPENSES,\n    EXPENSES_EACH_TYPE,\n    DAILY_INVENTORY,\n    MONTHLY_INVENTORY,\n    TOP_INVENTORY,\n    DAILY_BOOKING_COUNT,\n    MONTHLY_BOOKING_COUNT,\n    MEDICINE_USAGE_COUNT,\n    BED_BOOKING_PACKAGE_COUNT,\n    MARGIN_TYPE_WISE,\n    WALLET_BALANCE_AMOUNT,\n    PATIENTS_UNSETTLED_ADVANCE,\n    PAYMENT_RECEIVED_PATIENT_GROUP,\n    MODE_OF_PAYMENTS,\n    PAYMENT_RECEIVED_PER_DAY,\n    PAYMENT_RECEIVED_PER_DOCTOR,\n    PAYMENT_RECEIVED_PER_MONTH,\n    ACTIVE_PATIENTS,\n    AGENT_TREE_VIEW,\n    FOLLOW_UP,\n    MEDICINE,\n    DAILY_INCOME,\n    MONTHLY_INCOME,\n    TAXED_INCOME,\n    PATIENT_GROUPS_INCOME,\n    PRODUCT_INCOME,\n    PROCEDURE_INCOME,\n    DOCTOR_EACH_INCOME,\n    APPOINTMENT_FOR_PATIENT_CONVERSION,\n    RETURN_INVOICE_FOR_EACH_PROCEDURE,\n    RETURN_INVOICE_FOR_EACH_DOCTOR,\n    RETURN_INVOICE_FOR_EACH_PRODUCT,\n    RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS,\n    RETURN_INVOICE_FOR_EACH_TAX, MONTHLY_WISE_RETURN_INVOICE, DAILY_WISE_RETURN_INVOICE\n} from \"./dataKeys\";\n\nexport const PAYMENT_TYPES = [\n    {label: 'cash', value: 'cash'},\n    {label: 'cheque', value: 'cheque'},\n    {label: 'card', value: 'card'},\n    {label: 'netbanking', value: 'netbanking'},\n    {label: 'unknown', value: 'unknown'},\n]\n\nexport const PAYMENT_OFFLINE_MODE = 'Cash';\n\nexport const DISEASE_TYPES = [\n    {label: 'Kidney Disease', value: 'Kidney Disease'},\n    {label: 'Cancer Disease', value: 'Cancer Disease'},\n    {label: 'Other Disease', value: 'Other Disease'}\n];\nexport const DRUG = \"Medicine\";\nexport const EQUIPMENT = \"Equipment\";\nexport const SUPPLIES = \"Supplies\";\nexport const PROCEDURES = \"Procedure\";\nexport const PRESCRIPTIONS = \"Prescriptions\";\nexport const INVENTORY = \"Inventory\";\n\n\nexport const INVOICE_ITEM_TYPE = [\n    {label: PROCEDURES, value: PROCEDURES},\n    {label: PRESCRIPTIONS, value: PRESCRIPTIONS},\n    {label: INVENTORY, value: INVENTORY}\n];\nexport const INVENTORY_ITEM_TYPE = [\n    {label: DRUG, value: DRUG},\n    {label: EQUIPMENT, value: EQUIPMENT},\n    {label: SUPPLIES, value: SUPPLIES}\n];\n\n\nexport const ADD_STOCK = \"ADD\";\nexport const CONSUME_STOCK = \"CONSUME\";\n\nexport const APPOINTMENT_CONFIRMATION_SMS_TAG_OPTIONS = [\n    {\n        label: \"PATIENT ID\",\n        value: \"{{PATIENT_ID}}\"\n    }, {\n        label: \"CLINIC CONTACT\",\n        value: \"{{CLINICCONTACTNUMBER}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{CLINIC}}\"\n    }, {\n        label: \"PATIENT NAME\",\n        value: \"{{PATIENT}}\"\n    }, {\n        label: \"APPOINTMENT CATEGORY\",\n        value: \"{{CATEGORY}}\"\n    }, {\n        label: \"DATE\",\n        value: \"{{DATE}}\"\n    }, {\n        label: \"TIME\",\n        value: \"{{TIME}}\"\n    }];\n\nexport const EMR_TYPE = \"EMR\";\nexport const BILLING_TYPE = \"BILLING\";\n\nexport const EMR_SUB_TYPE = [\n    {title: 'PRESCRIPTION'},\n    {title: 'TREATMENT PLAN'},\n    {title: 'CASE SHEET'},\n    {title: 'MEDICAL LEAVE'},\n    {title: 'REPORT MANUAL'},\n    {title: 'LAB ORDER'},\n    // {title: 'LAB ORDER RESULT'},\n    {title: 'CLINICAL NOTES'}\n];\nexport const BILLING_SUB_TYPE = [\n    {title: 'INVOICE'},\n    {title: 'BOOKING'},\n    {title: 'RECEIPTS'},\n    {title: 'RETURN'}\n];\n\nexport const CUSTOMIZE_PAPER_TYPE = [\n    'PAGE', 'HEADER', 'PATIENT', 'FOOTER'\n];\n\nexport const PAPER_SIZE = ['A2', 'A3', 'A4', 'A5'];\n\nexport const PAGE_ORIENTATION = [\n    {value: 'PORTRAIT'},\n    {value: 'LANDSCAPE'}\n];\n\nexport const PRINTER_TYPE = [\n    {value: 'COLOR'},\n    {value: 'BLACK'}\n];\nexport const HEADER_INCLUDE = [\n    {title: 'Yes', value: true},\n    {title: 'No , I already have a letter head.', value: false}\n];\nexport const LOGO_TYPE = [\n    {value: 'Square'},\n    {value: 'Narrow'},\n    {value: 'Wide'}\n];\nexport const LOGO_ALIGMENT = [\n    {value: 'RIGHT'},\n    {value: 'LEFT'},\n    {value: 'CENTRE'}\n];\nexport const LOGO_INCLUDE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n];\nexport const PATIENT_DETAILS_LIST = [\n    {value: 'Exclude Medical History'},\n    {value: 'Exclude Patient Number'},\n    {value: 'Exclude address'},\n    {value: 'Exclude Blood Group'}\n];\nexport const EXCLUDE_PATIENT_DOB = \"Exclude Patient Gender & DOB\";\n\nexport const SMS_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const EMAIL_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const BIRTHDAY_SMS_ENABLE = [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n]\n\nexport const DURATIONS_UNIT = [\n    {label: 'day(s)', value: 'day(s)'},\n    {label: 'week(s)', value: 'week(s)'},\n    {label: 'month(s)', value: 'month(s)'},\n    {label: 'year(s)', value: 'year(s)'},\n];\n\nexport const DOSE_FREQUENCIES = [\n    {label: 'day(s)', value: 'day(s)'},\n];\n\nexport const DOSE_REQUIRED = [\n    {label: 'twice daily', value: 'twice daily'},\n    {label: 'three times a day', value: 'three times a day'},\n    {label: 'four times a day', value: 'four times a day'},\n    {label: 'every four hours', value: 'every four hours'},\n    {label: 'as needed', value: 'as needed'},\n    {label: 'every 2 hour(s)', value: 'every 2 hour(s)'},\n    {label: 'every other hour', value: 'every other hour'},\n    {label: 'every day', value: 'every day'},\n    {label: 'every other day', value: 'every other day'},\n];\n\nexport const SCHEDULE_STATUS = 'Scheduled';\nexport const WAITING_STATUS = 'Waiting';\nexport const ENGAGED_STATUS = 'Engaged';\nexport const CHECKOUT_STATUS = 'CheckOut';\nexport const CANCELLED_STATUS = 'Cancelled';\n\nexport const TYPE_OF_CONSUMPTION = [\n    {label: \"Sales\", value: \"SALES\"},\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Damaged\", value: \"DAMAGED\"},\n    {label: \"Returned\", value: \"RETURNED\"},\n    {label: \"Adjustment\", value: \"ADJUSTMENT\"},\n];\n\nexport const TYPES_OF_BED_PACKAGES_ROOM_TYPE = [\n    {label: \"Private\", value: \"PRIVATE\"},\n    {label: \"Dormitory\", value: \"DORMITORY\"},\n    {label: \"Semi Private\", value: \"SEMI PRIVATE\"},\n]\n\nexport const CUSTOM_STRING_SEPERATOR = '$_$';\n\nexport const DAY_KEYS = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\nexport const NOTES = [\n    {label: \"Valid for absence from court attendance\", value: \"valid_court\"},\n    {label: \"Invalid for absence from court attendance\", value: \"invalid_court\"},\n    {label: \"Dont mention\", value: \"no_mention\"}\n];\n\nexport const DEFAULT_TEMPERATURE_IN = [\n    {label: \"Degree Fahrenheit\", value: \"Degree Fahrenheit\"},\n    {label: \"Degree Celsius\", value: \"Degree Celsius\"}\n];\nexport const DEFAULT_TEMPERATURE_METHOD = [\n    {label: \"Armpit\", value: \"Armpit\"},\n    {label: \"Forehead\", value: \"Forehead\"},\n    {label: \"Anus\", value: \"Anus\"},\n    {label: \"Mouth\", value: \"Mouth\"},\n    {label: \"Ear\", value: \"Ear\"}\n];\nexport const DEFAULT_BP_METHOD = [\n    {label: \"Sitting\", value: \"Sitting\"},\n    {label: \"Standing\", value: \"Standing\"}\n];\n\nexport const APPOINTMENT_STATUS = [\n    {label: \"Scheduled\", value: SCHEDULE_STATUS},\n    {label: \"Cancelled\", value: CANCELLED_STATUS},\n    {label: \"Engaged\", value: ENGAGED_STATUS}\n];\nexport const MAILED = 'true';\n\nexport const BOOKING_TYPE = [\n    {value: 'TATKAL'},\n    {value: 'NORMAL'}\n];\nexport const PAYMENT_STATUS = [\n    {label: \"Success\", value: \"SUCCESSFUL\"},\n    {label: \"Failed\", value: \"FAILED\"},\n    {label: \"Pending\", value: \"PENDING\"}\n];\nexport const OPD_IPD = [\n    {label: \"OPD\", value: \"OPD\"},\n    {label: \"IPD\", value: \"IPD\"}\n];\n\nexport const ROLES = [\n    {label: \"ADMIN\", value: '1'},\n    {label: \"CLINIC_ADMIN\", value: '2'}\n];\n/* Patient Reports */\nexport const PATIENTS_RELATED_REPORT = [\n    {name: 'Daily New Patients', value: DAILY_NEW_PATIENTS},\n    {name: 'Expiring Membership', value: EXPIRING_MEMBERSHIP},\n    {name: 'Patients First Appointment', value: PATIENTS_FIRST_APPOINTMENT},\n    {name: 'Monthly New Patients', value: MONTHLY_NEW_PATIENTS},\n    {name: 'New Membership', value: NEW_MEMBERSHIP},\n    {name: 'Active Patients', value: ACTIVE_PATIENTS},\n    {name: \"Follow Up Report\", value: FOLLOW_UP},\n    {name: \"Medicine Report\", value: MEDICINE},\n];\n\n/* Appointment Reports */\nexport const APPOINTMENT_RELATED_REPORT = [\n    {name: 'Appointments For Each Category', value: APPOINTMENT_FOR_EACH_CATEGORY},\n    {name: 'Cancellation Numbers', value: CANCELLATION_NUMBERS},\n    {name: 'Average Waiting/engaged Time Day Wise', value: AVERAGE_WAITING_ENGAGED_TIME_DAY_WISE},\n    {name: 'Average Waiting/engaged Time Month Wise', value: AVERAGE_WAITING_ENGAGED_TIME_MONTH_WISE},\n    // {name: 'Reasons For Cancellations', value: REASONS_FOR_CANCELLATIONS},\n    {name: 'Daily Appointment Count', value: DAILY_APPOINTMENT_COUNT},\n    {name: 'Appointments For Each Doctor', value: APPOINTMENT_FOR_EACH_DOCTOR},\n    {name: 'Monthly Appointment Count', value: MONTHLY_APPOINTMENT_COUNT},\n    {name: 'Appointment For Each Patient Group', value: APPOINTMENT_FOR_EACH_PATIENT_GROUP},\n    {name: 'Patient Conversion', value: APPOINTMENT_FOR_PATIENT_CONVERSION},\n];\n\n/* Emr Reports */\nexport const EMR_RELATED_REPORT = [\n    {name: 'Daily Treatments Count', value: DAILY_TREATMENT_COUNT},\n    {name: 'Treatments For Each Doctor', value: TREATMENTS_FOR_EACH_DOCTOR},\n    {name: 'Monthly Treatments Count', value: MONTHLY_TREATMENT_COUNT},\n    {name: 'Treatments For Each Category', value: TREATMENT_FOR_EACH_CATEGORY}\n];\n\n/* Amount Due Reports */\nexport const AMOUNT_DUE_RELATED_REPORT = [\n    {name: 'Ageing Amount Due', value: AGEING_AMOUNT_DUE},\n    {name: 'Amount Due Per Doctor', value: AMOUNT_DUE_PER_DOCTOR},\n    // {name: 'Amount Due Per Procedure', value: AMOUNT_DUE_PER_PROCEDURE},\n    // {name: 'Unsettled Invoice', value: UNSETTLED_INVOICE},\n];\n\nexport const BLOOD_GROUPS = [\n    {name: \"A+\", value: 'A+'},\n    {name: \"A-\", value: 'A-'},\n    {name: \"B+\", value: 'B+'},\n    {name: \"B-\", value: 'B-'},\n    {name: \"AB+\", value: 'AB+'},\n    {name: \"AB-\", value: 'AB-'},\n    {name: \"O+\", value: 'O+'},\n    {name: \"O-\", value: 'O-'},\n];\n\n/** * Expense Reports ** */\nexport const EXPENSE_RELATED_REPORT = [\n    {name: 'Daily Expenses', value: DAILY_EXPENSES},\n    {name: 'Expenses For Each Type', value: EXPENSES_EACH_TYPE},\n    {name: 'Monthly Expenses', value: MONTHLY_EXPENSES}];\n\n/** *Inventory Reports * */\nexport const INVENTORY_RELATED_REPORT = [\n    {name: 'Daily Stock Consumption Item Wise', value: DAILY_INVENTORY},\n    {name: 'Monthly Stock Consumption Item Wise', value: MONTHLY_INVENTORY},\n    {name: 'Top 10 Consumed Items', value: TOP_INVENTORY}\n];\nexport const PRODUCT_ITEM = [\n    {label: 'All', value: 'ALL'},\n    {label: DRUG, value: DRUG},\n    {label: EQUIPMENT, value: EQUIPMENT},\n    {label: SUPPLIES, value: SUPPLIES},\n];\n/* Bed Booking Reports */\nexport const BED_BOOKING_RELATED_REPORT = [\n    {name: 'Daily Booking Count', value: DAILY_BOOKING_COUNT},\n    {name: 'Monthly Booking Count', value: MONTHLY_BOOKING_COUNT},\n    {name: 'Medicine Usage Count', value: MEDICINE_USAGE_COUNT},\n    {name: 'Bed Booking Package Count', value: BED_BOOKING_PACKAGE_COUNT},\n];\n/* MLM reports */\nexport const MLM_RELATED_REPORT = [\n    {name: 'Margin Type wise', value: MARGIN_TYPE_WISE},\n    // {name:'Product Wise', value:PRODUCT_WISE},\n    {name: 'Wallet Balance Amount', value: WALLET_BALANCE_AMOUNT},\n    {name: 'Agent Tree View', value: AGENT_TREE_VIEW},\n];\n\n/* Payments Reports */\nexport const PAYMENT_RELATED_REPORT = [\n    // {name: 'Refund Payments', value: PAYMENT_REFUND},\n    {name: 'Payment Received From Each Patient Group', value: PAYMENT_RECEIVED_PATIENT_GROUP},\n    {name: 'Patients With Unsettled Advance, As Of Today', value: PATIENTS_UNSETTLED_ADVANCE},\n    {name: 'Modes Of Payment', value: MODE_OF_PAYMENTS},\n    {name: 'Payment Received Per Day', value: PAYMENT_RECEIVED_PER_DAY},\n    {name: 'Payment Received Per Doctor', value: PAYMENT_RECEIVED_PER_DOCTOR},\n    {name: 'Payment Received Per Month', value: PAYMENT_RECEIVED_PER_MONTH},\n\n    // {name: 'Payment Settlement', value: PAYMENT_SETTLEMENT},\n    // {name: 'Payment Settlement Per Doctor', value: PAYMENT_SETTLEMENT_PER_DOCTOR},\n    // {name: 'Credit Notes', value: CREDIT_NOTES},\n    // {name: 'Credit Amount Per Doctor', value: CREDIT_AMOUNT_PER_DOCTOR},\n];\n\n/* Income Reports */\n\nexport const INCOME_RELATED_REPORT = [\n    {name: \"Daily Invoiced Income\", value: DAILY_INCOME},\n    {name: \"Monthly Invoiced Income\", value: MONTHLY_INCOME},\n    {name: \"Taxed Invoiced Income\", value: TAXED_INCOME},\n    {name: \"Invoiced Income For Each Doctor\", value: DOCTOR_EACH_INCOME},\n    {name: \"Invoiced Income For Each Procedure\", value: PROCEDURE_INCOME},\n    {name: \"Invoiced Income For Each Patient Group\", value: PATIENT_GROUPS_INCOME},\n    {name: \"Invoiced Income For Each Product\", value: PRODUCT_INCOME},\n\n];\n\n/* Invoiced Report */\nexport const INVOICE_RELATED_REPORT = [\n    // {name:\"All Returned Invoices\" ,value:ALL_INVOICE_RETURN},\n    {name: \"Day wise Return Invoice\", value: DAILY_WISE_RETURN_INVOICE},\n    {name: \"Monthly wise Return Invoice\", value: MONTHLY_WISE_RETURN_INVOICE},\n    {name: \"Return Invoice For Each Tax\", value: RETURN_INVOICE_FOR_EACH_TAX},\n    {name: \"Return Invoice For Each Procedure\", value: RETURN_INVOICE_FOR_EACH_PROCEDURE},\n    {name: \"Return Invoice For Each Product\", value: RETURN_INVOICE_FOR_EACH_PRODUCT},\n    {name: \"Return Invoice For Each Doctor\", value: RETURN_INVOICE_FOR_EACH_DOCTOR},\n    {name: \"Return Invoice For Each Patient Groups\", value: RETURN_INVOICE_FOR_EACH_PATIENT_GROUPS},\n];\n\n\nexport const SCHEDULE_OF_INVOICES = [\n    {label: \"all \", value: ''},\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Products\", value: \"PRODUCTS\"},\n    {label: \"Lab orders\", value: \"RESERVATION\"},\n];\n\nexport const DISCOUNT = [\n    {label: \"Zero\", value: \"ZERO\"},\n    {label: \"Non Zero\", value: \"NON_ZERO\"},\n];\n\nexport const SCHEDULE_OF_PAYMENT = [\n    {label: \"all payments\", value: \"SALES\"},\n    {label: \"Only advance payments\", value: \"SERVICES\"},\n    {label: \"Payment for services\", value: \"DAMAGED\"},\n    {label: \"Payment for products\", value: \"RETURNED\"},\n];\n\nexport const PATIENT_AGE = [\n    {label: 'DOB', value: 'DOB'},\n    {label: 'Age', value: 'AGE'}\n];\n\n/** Suggestions Reports** */\nexport const SUGGESTIONS_STATUS = [\n    {label: \"Open\", value: \"Open\"},\n    {label: \"In Progress\", value: \"InProgress\"},\n    {label: \"Closed\", value: \"Closed\"},\n];\n\nexport const SOURCE_PLATFORM = [\n    {label: 'Facebook', value: 'FACEBOOK'},\n    {label: \"News Paper\", value: \"NEWS_PAPER\"},\n    {label: \"TV\", value: \"TV\"},\n    {label: 'Street Banners', value: \"STREET\"},\n];\n\nexport const OUTER_KEYS_HOTKEYS = 'alt+c ,alt+p, alt+r, alt+s, alt+b ,alt+w';\n\nexport const INNER_KEYS_HOTKEYS = 'alt+f ,alt+a, alt+o, alt+m, alt+l ,alt+i,alt+e ,alt+n ,alt+y ,alt+t,alt+s ,alt+k, alt+g,alt+u,alt+w';\n\n\nexport const FAMILY_GROUPS = [\n    {name: \"Child\", value: 'CHILD'},\n    {name: \"Parent  \", value: 'PARENT'},\n    {name: \"Brother/Sister\", value: 'BROTHER/SISTER'},\n    {name: \"Husband/Wife\", value: 'HUSBAND/WIFE'},\n    {name: \"Grandchild\", value: 'GRANDCHILD'},\n    {name: \"GrandParent\", value: 'GRANDPARENT'},\n    {name: \"Uncle/Aunt\", value: 'O+'},\n    {name: \"Nephew/Niece\", value: 'NEPHEW/NIECE'},\n    {name: \"Cousin\", value: 'COUSIN'},\n];\n\n// //\n// export const ADVANCED_SEARCH = [\n//     {label: 'Patient Name', value: 'name', input_type: \"text\", placeholder: \"Patient Name\"},\n//     {label: 'Contact No', value: 'phone', input_type: \"text\", placeholder: \"Contact No\"},\n//     {label: 'Age is', value: 'age', input_type: \"number\", placeholder: \"Age is\"},\n//     {label: 'Age more than', value: 'age_gte', input_type: \"number\", placeholder: \"Age more than\"},\n//     {label: 'Age Less Than', value: 'age_lte', input_type: \"number\", placeholder: \"Age less than\"},\n//     {\n//         label: 'Has Age', value: 'has_age', input_type: \"dropdown\", values: [\n//             \"12\", \"25\", \"45\", \"78\"\n//         ]\n//     },\n//\n// ];\n\n/** Advanced Search Constant Data* */\nexport const ADVANCED_SEARCH = [\n    {label: 'Patient Name', value: 'name'},\n    {label: 'Contact No', value: 'phone'},\n    {label: 'Age is ', value: 'age'},\n    {label: 'Age more than ', value: 'age_gte'},\n    {label: 'Age Less Than', value: 'age_lte'},\n    {label: 'Has Age ', value: 'has_age'},\n    {label: 'Date of Birth is ', value: 'dob'},\n    {label: 'Date of Birth is more than ', value: 'dob_gte'},\n    {label: 'Date of Birth is less than', value: 'dob_lte'},\n    {label: 'Birthday is in', value: 'dob_month'},\n    {label: 'Has Date of Birth', value: 'has_dob'},\n    {label: 'Patient Id', value: 'patient_id'},\n    {label: 'Has Aadhar Id', value: 'has_aadhar'},\n    {label: 'Aadhar Id', value: 'aadhar'},\n    {label: 'Email', value: 'email'},\n    {label: 'Has Email', value: 'has_email'},\n    {label: 'Gender is', value: 'gender'},\n    {label: 'Has Gender', value: 'has_gender'},\n    {label: 'Pincode', value: 'pincode'},\n    {label: 'Has Pincode', value: 'has_pincode'},\n    {label: 'Has Street Address', value: 'has_street'},\n    {label: 'Street Address ', value: 'street'},\n    {label: 'Blood Group', value: 'blood_group'},\n    {label: 'Referal Source', value: 'source'},\n    {label: 'Refered by Agent', value: 'agent_referal'},\n    // {label:'Refered by Agent' ,value:'agent_referal'},\n\n];\n\nexport const HAS_AGE = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_DOB = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\nexport const HAS_AADHAR_ID = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\nexport const HAS_EMAIL = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_GENDER = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_PINCODE = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const HAS_STREET = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const REFERED_BY_AGENT = [\n    {label: 'Yes', value: 'Y'},\n    {label: 'No', value: 'N'}\n];\n\nexport const GENDER_OPTION = [\n    {label: 'Female', value: 'female'},\n    {label: 'Male', value: 'male'},\n    {label: 'Other', value: 'other'},\n];\n\nexport const CURRENCY_TYPE = [\n    {label: 'Percent', value: '%'},\n    {label: 'Rupees', value: 'INR'}\n];\n\n\nexport const ROUTES_TO_HIDE_PATIENT_SIDE_PANEL = [\n    '/patients/profile/add',\n    '/patient/:id/emr/vitalsigns/add',\n    \"/patient/:id/emr/vitalsigns/edit\",\n    \"/patient/:id/emr/clinicnotes/add\",\n    \"/patient/:id/emr/clinicnotes/edit\",\n    \"/patient/:id/emr/plans/add\",\n    \"/patient/:id/emr/plans/edit\",\n    \"/patient/:id/emr/workdone/add\",\n    \"/patient/:id/emr/workdone/edit\",\n    \"/patient/:id/emr/prescriptions/add\",\n    \"/patient/:id/emr/prescriptions/edit\",\n    \"/patient/:id/prescriptions/template/add\",\n    \"/patient/:id/billing/invoices/add\",\n    \"/patient/:id/billing/invoices/edit\",\n    \"/patient/:id/billing/payments/add\",\n    \"/patient/:id/billing/payments/edit\"\n];\n\n\nexport const PROMO_CODE_SMS_TAG_OPTIONS = [\n    {\n        label: \"PATIENT NAME\",\n        value: \"{{PATIENT}}\"\n    }, {\n        label: \"PATIENT ID\",\n        value: \"{{PATIENT_ID}}\"\n    }, {\n        label: \"CLINIC CONTACT\",\n        value: \"{{CLINICCONTACTNUMBER}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{CLINIC}}\"\n    }, {\n        label: \"EXPIRY DATE\",\n        value: \"{{EXPIRY}}\"\n    }, {\n        label: \"VALUE\",\n        value: \"{{VALUE}}\"\n    }, {\n        label: \"MAX VALUE\",\n        value: \"{{MAX_VALUE}}\"\n    }, {\n        label: \"MIN PURCHASE\",\n        value: \"{{MIN_PURCHASE}}\"\n    }, {\n        label: \"PROMO CODE\",\n        value: \"{{CODE}}\"\n    }];\nexport const PROMO_CODE_RUPEE_SMS_TAG_OPTIONS = [\n    {\n        label: \"PATIENT NAME\",\n        value: \"{{PATIENT}}\"\n    }, {\n        label: \"PATIENT ID\",\n        value: \"{{PATIENT_ID}}\"\n    }, {\n        label: \"CLINIC CONTACT\",\n        value: \"{{CLINICCONTACTNUMBER}}\"\n    }, {\n        label: \"CLINIC NAME\",\n        value: \"{{CLINIC}}\"\n    }, {\n        label: \"EXPIRY DATE\",\n        value: \"{{EXPIRY}}\"\n    }, {\n        label: \"VALUE\",\n        value: \"{{VALUE}}\"\n    }, {\n        label: \"MIN PURCHASE\",\n        value: \"{{MIN_PURCHASE}}\"\n    }, {\n        label: \"PROMO CODE\",\n        value: \"{{CODE}}\"\n    }];\nexport const BLOOD_GROUP_CONFIG_PARAM = 'config_blood_group';\nexport const PATIENT_SOURCE_CONFIG_PARAM = 'config_source';\nexport const SMS_LANGUAGE_CONFIG_PARAM = 'config_sms_language';\nexport const FAMILY_RELATION_CONFIG_PARAM = 'config_family_relation';\nexport const GENDER_CONFIG_PARAM = 'config_gender';\n\n\nexport const INCOME_TYPE = [\n    {label: \"Services\", value: \"SERVICES\"},\n    {label: \"Products\", value: \"PRODUCTS\"},\n];\n\nexport const PDF_FILE_EXTENSION = 'pdf';\n","export const hideMobile = function (mobile) {\n    const hideString = '*';\n    if (mobile && mobile.length > 8) {\n        return mobile.substring(0, 3) + hideString.repeat(mobile.length - 5) + mobile.substring(mobile.length - 2);\n    }\n    return mobile;\n}\nexport const hideEmail = function (email) {\n    const hideString = '*';\n    if (email && email.length > 8) {\n        return email.substring(0, 3) + hideString.repeat(email.length - email.indexOf('@') - 4) + email.substring(email.length - email.indexOf('@') - 4);\n    }\n    return email;\n}\n","import React from \"react\";\nimport {Button, Result, Row} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nclass PermissionDenied extends React.Component {\n    render() {\n        return (\n<Row style={{marginTop: '20px'}}>\n            <Result\n              status=\"403\"\n              title={(\n<span><h1><b>403</b></h1>\n        <h2>Permission Denied</h2>\n</span>\n)}\n              subTitle=\"You don't have permission to view this page.\"\n              extra={<Link to=\"/\"><Button type=\"primary\">Go to Home</Button></Link>}\n            />\n</Row>\n)\n    }\n}\n\nexport default PermissionDenied;\n","import React from \"react\";\nimport Webcam from \"react-webcam\";\nimport {Button} from \"antd\";\n\nexport default class WebCamField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    setRef = webcam => {\n        this.webcam = webcam;\n    };\n\n    capture = () => {\n        const imageSrc = this.webcam.getScreenshot();\n        if(this.props.getScreenShot)\n            this.props.getScreenShot(imageSrc);\n    };\n\n    render() {\n        const videoConstraints = {\n            width: 1280,\n            height: 720,\n            facingMode: \"user\"\n        };\n        return (\n<div style={{width:680}}>\n            <Webcam\n              audio={false}\n              height={480}\n              width={640}\n              ref={this.setRef}\n              videoConstraints={videoConstraints}\n              screenshotFormat=\"image/jpeg\"\n            />\n            <Button onClick={this.capture}>Capture photo</Button>\n</div>\n)\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/kidneycarelogo.3378a129.png\";","import React from \"react\";\nimport {Button, Result, Row} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nclass Error404 extends React.Component {\n    render() {\n        return (\n<Row style={{marginTop: '20px'}} gutter={24}>\n            <Result\n              status=\"404\"\n              title={(\n<span><h1><b>404</b></h1>\n        <h2>Page Not Found</h2>\n</span>\n)}\n              subTitle=\"The page you are looking for has been temporarily moved or did not exist.\"\n              extra={<Link to=\"/\"><Button type=\"primary\">Go to Home</Button></Link>}\n            />\n</Row>\n)\n    }\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {Spin, Row, Col, Avatar, Icon, Button, Divider, Tag, Popconfirm} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {displayMessage, getAPI, interpolate, putAPI} from \"../../utils/common\";\nimport {APPOINTMENT_API} from \"../../constants/api\";\nimport {\n    CANCELLED_STATUS,\n    CHECKOUT_STATUS,\n    ENGAGED_STATUS,\n    SCHEDULE_STATUS,\n    WAITING_STATUS\n} from \"../../constants/hardData\";\nimport {ERROR_MSG_TYPE, SUCCESS_MSG_TYPE} from \"../../constants/dataKeys\";\n\nexport default class EventPatientPopover extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            appointment: null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.appointmentId) {\n            this.loadAppointmentDetails();\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    loadAppointmentDetails = () => {\n        this.setState({\n            loading: true\n        })\n        const that = this;\n        const successFn = function (data) {\n            that.setState({\n                appointment: data,\n                loading: false\n            });\n            console.log(\"event\", data)\n        };\n        const errorFn = function () {\n            that.setState({\n                loading: false\n            });\n        };\n        getAPI(interpolate(APPOINTMENT_API, [this.props.appointmentId]), successFn, errorFn);\n\n\n    }\n\n    updateAppointmentStatus = (id, currentStatus, targetStatus) => {\n        const that = this;\n        const reqData = {\n            status: targetStatus\n        };\n        if (targetStatus == WAITING_STATUS) {\n            reqData.waiting = moment().format()\n        } else if (targetStatus == ENGAGED_STATUS) {\n            reqData.engaged = moment().format()\n        } else if (targetStatus == CHECKOUT_STATUS) {\n            reqData.checkout = moment().format()\n        }\n        const successFn = function (data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"Appointment Status Changed Successfully!!\");\n            that.loadAppointmentDetails()\n        }\n        const errorFn = function () {\n\n        }\n        putAPI(interpolate(APPOINTMENT_API, [id]), reqData, successFn, errorFn\n        )\n    }\n\n    changeAppointmentStatus = (id, currentStatus, targetStatus) => {\n        const that = this;\n        const successFn = function (data) {\n            if (data.status == currentStatus) {\n                that.updateAppointmentStatus(id, currentStatus, targetStatus)\n            } else {\n                displayMessage(ERROR_MSG_TYPE, \"Appointment status has already changed. Updating Appointments...\")\n                that.loadAppointmentDetails();\n            }\n        }\n        const errorFn = function () {\n\n        }\n        getAPI(interpolate(APPOINTMENT_API, [id]), successFn, errorFn);\n    }\n\n    render() {\n        const that = this;\n        const {appointment} = this.state;\n        return (\n<div style={{width: '300px', minHeight: '200px'}}>\n            <Spin spinning={this.state.loading}>\n                {this.state.appointment ? (\n<div>\n                        <Row>\n                            <Col span={8}>\n                                {this.state.appointment.patient.image?<Avatar src={this.state.appointment.patient.image} size={80} />: (\n                                    <Avatar style={{backgroundColor: '#87d068'}}>\n                                        {this.state.appointment.patient.user.first_name ? this.state.appointment.patient.user.first_name.charAt(0) :\n                                            <Icon type=\"user\" />}\n                                    </Avatar>\n                                  )}\n                            </Col>\n                            <Col span={16}>\n                                <Link to={`/patient/${  this.state.appointment.patient.id  }/profile`} target=\"_blank\">\n                                    <h3>{this.state.appointment.patient.user.first_name}\n                                        <br />\n                                        <small>\n                                            Patient\n                                            ID: {this.state.appointment.patient.custom_id} , {this.state.appointment.patient.gender}\n                                            <br />{this.state.appointment.patient.user.mobile}\n                                        </small>\n                                    </h3>\n                                </Link>\n                            </Col>\n                        </Row>\n                        <Divider style={{margin: 0}} />\n                        <small>Status: {this.state.appointment.status}</small>\n                        <br />\n                        <small>\n                            <Icon\n                              type=\"clock-circle\"\n                            /> {moment(this.state.appointment.schedule_at).format('HH:mm A on MMMM Do')} for {this.state.appointment.slot} mins.\n                        </small>\n                        {showStatusTimeline(appointment)}\n                        <Row style={{height: '100px', overflow: 'scroll', backgroundColor: '#eee', padding: 5}}>\n                            <div>\n                                {appointment.status == SCHEDULE_STATUS ? (\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, SCHEDULE_STATUS, WAITING_STATUS)} disabled={!that.props.activePracticePermissions.ChangeAppointmentStatus}> Check In</a>\n                                    </span>\n                                  ) : null}\n                                {appointment.status == WAITING_STATUS ? (\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, WAITING_STATUS, ENGAGED_STATUS)} disabled={!that.props.activePracticePermissions.ChangeAppointmentStatus}> Engage</a>\n                                    </span>\n                                  ) : null}\n                                {appointment.status == ENGAGED_STATUS ? (\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <a onClick={() => that.changeAppointmentStatus(appointment.id, ENGAGED_STATUS, CHECKOUT_STATUS)} disabled={!that.props.activePracticePermissions.ChangeAppointmentStatus}> Check Out</a>\n                                    </span>\n                                  ) : null}\n                                {appointment.status == CHECKOUT_STATUS ? (\n                                    <span style={{width: '70px', float: 'right'}}>\n                    <small>Checked Out</small>\n                                    </span>\n                                  ) : null}\n                                {this.state.appointment.doctor_data ? (\n<Tag\n  color={this.state.appointment.doctor_data ? this.state.appointment.doctor_data.calendar_colour : null}\n>\n                                    <b>{`With ${  this.state.appointment.doctor_data.user.first_name}`} </b>\n</Tag>\n) : null}\n                            </div>\n                            <Divider style={{margin: 0}} />\n                            <b>Category:</b>{this.state.appointment.category_data ? this.state.appointment.category_data.name : null}\n                            <p>{this.state.appointment.first_appointment?<span>This is Patient's first apppointment</span> :''}</p>\n                        </Row>\n                        <Divider style={{margin: 0}} />\n                        <Row style={{textAlign: 'right'}}>\n                            <Button.Group size=\"small\">\n                                {that.props.activePracticePermissions.EditAppointment || that.props.allowAllPermissions ? (\n                                <Button>\n                                    <Link to={`/calendar/${  this.state.appointment.id  }/edit-appointment`}>\n                                        <Icon type=\"edit\" /> Edit\n                                    </Link>\n                                </Button>\n                              ):null}\n                                {that.props.activePracticePermissions.ChangeAppointmentStatus || that.props.allowAllPermissions? (\n                                <Popconfirm\n                                  title=\"Are you sure delete this?\"\n                                  onConfirm={() => that.changeAppointmentStatus(appointment.id, appointment.status, CANCELLED_STATUS)}\n                                  okText=\"Yes\"\n                                  cancelText=\"No\"\n                                >\n                                    <Button type=\"danger\">\n                                        <Icon type=\"cross\" /> Cancel\n                                    </Button>\n                                </Popconfirm>\n                              ):null}\n                            </Button.Group>\n                        </Row>\n</div>\n) :\n                    <h4>No Patient Found</h4>}\n            </Spin>\n</div>\n)\n    }\n}\n\nfunction showStatusTimeline(appointment) {\n    switch (appointment.status) {\n        case WAITING_STATUS:\n            return (\n<div>\n                <br /><small>Checked in At {moment(appointment.waiting).format('lll')}</small>\n</div>\n)\n        case ENGAGED_STATUS:\n            return (\n<div>\n                <small>Waiting Time {moment(appointment.engaged).from(moment(appointment.waiting))}</small>\n                <br /><small>Engaged At {moment(appointment.engaged).format('lll')}</small>\n</div>\n)\n        case CHECKOUT_STATUS:\n            return (\n<div>\n                <small>Waiting Time {moment(appointment.engaged).from(moment(appointment.waiting))}</small>\n                <br /><small>Engaged Time {moment(appointment.checkout).from(moment(appointment.engaged))}</small>\n                <br /><small>Total Stay Time {moment(appointment.checkout).from(moment(appointment.waiting))}</small>\n</div>\n)\n    }\n    return null\n}\n"],"sourceRoot":""}