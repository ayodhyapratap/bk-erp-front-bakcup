(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{1480:function(t,e,a){var n=a(125),s=a(1481);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var o={insert:"head",singleton:!1};n(s,o);t.exports=s.locals||{}},1481:function(t,e,a){(e=a(126)(!1)).push([t.i,"App{text-align:center}.App-logo{animation:App-logo-spin infinite 20s linear;height:80px}.App-header{background-color:#222;height:150px;padding:20px;color:white}.App-title{font-size:1.5em}.App-intro{font-size:large}@keyframes App-logo-spin{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}.rbc-timeslot-group{min-height:30px}.rbc-day-slot .rbc-event-content{font-size:90%}.rbc-event-label{font-size:60%}\n",""]),t.exports=e},1603:function(t,e,a){"use strict";a.r(e);var n=a(1),s=a.n(n),o=a(436),i=a.n(o),r=(a(984),a(985),a(986)),l=a.n(r),c=a(993),d=a.n(c),m=a(1023),p=a(1577),h=a(1596),u=a(1105),f=a(1183),g=a(1587),y=a(503),E=a(448),b=a(1028),A=a(1567),v=a(433),C=a(1029),T=a(837),w=a(1579),O=(a(1480),a(18)),L=a(115),D=a(735),S=a(437),_=a(435),k=a(434),H=a(1581),x=a(808);function j(){return(j=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}class F extends s.a.Component{constructor(t){super(t)}render(){return s.a.createElement(H.a,{placement:"right",content:s.a.createElement(x.a,j({appointmentId:this.props.event.appointment.id,key:this.props.event.appointment.id},this.props)),trigger:"hover"},s.a.createElement("div",{style:{color:"white",height:"100%"}},s.a.createElement("h1",{style:{color:"white"}},s.a.createElement(E.a,{type:"user"}),this.props.title)))}}var P=a(509),I=a(438);function R(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function M(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?R(Object(a),!0).forEach((function(e){N(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):R(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function N(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}const Y=s.a.createElement(A.a,null,s.a.createElement(A.a.Item,{key:"1"},s.a.createElement(L.b,{to:"/settings/calendarsettings#timings"},"Modify Calendar Timings")),s.a.createElement(A.a.Item,{key:"2"},s.a.createElement(L.b,{to:"/settings/clinics-staff#staff"},"Add/Edit Doctor or Staff")),s.a.createElement(A.a.Item,{key:"3"},s.a.createElement(L.b,{to:"/settings/clinics-staff#notification"},"Modify SMS/Email for Doctor/Staff")),s.a.createElement(A.a.Item,{key:"4"},s.a.createElement(L.b,{to:"/settings/communication-settings"},"Modify SMS/Email for Patients")),s.a.createElement(A.a.Item,{key:"5"},s.a.createElement(L.b,{to:"/settings/calendarsettings#categories"},"Add/Edit Categroies"))),z=function(t,e){let a=P.get(S.y);a||(a={}),a=M(M({},a),{},{[t]:e}),P.set(S.y,a)},G=function(t){let e=!0;const a=i()(t.value).isValid()?i()(t.value).format("dddd").toLowerCase():null;if("DOCTOR"!=t.filterType||"ALL"==t.selectedDoctor)if(t.calendarTimings&&a&&t.calendarTimings[a]){const n=t.calendarTimings[a];n.lunch?(i()(t.value,"HH:mm:ss").format("HH:mm:ss")<=n.startTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")>n.endTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")<n.lunchEndTime.format("HH:mm:ss")&&i()(t.value,"HH:mm:ss").format("HH:mm:ss")>=n.lunchStartTime.format("HH:mm:ss"))&&(e=!1):(i()(t.value,"HH:mm:ss").format("HH:mm:ss")<=n.startTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")>n.endTime.format("HH:mm:ss"))&&(e=!1)}else a&&!t.calendarTimings[a]&&(e=!1);else if(t.doctorTimings&&a&&t.doctorTimings[a]){const n=t.doctorTimings[a];n.lunch?(i()(t.value,"HH:mm:ss").format("HH:mm:ss")<=n.startTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")>n.endTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")<n.lunchEndTime.format("HH:mm:ss")&&i()(t.value,"HH:mm:ss").format("HH:mm:ss")>=n.lunchStartTime.format("HH:mm:ss"))&&(e=!1):(i()(t.value,"HH:mm:ss").format("HH:mm:ss")<=n.startTime.format("HH:mm:ss")||i()(t.value,"HH:mm:ss").format("HH:mm:ss")>n.endTime.format("HH:mm:ss"))&&(e=!1)}else t.doctorTimings&&a&&!t.doctorTimings[a]&&(e=!1);if(t.showCalendarEvents&&e)for(let a=0;a<t.blockedCalendar.length;a++)if(t.blockedCalendar[a].doctor&&"DOCTOR"==t.filterType){if(t.blockedCalendar[a].doctor==t.selectedDoctor&&i()(t.value).isBetween(i()(t.blockedCalendar[a].block_from),i()(t.blockedCalendar[a].block_to))){e=!1;break}}else if(i()(t.value).isBetween(i()(t.blockedCalendar[a].block_from),i()(t.blockedCalendar[a].block_to))){e=!1;break}if(e)return t.children;const n=s.a.Children.only(t.children);return(s.a.cloneElement(n,{className:"".concat(n.props.className," rbc-off-range-bg")}))};var U=a(1605),B=a(441);function V(){return(V=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function W(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}class K extends s.a.Component{constructor(t){super(t),W(this,"changeDate",t=>{const e=this;this.setState((function(e){return t?{selectedDate:e.selectedDate.add(1,"days")}:{selectedDate:e.selectedDate.subtract(1,"days")}}),(function(){e.todaysAppointments()}))}),W(this,"todaysAppointments",()=>{const t=this;t.setState({loading:!0});Object(_.c)(Object(_.g)(k.u,[this.props.active_practiceId]),(function(e){t.setState((function(t){const a={CANCELLED_STATUS:0},n=[];let s=0;return e.forEach((function(e){a[e.status]?a[e.status]+=1:a[e.status]=1,("ALL"==t.todaysAppointmentFilter||t.todaysAppointmentFilter==e.status)&&n.push(e),e.first_appointment&&s++})),{todaysAppointments:e,todaysAppointmentOverview:a,todaysFilteredAppointments:n,loading:!1,todaysFilteredNewAppointmentCount:s}}))}),(function(){t.setState({loading:!1})}),{start:t.state.selectedDate.format("YYYY-MM-DD"),end:t.state.selectedDate.format("YYYY-MM-DD")})}),W(this,"filterTodaysAppointment",t=>{this.setState((function(e){const a=[];let n=0;return e.todaysAppointments.forEach((function(e){("ALL"==t||t==e.status)&&(a.push(e),e.first_appointment&&n++)})),{todaysFilteredAppointments:a,todaysAppointmentFilter:t,todaysFilteredNewAppointmentCount:n}}))}),W(this,"changeAppointmentStatus",(t,e,a)=>{const n=this;Object(_.c)(Object(_.g)(k.r,[t]),(function(s){s.status==e?n.updateAppointmentStatus(t,e,a):(Object(_.a)(S.T,"Appointment status has already changed. Updating Appointments..."),n.todaysAppointments())}),(function(){}))}),W(this,"updateAppointmentStatus",(t,e,a)=>{const n=this,s={status:a};a==B.fc?s.waiting=i()().format():a==B.U?s.engaged=i()().format():a==B.x&&(s.checkout=i()().format());Object(_.m)(Object(_.g)(k.r,[t]),s,(function(t){Object(_.a)(S.sc,"Appointment Status Changed Successfully!!"),n.todaysAppointments()}),(function(){}))}),this.state={todaysAppointments:[],todaysFilteredAppointments:[],todaysAppointmentOverview:{},todaysAppointmentFilter:"ALL",selectedDate:this.props.selectedDate,todaysFilteredNewAppointmentCount:0},this.todaysAppointments=this.todaysAppointments.bind(this)}componentDidMount(){this.todaysAppointments()}render(){const t=this;return(s.a.createElement("div",null,s.a.createElement(b.a,{trigger:"click",overlay:Y},s.a.createElement(y.a,{block:!0,style:{margin:5}},s.a.createElement(E.a,{type:"setting"})," Settings ",s.a.createElement(E.a,{type:"down"}))),t.props.activePracticePermissions.AddWalkinAppointment||t.props.allowAllPermissions?s.a.createElement(L.b,{to:"/calendar/create-appointment"},s.a.createElement(y.a,{block:!0,type:"primary",style:{margin:5}}," Walkin Appointment")):null,s.a.createElement(u.a,{gutter:8},s.a.createElement(f.a,{span:5,onClick:()=>this.filterTodaysAppointment(this.state.todaysAppointmentFilter==B.Tb?"ALL":B.Tb),style:{width:"20%",textAlign:"center",border:"1px solid #ccc",borderRadius:"3px",backgroundColor:this.state.todaysAppointmentFilter==B.Tb?"#FF6600":null,color:this.state.todaysAppointmentFilter==B.Tb?"white":"#FF6600",boxShadow:"0 2px 4px #111 inset"}},s.a.createElement("small",null,B.Tb),s.a.createElement("h2",{style:{color:this.state.todaysAppointmentFilter==B.Tb?"white":"#FF6600"}},this.state.todaysAppointmentOverview[B.Tb]?this.state.todaysAppointmentOverview[B.Tb]:0)),s.a.createElement(f.a,{span:5,onClick:()=>this.filterTodaysAppointment(this.state.todaysAppointmentFilter==B.fc?"ALL":B.fc),style:{width:"20%",textAlign:"center",border:"1px solid #ccc",borderRadius:"3px",backgroundColor:this.state.todaysAppointmentFilter==B.fc?"#FC0000":null,color:this.state.todaysAppointmentFilter==B.fc?"white":"#FC0000",boxShadow:"0 2px 4px #111 inset"}},s.a.createElement("small",null,B.fc),s.a.createElement("h2",{style:{color:this.state.todaysAppointmentFilter==B.fc?"white":"#FC0000"}},this.state.todaysAppointmentOverview[B.fc]?this.state.todaysAppointmentOverview[B.fc]:0)),s.a.createElement(f.a,{span:5,onClick:()=>this.filterTodaysAppointment(this.state.todaysAppointmentFilter==B.U?"ALL":B.U),style:{width:"20%",textAlign:"center",border:"1px solid #ccc",borderRadius:"3px",backgroundColor:this.state.todaysAppointmentFilter==B.U?"#598C01":null,color:this.state.todaysAppointmentFilter==B.U?"white":"#598C01",boxShadow:"0 2px 4px #111 inset"}},s.a.createElement("small",null,B.U),s.a.createElement("h2",{style:{color:this.state.todaysAppointmentFilter==B.U?"white":"#598C01"}},this.state.todaysAppointmentOverview[B.U]?this.state.todaysAppointmentOverview[B.U]:0)),s.a.createElement(f.a,{span:5,onClick:()=>this.filterTodaysAppointment(this.state.todaysAppointmentFilter==B.x?"ALL":B.x),style:{width:"20%",textAlign:"center",border:"1px solid #ccc",borderRadius:"3px",backgroundColor:this.state.todaysAppointmentFilter==B.x?"#0094DE":null,color:this.state.todaysAppointmentFilter==B.x?"white":"#0094DE",boxShadow:"0 2px 4px #111 inset"}},s.a.createElement("small",null,B.x),s.a.createElement("h2",{style:{color:this.state.todaysAppointmentFilter==B.x?"white":"#0094DE"}},this.state.todaysAppointmentOverview[B.x]?this.state.todaysAppointmentOverview[B.x]:0)),s.a.createElement(f.a,{span:5,onClick:()=>this.filterTodaysAppointment(this.state.todaysAppointmentFilter==B.w?"ALL":B.w),style:{width:"20%",textAlign:"center",border:"1px solid #ccc",borderRadius:"3px",backgroundColor:this.state.todaysAppointmentFilter==B.w?"#a1a1a1":null,color:this.state.todaysAppointmentFilter==B.w?"white":"#a1a1a1",boxShadow:"0 2px 4px #111 inset"}},s.a.createElement("small",null,B.w),s.a.createElement("h2",{style:{color:this.state.todaysAppointmentFilter==B.w?"white":"#a1a1a1"}},this.state.todaysAppointmentOverview[B.w]?this.state.todaysAppointmentOverview[B.w]:0))),s.a.createElement(w.a,null,s.a.createElement("a",{type:"primary",onClick:()=>this.changeDate(!1)},s.a.createElement(E.a,{type:"left"})),s.a.createElement("span",null,this.state.selectedDate.format("MMM Do")==i()().format("MMM Do")?"Today":this.state.selectedDate.format("MMM Do"),"'s Schedule (",this.state.todaysFilteredAppointments.length,")"),"  ",s.a.createElement("a",{type:"primary",onClick:()=>this.changeDate(!0)},s.a.createElement(E.a,{type:"right"})),s.a.createElement("br",null),s.a.createElement("small",null,"(New:",this.state.todaysFilteredNewAppointmentCount,")")),s.a.createElement(v.a,{spinning:this.state.loading},s.a.createElement(U.a,{size:"small",style:{maxHeight:"calc(65vh)",overflowY:"scroll"},dataSource:this.state.todaysFilteredAppointments,renderItem:e=>s.a.createElement(U.a.Item,{color:"transparent",style:{padding:0}},s.a.createElement("div",{style:{border:"1px solid #ddd",borderRadius:"5px",textDecoration:e.status==B.w?"line-through":"inherit",backgroundColor:e.status==B.w?"#aaa":"#eee",width:"100%",marginTop:"2px",borderLeft:"5px solid".concat(e.doctor&&t.props.doctors_object&&t.props.doctors_object[e.doctor]?t.props.doctors_object[e.doctor].calendar_colour:"transparent")}},s.a.createElement(J,V({},e,{changeAppointmentStatus:this.changeAppointmentStatus},this.props))))}))))}}function J(t){return s.a.createElement("div",{style:{width:"100%"}},s.a.createElement("p",{style:{marginBottom:0}},s.a.createElement(H.a,{placement:"right",content:s.a.createElement(x.a,V({appointmentId:t.id,key:t.id},t))},s.a.createElement("span",{style:{width:"calc(100% - 60px)"}},s.a.createElement("b",null,i()(t.schedule_at).format("LT"))," ",t.first_appointment?s.a.createElement(E.a,{type:"dashboard",theme:"twoTone"}):""," ",t.patient.user.first_name)),t.status==B.Tb?s.a.createElement("span",{style:{width:"70px",float:"right"}},s.a.createElement("a",{onClick:()=>t.changeAppointmentStatus(t.id,B.Tb,B.fc),disabled:!t.activePracticePermissions.ChangeAppointmentStatus}," Check In")):null,t.status==B.fc?s.a.createElement("span",{style:{width:"70px",float:"right"}},s.a.createElement("a",{onClick:()=>t.changeAppointmentStatus(t.id,B.fc,B.U),disabled:!t.activePracticePermissions.ChangeAppointmentStatus}," Engage")):null,t.status==B.U?s.a.createElement("span",{style:{width:"70px",float:"right"}},s.a.createElement("a",{onClick:()=>t.changeAppointmentStatus(t.id,B.U,B.x),disabled:!t.activePracticePermissions.ChangeAppointmentStatus}," Check Out")):null,t.status==B.x?s.a.createElement("span",{style:{width:"70px",float:"right"}},s.a.createElement("small",null,"Checked Out")):null))}a(1036),a(459);function Q(){return(Q=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function X(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function q(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?X(Object(a),!0).forEach((function(e){Z(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):X(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function Z(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}const $=Object(m.c)(i.a),tt=l()(m.a),et=p.a.Content,at=h.a.confirm;class nt extends n.Component{constructor(t){super(t),Z(this,"changeCalendarType",t=>{const e=this;this.setState({calendarType:t,selectedDoctor:"ALL",selectedCategory:"ALL",filterType:"DOCTOR"},(function(){"APPOINTMENTS"==t?e.changeFilter("selectedDoctor","ALL"):"AVAILABILITY"==t&&e.state.practice_doctors.length&&e.changeFilter("selectedDoctor",e.state.practice_doctors[0].id)}))}),Z(this,"resizeEvent",({event:t,start:e,end:a})=>{if(t.appointment.status!=B.Tb)return Object(_.a)(S.Dc,"Action Not Allowed"),!0;const n=this.state.events;let s={};const o=this,r=[];n.forEach(n=>{n.id==t.id&&(s={schedule_at:i()(e).format(),slot:parseInt((a-e)/6e4)})});const l=function(s){Object(_.a)(S.sc,"time changed"),n.forEach(n=>{r.push(n.id==t.id?q(q({},n),{},{start:e,end:a}):n)}),o.setState({events:r},(function(){o.refreshFilterList()}))},c=function(){};at({title:"Are you sure to change the time of this appointment?",onOk(){Object(_.m)(Object(_.g)(k.r,[t.id]),s,l,c)},onCancel(){}})}),Z(this,"blockedCalendarTiming",(t,e)=>{const a=this;Object(_.c)(k.D,(function(t){a.setState({blockedCalendar:t})}),(function(){}),{practice:this.props.active_practiceId,cal_fdate:t.format(),cal_tdate:e.format()})}),Z(this,"onRangeChange",t=>{if(t.start&&t.end)if(this.appointmentList(i()(t.start),i()(t.end)),1==i()(t.start).date())this.setState({selectedDate:i()(t.start)});else{const e=i()(t.start);this.setState({selectedDate:e.month(e.month()+1).date(1)})}else t.length&&(7==t.length?this.appointmentList(i()(t[0]).subtract(1,"day"),i()(t[t.length-1]).subtract(1,"day")):this.appointmentList(i()(t[0]),i()(t[t.length-1])),this.setState({selectedDate:i()(t[0])}))}),Z(this,"onSelectedDateChange",t=>{const e=this;this.setState({selectedDate:i()(t)},(function(){e.appointmentList(i()(t).startOf("day"),i()(t).endOf("day"))}))}),Z(this,"setFilterType",t=>{const e=this;this.setState({filterType:t.key,selectedDoctor:"ALL",selectedCategory:"ALL"},(function(){"DOCTOR"==t.key?e.changeFilter("selectedDoctor","ALL"):"CATEGORY"==t.key&&e.changeFilter("selectedCategory","ALL")}))}),Z(this,"setFilter",(t,e)=>{const a=this;this.setState({[t]:e},(function(){z(t,e),a.changeFilter("tempKey","ALL")}))}),Z(this,"refreshFilterList",()=>{const t=this.state;"DOCTOR"==t.filterType?this.changeFilter("selectedDoctor",t.selectedDoctor):"CATEGORY"==t.filterType&&this.changeFilter("selectedCategory",t.selectedCategory)}),Z(this,"changeFilter",(t,e)=>{"selectedDoctor"==t&&"ALL"!=e&&this.loadDoctorTiming(e),this.setState((function(a){const n=[];return a.events.forEach((function(s){if(!a.filterCancelledAppointment&&s.appointment.status==B.w)return!0;("ALL"==e||"selectedDoctor"==t&&s.doctor==e||"selectedCategory"==t&&s.appointment.category==e)&&n.push(s)})),{[t]:e,filteredEvent:n}}))}),Z(this,"changeState",(t,e)=>{this.setState({[t]:e},(function(){z(t,e)}))}),Z(this,"loadDoctorTiming",t=>{const e=this;Object(_.c)(Object(_.g)(k.pb,[this.props.active_practiceId]),(function(a){let n={};a.length&&(n=a[0]);const s={};B.D.forEach((function(t){s[t]={},n.visting_hour_same_week?(s[t].startTime=i()(n.first_start_time,"HH:mm:ss"),s[t].endTime=i()(n.second_end_time,"HH:mm:ss"),n.is_two_sessions?(s[t].lunch=!0,s[t].lunchStartTime=i()(n.first_end_time,"HH:mm:ss"),s[t].lunchEndTime=i()(n.second_start_time,"HH:mm:ss")):s[t].lunch=!1):n[t]?(s[t].startTime=i()(n["first_start_time_".concat(t)],"HH:mm:ss"),s[t].endTime=i()(n["second_end_time_".concat(t)],"HH:mm:ss"),n["is_two_sessions_".concat(t)]?(s[t].lunch=!0,s[t].lunchStartTime=i()(n["first_end_time_".concat(t)],"HH:mm:ss"),s[t].lunchEndTime=i()(n["second_start_time_".concat(t)],"HH:mm:ss")):s[t].lunch=!1):s[t]=null})),e.setState((function(e){return{doctorTiming:q(q({},e.doctorTiming),{},{[t]:q({},s)})}}))}),(function(){}),{doctor:t})}),this.state=q({startTime:null,visiblePopover:!1,events:[],filteredEvent:[],appointments:[],practice_doctors:[],practice_categories:[],practice_staff:[],doctors_object:null,categories_object:null,calendarTimings:null,timing:{},loading:!0,selectedDoctor:"ALL",selectedCategory:"ALL",selectedDate:i()(),filterType:"DOCTOR",calendarType:"APPOINTMENTS",doctorsAppointmentCount:{},categoriesAppointmentCount:{},blockedCalendar:[],showCalendarEvents:!0,showAppointments:!0,doctorTiming:{}},function(){let t=P.get(S.y);return t||(t={}),t}()),this.onSelectSlot=this.onSelectSlot.bind(this),this.onSelectEvent=this.onSelectEvent.bind(this),this.moveEvent=this.moveEvent.bind(this),this.resizeEvent=this.resizeEvent.bind(this),this.loadDoctors=this.loadDoctors.bind(this),this.eventStyleGetter=this.eventStyleGetter.bind(this),this.loadCalendarTimings=this.loadCalendarTimings.bind(this),this.loadCalendarTimings()}componentDidMount(){var t;this.appointmentList(i()().startOf("day"),i()().endOf("day")),this.loadDoctors(),t=this,Object(_.c)(Object(_.g)(k.t,[t.props.active_practiceId]),(function(e){const a={},n=e.map(t=>(a[t.id]=M(M({},t),{},{calendar_colour:Object(I.b)(Object(I.a)(t.name))}),a[t.id]));t.setState({categories_object:a,practice_categories:n})}),(function(){}))}loadDoctors(){const t=this;t.setState({doctorLoading:!0});Object(_.c)(Object(_.g)(k.Dd,[this.props.active_practiceId]),(function(e){const a=[],n=[],s={};e.staff.forEach((function(t){t.role==S.Q?(a.push(t),s[t.id]=t):n.push(t)})),t.setState({practice_staff:n,practice_doctors:a,doctors_object:s,doctorLoading:!1})}),(function(){t.setState({doctorLoading:!1})}))}loadCalendarTimings(){const t=this;Object(_.c)(Object(_.g)(k.Q,[this.props.active_practiceId]),(function(e){let a={};e.length&&(a=e[0]);const n={};B.D.forEach((function(t){n[t]={},a.visting_hour_same_week?(n[t].startTime=i()(a.first_start_time,"HH:mm:ss"),n[t].endTime=i()(a.second_end_time,"HH:mm:ss"),a.is_two_sessions?(n[t].lunch=!0,n[t].lunchStartTime=i()(a.first_end_time,"HH:mm:ss"),n[t].lunchEndTime=i()(a.second_start_time,"HH:mm:ss")):n[t].lunch=!1):a[t]?(n[t].startTime=i()(a["first_start_time_".concat(t)],"HH:mm:ss"),n[t].endTime=i()(a["second_end_time_".concat(t)],"HH:mm:ss"),a["is_two_sessions_".concat(t)]?(n[t].lunch=!0,n[t].lunchStartTime=i()(a["first_end_time_".concat(t)],"HH:mm:ss"),n[t].lunchEndTime=i()(a["second_start_time_".concat(t)],"HH:mm:ss")):n[t].lunch=!1):n[t]=null})),t.setState({calendarTimings:q({},a),timing:q({},n),loading:!1})}),(function(){t.setState({loading:!1})}))}moveEvent({event:t,start:e,end:a,isAllDay:n}){if(t.appointment.status!=B.Tb)return Object(_.a)(S.Dc,"Action Not Allowed"),!0;const s=this.state.events,o=s.indexOf(t);let r=t.allDay;const l=this;!t.allDay&&n?r=!0:t.allDay&&!n&&(r=!1);const c=q(q({},t),{},{start:e,end:a,allDay:r}),d=[...s],m={schedule_at:i()(e).format(),slot:parseInt((a-e)/6e4)},p=function(t){Object(_.a)(S.sc,"time changed"),d.splice(o,1,c),l.setState({events:d},(function(){l.refreshFilterList()}))},h=function(){};at({title:"Are you sure to change the time of this appointment?",onOk(){Object(_.m)(Object(_.g)(k.r,[t.id]),m,p,h)},onCancel(){}})}onSelectSlot(t){const e=i()(t.start).format();"doubleClick"==t.action&&(this.setState({redirect:!0}),this.props.history.push("/calendar/create-appointment?startTime="+i()(e).format()))}onSelectEvent(t,e){this.setState({visiblePopover:!0}),this.props.history.push("/patients/appointments/".concat(t.id))}appointmentList(t,e){const a=this;a.setState({loading:!0});Object(_.c)(Object(_.g)(k.u,[this.props.active_practiceId]),(function(t){a.setState((function(e){e.events;const a=[],n=[],s={},o={};return t.forEach((function(t){const r=new i.a(t.schedule_at).add(t.slot,"minutes"),l={appointment:t,start:new Date(i()(t.schedule_at)),end:new Date(r),title:t.patient.user.first_name,id:t.id,doctor:t.doctor,loading:!1};if(s.ALL?(s.ALL.ALL+=1,t.status==B.w&&(s.ALL.CANCELLED+=1)):(s.ALL={},s.ALL.ALL=1,t.status==B.w?s.ALL.CANCELLED=1:s.ALL.CANCELLED=0),t.doctor&&s[t.doctor]?(s[t.doctor].ALL+=1,t.status==B.w&&(s[t.doctor].CANCELLED+=1)):(s[t.doctor]={},s[t.doctor].ALL=1,t.status==B.w?s[t.doctor].CANCELLED=1:s[t.doctor].CANCELLED=0),t.category&&s[t.category]?o[t.category]+=1:o[t.category]=1,a.push(l),!e.filterCancelledAppointment&&l.appointment.status==B.w)return!0;("DOCTOR"==e.filterType&&"ALL"==e.selectedDoctor||"CATEGORY"==e.filterType&&"ALL"==e.selectedCategory||"DOCTOR"==e.filterType&&l.doctor==e.selectedDoctor||"CATEGORY"==e.filterType&&l.appointment.category==e.selectedCategory)&&n.push(l)})),{events:a,filteredEvent:n,doctorsAppointmentCount:q({},s),categoriesAppointmentCount:q(q({},o),{},{ALL:t.length}),appointments:t,loading:!1}}))}),(function(){a.setState({loading:!1})}),{start:t.format("YYYY-MM-DD"),end:e.format("YYYY-MM-DD")}),this.blockedCalendarTiming(t,e)}eventStyleGetter(t,e,a,n){const s=t.doctor,o=t.appointment.category;let i=null;const r={borderRadius:"0px",opacity:.8,border:"5px",color:"white",display:"block"};return t.appointment.status==B.w?(r.backgroundColor="#aaa",r.textDecoration="line-through"):("DOCTOR"==this.state.filterType?i=s&&this.state.doctors_object&&this.state.doctors_object[s]?this.state.doctors_object[s].calendar_colour:"black":"CATEGORY"==this.state.filterType&&(i=o&&this.state.categories_object&&this.state.categories_object[o]?"#".concat(this.state.categories_object[o].calendar_colour):"black"),r.backgroundColor=i),{style:r}}render(){const t=this;let e=this.state.startTime,a=null;this.state.calendarTimings&&(e=new Date(new i.a(this.state.calendarTimings.start_time,"HH:mm:ss")),a=new Date(new i.a(this.state.calendarTimings.end_time,"HH:mm:ss")));return s.a.createElement(et,{className:"main-container"},s.a.createElement("div",{style:{padding:"5px"}},s.a.createElement(O.d,null,s.a.createElement(O.b,null,s.a.createElement("div",{style:{backgroundColor:"#fff",padding:"5px 10px"}},s.a.createElement(u.a,{gutter:16},s.a.createElement(f.a,{span:3},s.a.createElement(g.a,{onChange:this.onSelectedDateChange,value:this.state.selectedDate,format:"DD-MM-YYYY",style:{margin:5},allowClear:!1}),"APPOINTMENTS"==this.state.calendarType?s.a.createElement("div",null,t.props.activePracticePermissions.BlockCalendar||t.props.allowAllPermissions?s.a.createElement(y.a,{block:!0,style:{margin:5}},s.a.createElement(L.b,{to:"/calendar/blockcalendar"},s.a.createElement(E.a,{type:"stop"})," Block Calendar")):null,s.a.createElement(b.a,{trigger:"click",overlay:s.a.createElement(A.a,{onClick:this.setFilterType},s.a.createElement(A.a.Item,{key:"DOCTOR"},"DOCTOR"),s.a.createElement(A.a.Item,{key:"CATEGORY"},"CATEGORY"))},s.a.createElement(y.a,{block:!0,style:{margin:5}},this.state.filterType," ",s.a.createElement(E.a,{type:"caret-down"})))):null,s.a.createElement(v.a,{spinning:this.state.doctorLoading},"DOCTOR"==this.state.filterType?s.a.createElement(A.a,{selectedKeys:[this.state.selectedDoctor],size:"small",onClick:t=>this.changeFilter("selectedDoctor",t.key)},"APPOINTMENTS"==this.state.calendarType?s.a.createElement(A.a.Item,{key:"ALL",style:{marginBottom:2,textOverflow:"ellipsis",borderLeft:"5px solid black",borderRight:"none"}},s.a.createElement("span",null,"(",this.state.doctorsAppointmentCount.ALL?this.state.filterCancelledAppointment?this.state.doctorsAppointmentCount.ALL.ALL:this.state.doctorsAppointmentCount.ALL.ALL-this.state.doctorsAppointmentCount.ALL.CANCELLED:0,") All Doctors")):null,this.state.practice_doctors.map(t=>s.a.createElement(A.a.Item,{key:t.id,style:{textOverflow:"ellipsis",borderRight:"none",borderLeft:"5px solid ".concat(t.calendar_colour),backgroundColor:this.state.selectedDoctor==t.id?t.calendar_colour:"inherit",color:this.state.selectedDoctor==t.id?"white":"inherit",fontWeight:this.state.selectedDoctor==t.id?"bold":"inherit"}},s.a.createElement("span",null,"(",this.state.doctorsAppointmentCount[t.id]?this.state.filterCancelledAppointment?this.state.doctorsAppointmentCount[t.id].ALL:this.state.doctorsAppointmentCount[t.id].ALL-this.state.doctorsAppointmentCount[t.id].CANCELLED:0,") ",t.user.first_name)))):s.a.createElement(A.a,{selectedKeys:[this.state.selectedCategory],size:"small",onClick:t=>this.changeFilter("selectedCategory",t.key)},s.a.createElement(A.a.Item,{key:"ALL",style:{marginBottom:2,textOverflow:"ellipsis",borderLeft:"5px solid black",borderRight:"none"}},s.a.createElement("span",null,"(",this.state.categoriesAppointmentCount.ALL?this.state.categoriesAppointmentCount.ALL:0,") All Categories")),this.state.practice_categories.map(t=>s.a.createElement(A.a.Item,{key:t.id,style:{textOverflow:"ellipsis",borderRight:"none",borderLeft:"5px solid #".concat(t.calendar_colour),backgroundColor:this.state.selectedCategory==t.id?"#".concat(t.calendar_colour):"inherit",color:this.state.selectedCategory==t.id?"white":"inherit",fontWeight:this.state.selectedCategory==t.id?"bold":"inherit"}},s.a.createElement("span",null,"(",this.state.categoriesAppointmentCount[t.id]?this.state.categoriesAppointmentCount[t.id]:0,") ",t.name)))),s.a.createElement("div",{style:{marginTop:16}},s.a.createElement(C.a.Group,{size:"small",checked:this.state.calendarType,defaultValue:this.state.calendarType,buttonStyle:"solid",onChange:t=>this.changeCalendarType(t.target.value)},s.a.createElement(C.a.Button,{value:"APPOINTMENTS"},s.a.createElement("small",null,"Appointments")),s.a.createElement(C.a.Button,{value:"AVAILABILITY"},s.a.createElement("small",null,"Availability")))),s.a.createElement("div",{style:{position:"fixed",bottom:10,zIndex:9}},this.state.openMorePanel?s.a.createElement("div",{style:{boxShadow:"0 2px 4px #111",border:"1px solid #bbb",borderRadius:2,padding:5,backgroundColor:"white"}},s.a.createElement("ul",{style:{listStyle:"none",paddingInlineStart:0}},s.a.createElement("li",null,s.a.createElement(T.a,{checked:this.state.showCalendarEvents,onChange:e=>t.changeState("showCalendarEvents",e.target.checked)},s.a.createElement("small",null,"Events"))),s.a.createElement("li",null,s.a.createElement(T.a,{checked:this.state.showAppointments,onChange:e=>t.changeState("showAppointments",e.target.checked)},s.a.createElement("small",null,"Appointments"))),s.a.createElement("li",null,s.a.createElement(T.a,{checked:this.state.show24HourCalendar,onChange:e=>t.changeState("show24HourCalendar",e.target.checked)},s.a.createElement("small",null,"24 Hours"))),s.a.createElement("li",null,s.a.createElement(T.a,{checked:this.state.filterCancelledAppointment,onChange:e=>t.setFilter("filterCancelledAppointment",e.target.checked)},s.a.createElement("small",null,"Cancellled Appointment"))),s.a.createElement("li",null,s.a.createElement(w.a,null)),s.a.createElement("li",null,s.a.createElement(L.b,{to:"/settings/clinics-staff#staff"},s.a.createElement("small",null,"Add Doctor"))),s.a.createElement("li",null,s.a.createElement(L.b,{to:"/settings/calendarsettings#timings"},s.a.createElement("small",null," Customize Calendar"))),s.a.createElement("li",null,s.a.createElement("a",null,s.a.createElement("small",null,"Resync")),s.a.createElement(y.a,{onClick:()=>this.changeState("openMorePanel",!1),shape:"circle",size:"small",type:"danger",icon:"close",style:{float:"right"}})))):s.a.createElement("a",{onClick:()=>this.changeState("openMorePanel",!0)},"More ",s.a.createElement(E.a,{type:"caret-down"}))))),"APPOINTMENTS"==this.state.calendarType?s.a.createElement("div",null,s.a.createElement(f.a,{span:15},s.a.createElement(v.a,{size:"large",spinning:this.state.loading},s.a.createElement(tt,{key:"APPOINTMENTS",defaultDate:new Date,localizer:$,defaultView:"day",step:10,timeslots:1,truncateEvents:!1,events:this.state.showAppointments?this.state.filteredEvent:[],onEventDrop:this.moveEvent,onEventResize:this.resizeEvent,resizable:!0,selectable:!0,popup:this.onSelectEvent,onSelectSlot:this.onSelectSlot,views:{month:!0,week:st,day:!0,agenda:!0},style:{height:"calc(100vh - 85px)"},eventPropGetter:this.eventStyleGetter,date:new Date(this.state.selectedDate.format()),onRangeChange:this.onRangeChange,components:{event:e=>s.a.createElement(F,Q({},e,t.props)),timeSlotWrapper:e=>s.a.createElement(G,Q({},e,{key:e.value.toString(),blockedCalendar:t.state.blockedCalendar,calendarTimings:t.state.timing,doctorTimings:t.state.doctorTiming[t.state.selectedDoctor],filterType:t.state.filterType,selectedDoctor:t.state.selectedDoctor,showCalendarEvents:t.state.showCalendarEvents}))}}))),s.a.createElement(f.a,{span:6},s.a.createElement(K,Q({},this.props,this.state,{selectedDate:this.state.selectedDate,key:i()(this.state.selectedDate).format("l")})))):s.a.createElement(f.a,{span:21},s.a.createElement(tt,{key:"AVAILABILITY",defaultDate:new Date,localizer:$,defaultView:"day",step:10,timeslots:1,truncateEvents:!1,events:this.state.showAppointments?this.state.filteredEvent:[],onEventDrop:this.moveEvent,onEventResize:this.resizeEvent,resizable:!0,selectable:!0,popup:this.onSelectEvent,onSelectSlot:this.onSelectSlot,views:{week:!0,day:!0},style:{height:"calc(100vh - 85px)"},eventPropGetter:this.eventStyleGetter,date:new Date(this.state.selectedDate.format()),onRangeChange:this.onRangeChange,components:{event:e=>s.a.createElement(F,Q({},e,t.props)),timeSlotWrapper:e=>s.a.createElement(G,Q({},e,{key:e.value.toString(),blockedCalendar:t.state.blockedCalendar,calendarTimings:t.state.timing,doctorTimings:t.state.doctorTiming[t.state.selectedDoctor],filterType:t.state.filterType,selectedDoctor:t.state.selectedDoctor,showCalendarEvents:t.state.showCalendarEvents}))}}))))))))}}e.default=nt;class st extends s.a.Component{render(){const t=this.props.date,e=st.range(t);return s.a.createElement(d.a,Q({},this.props,{range:e,eventOffset:15}))}}st.range=t=>{const e=D.add(t,-1,"day"),a=D.add(e,6,"day");let n=e;const s=[];for(;D.lte(n,a,"day");)s.push(n),n=D.add(n,1,"day");return s},st.navigate=(t,e)=>{switch(e){case m.b.PREVIOUS:return D.add(t,-3,"day");case m.b.NEXT:return D.add(t,3,"day");default:return t}},st.title=t=>" ".concat(t.toLocaleDateString())}}]);