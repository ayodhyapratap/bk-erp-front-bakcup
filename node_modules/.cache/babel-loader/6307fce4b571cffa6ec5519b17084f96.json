{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/calendar/PracticeTimings.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Modal, Card, Form, Icon, Row, Table, Divider } from \"antd\";\nimport { SUCCESS_MSG_TYPE, SINGLE_CHECKBOX_FIELD, TIME_PICKER, CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, NUMBER_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { CALENDER_SETTINGS } from \"../../../../constants/api\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI, displayMessage, interpolate } from \"../../../../utils/common\";\n\nvar PracticeTimings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PracticeTimings, _React$Component);\n\n  function PracticeTimings(props) {\n    var _this;\n\n    _classCallCheck(this, PracticeTimings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PracticeTimings).call(this, props));\n    _this.state = {\n      redirect: false,\n      visible: false,\n      timings: null\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PracticeTimings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          timings: data[0]\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var that = this;\n      var editfields = [{\n        key: \"today_first_day\",\n        type: SINGLE_CHECKBOX_FIELD,\n        initialValue: this.state.timings ? this.state.timings.today_first_day : false,\n        follow: \"Always show today as first day on my calendar\"\n      }, {\n        label: \"Show Calendar Slots of  \",\n        key: \"calendar_slot\",\n        follow: \"mins\",\n        required: true,\n        initialValue: this.state.timings ? this.state.timings.calendar_slot : null,\n        type: NUMBER_FIELD\n      }, {\n        key: \"visting_hour_same_week\",\n        type: SINGLE_CHECKBOX_FIELD,\n        initialValue: this.state.timings ? this.state.timings.visting_hour_same_week : false,\n        follow: \"Visiting hours are  same for all working days in a week\"\n      }, {\n        label: \"Practice open at\",\n        key: \"start_time\",\n        type: TIME_PICKER,\n        initialValue: this.state.timings ? this.state.timings.start_time : null,\n        format: \"HH:mm\"\n      }, {\n        label: \"Practice close at\",\n        key: \"end_time\",\n        type: TIME_PICKER,\n        initialValue: this.state.timings ? this.state.timings.end_time : null,\n        format: \"HH:mm\"\n      }];\n      var formProp = {\n        successFn: function successFn(data) {\n          that.loadData();\n          console.log(data);\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]),\n        method: \"post\"\n      };\n\n      if (this.state.timings) {\n        var editFormDefaultValues = [{\n          \"key\": \"practice\",\n          \"value\": this.props.active_practiceId\n        }, {\n          \"key\": \"id\",\n          \"value\": this.state.timings.id\n        }];\n        var TestFormLayout = Form.create()(DynamicFieldsForm);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(TestFormLayout, {\n          title: \"Set Practice Timings\",\n          defaultValues: editFormDefaultValues,\n          formProp: formProp,\n          fields: editfields,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }));\n      } else {\n        var _editFormDefaultValues = [{\n          \"key\": \"practice\",\n          \"value\": this.props.active_practiceId\n        }];\n\n        var _TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(_TestFormLayout, {\n          title: \"Set Practice Timings\",\n          defaultValues: _editFormDefaultValues,\n          formProp: formProp,\n          fields: editfields,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return PracticeTimings;\n}(React.Component);\n\nexport default PracticeTimings;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/calendar/PracticeTimings.js"],"names":["React","DynamicFieldsForm","Button","Modal","Card","Form","Icon","Row","Table","Divider","SUCCESS_MSG_TYPE","SINGLE_CHECKBOX_FIELD","TIME_PICKER","CHECKBOX_FIELD","INPUT_FIELD","RADIO_FIELD","NUMBER_FIELD","SELECT_FIELD","CALENDER_SETTINGS","Link","getAPI","displayMessage","interpolate","PracticeTimings","props","state","redirect","visible","timings","loadData","bind","that","successFn","data","setState","errorFn","active_practiceId","redirectVar","editfields","key","type","initialValue","today_first_day","follow","label","required","calendar_slot","visting_hour_same_week","start_time","format","end_time","formProp","console","log","action","method","editFormDefaultValues","id","TestFormLayout","create","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Modal, Card, Form, Icon, Row, Table, Divider} from \"antd\";\nimport {\n    SUCCESS_MSG_TYPE,\n    SINGLE_CHECKBOX_FIELD,\n    TIME_PICKER,\n    CHECKBOX_FIELD,\n    INPUT_FIELD,\n    RADIO_FIELD,\n    NUMBER_FIELD,\n    SELECT_FIELD\n} from \"../../../../constants/dataKeys\";\nimport {CALENDER_SETTINGS} from \"../../../../constants/api\"\nimport {Link} from \"react-router-dom\";\nimport {getAPI, displayMessage, interpolate} from \"../../../../utils/common\";\n\nclass PracticeTimings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            visible: false,\n            timings: null\n        };\n        this.loadData = this.loadData.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        var that = this;\n        let successFn = function (data) {\n            that.setState({\n                timings: data[0],\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n\n        let that = this;\n\n        const editfields = [{\n            key: \"today_first_day\",\n            type: SINGLE_CHECKBOX_FIELD,\n            initialValue: this.state.timings ? this.state.timings.today_first_day : false,\n            follow: \"Always show today as first day on my calendar\"\n        }, {\n            label: \"Show Calendar Slots of  \",\n            key: \"calendar_slot\",\n            follow: \"mins\",\n            required: true,\n            initialValue: this.state.timings ? this.state.timings.calendar_slot : null,\n            type: NUMBER_FIELD\n        }, {\n            key: \"visting_hour_same_week\",\n            type: SINGLE_CHECKBOX_FIELD,\n            initialValue: this.state.timings ? this.state.timings.visting_hour_same_week : false,\n            follow: \"Visiting hours are  same for all working days in a week\"\n        }, {\n            label: \"Practice open at\",\n            key: \"start_time\",\n            type: TIME_PICKER,\n            initialValue: this.state.timings ? this.state.timings.start_time : null,\n            format: \"HH:mm\"\n        }, {\n            label: \"Practice close at\",\n            key: \"end_time\",\n            type: TIME_PICKER,\n            initialValue: this.state.timings ? this.state.timings.end_time : null,\n            format: \"HH:mm\"\n        },\n            //  {\n            //     key: \"update_profile_online\",\n            //     type: SINGLE_CHECKBOX_FIELD,\n            //     initialValue: this.state.timings?this.state.timings.update_profile_online:null,\n            //     follow: \"Update timings on online profile as well\"\n            // },\n        ];\n        const formProp = {\n            successFn: function (data) {\n                that.loadData();\n                console.log(data);\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]),\n            method: \"post\",\n        }\n        if (this.state.timings) {\n            let editFormDefaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId},\n                {\"key\": \"id\", \"value\": this.state.timings.id}];\n            const TestFormLayout = Form.create()(DynamicFieldsForm);\n            return <div>\n                <TestFormLayout title=\"Set Practice Timings\" defaultValues={editFormDefaultValues} formProp={formProp}\n                                fields={editfields}/>\n            </div>\n        }\n        else {\n            const editFormDefaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n            const TestFormLayout = Form.create()(DynamicFieldsForm);\n            return <div>\n                <TestFormLayout title=\"Set Practice Timings\" defaultValues={editFormDefaultValues} formProp={formProp}\n                                fields={editfields}/>\n            </div>\n        }\n    }\n}\n\nexport default PracticeTimings;\n"]},"metadata":{},"sourceType":"module"}