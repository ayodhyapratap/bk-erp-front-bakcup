{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/expenses-types/ExpensesTypes.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Modal, Card, Form, Icon, Row, Table, Divider, Popconfirm } from \"antd\";\nimport { SUCCESS_MSG_TYPE, CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, NUMBER_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { EXPENSE_TYPE } from \"../../../../constants/api\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI, displayMessage, interpolate, postAPI } from \"../../../../utils/common\";\nimport CustomizedTable from \"../../../common/CustomizedTable\";\n\nvar ExpensesTypes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExpensesTypes, _React$Component);\n\n  function ExpensesTypes(props) {\n    var _this;\n\n    _classCallCheck(this, ExpensesTypes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExpensesTypes).call(this, props));\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      redirect: false,\n      visible: false,\n      expenses: null\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteObject = _this.deleteObject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ExpensesTypes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          expenses: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(EXPENSE_TYPE, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"editTax\",\n    value: function editTax(value) {\n      this.setState({\n        editingId: value.id,\n        editingName: value.name,\n        editingValue: value.tax_value,\n        visible: true\n      });\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(EXPENSE_TYPE, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var columns = [{\n        title: 'Expense Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editTax(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"  Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this?\",\n            onConfirm: function onConfirm() {\n              return that.deleteObject(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n      }];\n      var fields = [{\n        label: \"Expense name\",\n        key: \"name\",\n        required: true,\n        type: INPUT_FIELD\n      }];\n      var editfields = [{\n        label: \"Expense name\",\n        key: \"name\",\n        required: true,\n        initialValue: this.state.editingName,\n        type: INPUT_FIELD\n      }];\n      var formProp = {\n        successFn: function successFn(data) {\n          that.handleCancel();\n          that.loadData();\n          console.log(data);\n          console.log(\"sucess\");\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(EXPENSE_TYPE, [this.props.active_practiceId]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n      var editFormDefaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }, {\n        \"key\": \"id\",\n        \"value\": this.state.editingId\n      }];\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        title: \"Expenses Types\",\n        defaultValues: defaultValues,\n        formProp: formProp,\n        fields: fields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(CustomizedTable, {\n        columns: columns,\n        dataSource: this.state.expenses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        title: \"Basic Modal\",\n        visible: this.state.visible,\n        footer: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        title: \"edit Expence\",\n        defaultValues: editFormDefaultValues,\n        formProp: formProp,\n        fields: editfields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Return\"), \",\"));\n    }\n  }]);\n\n  return ExpensesTypes;\n}(React.Component);\n\nexport default ExpensesTypes;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/expenses-types/ExpensesTypes.js"],"names":["React","DynamicFieldsForm","Button","Modal","Card","Form","Icon","Row","Table","Divider","Popconfirm","SUCCESS_MSG_TYPE","CHECKBOX_FIELD","INPUT_FIELD","RADIO_FIELD","NUMBER_FIELD","SELECT_FIELD","EXPENSE_TYPE","Link","getAPI","displayMessage","interpolate","postAPI","CustomizedTable","ExpensesTypes","props","handleCancel","setState","visible","state","redirect","expenses","loadData","bind","deleteObject","that","successFn","data","console","log","errorFn","active_practiceId","redirectVar","value","editingId","id","editingName","name","editingValue","tax_value","record","reqData","is_active","columns","title","dataIndex","key","render","text","editTax","fields","label","required","type","editfields","initialValue","formProp","action","method","defaultValues","editFormDefaultValues","TestFormLayout","create","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Modal, Card, Form, Icon, Row, Table, Divider, Popconfirm} from \"antd\";\nimport {SUCCESS_MSG_TYPE, CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, NUMBER_FIELD, SELECT_FIELD} from \"../../../../constants/dataKeys\";\nimport {EXPENSE_TYPE} from \"../../../../constants/api\"\nimport {Link} from \"react-router-dom\";\nimport {getAPI, displayMessage, interpolate, postAPI} from \"../../../../utils/common\";\nimport CustomizedTable from \"../../../common/CustomizedTable\";\n\nclass ExpensesTypes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          redirect: false,\n          visible: false,\n          expenses:null\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n\n    }\n    componentDidMount(){\n      this.loadData();\n    }\n    loadData(){\n      var that = this;\n        let successFn = function (data) {\n          console.log(\"get table\");\n          that.setState({\n            expenses:data,\n          })\n        };\n        let errorFn = function () {\n        };\n       getAPI(interpolate( EXPENSE_TYPE, [this.props.active_practiceId]), successFn, errorFn);\n    }\n    changeRedirect(){\n      var redirectVar=this.state.redirect;\n    this.setState({\n      redirect:  !redirectVar,\n    })  ;\n    }\n    editTax(value){\n      this.setState({\n        editingId:value.id,\n        editingName: value.name,\n        editingValue:value.tax_value,\n\n        visible: true,\n      })\n    }\n    handleCancel = () => {\n        this.setState({ visible: false });\n    }\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        postAPI(interpolate(EXPENSE_TYPE, [this.props.active_practiceId]), reqData, successFn, errorFn)\n    }\n\n\n\n    render() {\n      let that =this;\n      const columns = [{\n            title: 'Expense Name',\n            dataIndex: 'name',\n            key: 'name',\n          },{\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n              <span>\n              <a onClick={()=>this.editTax(record)}>  Edit</a>\n                <Divider type=\"vertical\" />\n                <Popconfirm title=\"Are you sure delete this?\"\n                            onConfirm={() => that.deleteObject(record)} okText=\"Yes\" cancelText=\"No\">\n                  <a>Delete</a>\n              </Popconfirm>\n              </span>\n            ),\n          }];\n      const   fields= [{\n            label: \"Expense name\",\n            key: \"name\",\n            required: true,\n            type: INPUT_FIELD\n        },];\n      const   editfields= [{\n              label: \"Expense name\",\n              key: \"name\",\n              required: true,\n              initialValue:this.state.editingName,\n              type: INPUT_FIELD\n          },];\n      const formProp={\n        successFn:function(data){\n          that.handleCancel();\n          that.loadData();\n          console.log(data);\n          console.log(\"sucess\");\n          displayMessage(SUCCESS_MSG_TYPE, \"success\")\n        },\n        errorFn:function(){\n\n        },\n        action: interpolate(EXPENSE_TYPE,[this.props.active_practiceId]),\n        method: \"post\",\n      }\n      const defaultValues = [{\"key\":\"practice\", \"value\":this.props.active_practiceId}];\n      const editFormDefaultValues = [{\"key\":\"practice\", \"value\":this.props.active_practiceId}, {\"key\":\"id\", \"value\":this.state.editingId}];\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        return <div><Card>\n            <TestFormLayout title=\"Expenses Types\" defaultValues={defaultValues} formProp={formProp}  fields={fields}/>\n            <Divider/>\n            <CustomizedTable columns={columns}  dataSource={this.state.expenses}/>\n            </Card>\n            <Modal\n             title=\"Basic Modal\"\n             visible={this.state.visible}\n             footer={null}\n             >\n\n              <TestFormLayout title=\"edit Expence\" defaultValues={editFormDefaultValues} formProp={formProp}  fields={editfields}/>\n              <Button key=\"back\" onClick={this.handleCancel}>Return</Button>,\n\n           </Modal>\n        </div>\n    }\n}\n\nexport default ExpensesTypes;\n"]},"metadata":{},"sourceType":"module"}