{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _rcDrawer = require('rc-drawer');\n\nvar _rcDrawer2 = _interopRequireDefault(_rcDrawer);\n\nvar _createReactContext = require('create-react-context');\n\nvar _createReactContext2 = _interopRequireDefault(_createReactContext);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar DrawerContext = (0, _createReactContext2['default'])(null);\n\nvar Drawer = function (_React$Component) {\n  (0, _inherits3['default'])(Drawer, _React$Component);\n\n  function Drawer() {\n    (0, _classCallCheck3['default'])(this, Drawer);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).apply(this, arguments));\n\n    _this.state = {\n      push: false\n    };\n\n    _this.close = function (e) {\n      if (_this.props.visible !== undefined) {\n        if (_this.props.onClose) {\n          _this.props.onClose(e);\n        }\n\n        return;\n      }\n    };\n\n    _this.onMaskClick = function (e) {\n      if (!_this.props.maskClosable) {\n        return;\n      }\n\n      _this.close(e);\n    };\n\n    _this.push = function () {\n      _this.setState({\n        push: true\n      });\n    };\n\n    _this.pull = function () {\n      _this.setState({\n        push: false\n      });\n    };\n\n    _this.onDestoryTransitionEnd = function () {\n      var isDestroyOnClose = _this.getDestoryOnClose();\n\n      if (!isDestroyOnClose) {\n        return;\n      }\n\n      if (!_this.props.visible) {\n        _this.destoryClose = true;\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.getDestoryOnClose = function () {\n      return _this.props.destroyOnClose && !_this.props.visible;\n    }; // get drawar push width or height\n\n\n    _this.getPushTransform = function (placement) {\n      if (placement === 'left' || placement === 'right') {\n        return 'translateX(' + (placement === 'left' ? 180 : -180) + 'px)';\n      }\n\n      if (placement === 'top' || placement === 'bottom') {\n        return 'translateY(' + (placement === 'top' ? 180 : -180) + 'px)';\n      }\n    }; // render drawer body dom\n\n\n    _this.renderBody = function () {\n      if (_this.destoryClose && !_this.props.visible) {\n        return null;\n      }\n\n      _this.destoryClose = false;\n      var placement = _this.props.placement;\n      var containerStyle = placement === 'left' || placement === 'right' ? {\n        overflow: 'auto',\n        height: '100%'\n      } : {};\n\n      var isDestroyOnClose = _this.getDestoryOnClose();\n\n      if (isDestroyOnClose) {\n        // Increase the opacity transition, delete children after closing.\n        containerStyle.opacity = 0;\n        containerStyle.transition = 'opacity .3s';\n      }\n\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          title = _this$props.title,\n          closable = _this$props.closable; // is have header dom\n\n      var header = void 0;\n\n      if (title) {\n        header = React.createElement('div', {\n          className: prefixCls + '-header'\n        }, React.createElement('div', {\n          className: prefixCls + '-title'\n        }, title));\n      } // is have closer button\n\n\n      var closer = void 0;\n\n      if (closable) {\n        closer = React.createElement('button', {\n          onClick: _this.close,\n          'aria-label': 'Close',\n          className: prefixCls + '-close'\n        }, React.createElement('span', {\n          className: prefixCls + '-close-x'\n        }, React.createElement(_icon2['default'], {\n          type: 'close'\n        })));\n      }\n\n      return React.createElement('div', {\n        className: prefixCls + '-wrapper-body',\n        style: containerStyle,\n        onTransitionEnd: _this.onDestoryTransitionEnd\n      }, header, closer, React.createElement('div', {\n        className: prefixCls + '-body',\n        style: _this.props.style\n      }, _this.props.children));\n    };\n\n    _this.getRcDrawerStyle = function () {\n      var _this$props2 = _this.props,\n          zIndex = _this$props2.zIndex,\n          placement = _this$props2.placement,\n          maskStyle = _this$props2.maskStyle;\n      return _this.state.push ? (0, _extends3['default'])({}, maskStyle, {\n        zIndex: zIndex,\n        transform: _this.getPushTransform(placement)\n      }) : (0, _extends3['default'])({}, maskStyle, {\n        zIndex: zIndex\n      });\n    }; // render Provider for Multi-level drawe\n\n\n    _this.renderProvider = function (value) {\n      var _a = _this.props,\n          zIndex = _a.zIndex,\n          style = _a.style,\n          placement = _a.placement,\n          className = _a.className,\n          wrapClassName = _a.wrapClassName,\n          width = _a.width,\n          height = _a.height,\n          rest = __rest(_a, [\"zIndex\", \"style\", \"placement\", \"className\", \"wrapClassName\", \"width\", \"height\"]);\n\n      (0, _warning2['default'])(wrapClassName === undefined, 'wrapClassName is deprecated, please use className instead.');\n      var haveMask = rest.mask ? \"\" : \"no-mask\";\n      _this.parentDrawer = value;\n      var offsetStyle = {};\n\n      if (placement === 'left' || placement === 'right') {\n        offsetStyle.width = width;\n      } else {\n        offsetStyle.height = height;\n      }\n\n      return React.createElement(DrawerContext.Provider, {\n        value: _this\n      }, React.createElement(_rcDrawer2['default'], (0, _extends3['default'])({\n        handler: false\n      }, rest, offsetStyle, {\n        open: _this.props.visible,\n        onMaskClick: _this.onMaskClick,\n        showMask: _this.props.mask,\n        placement: placement,\n        style: _this.getRcDrawerStyle(),\n        className: (0, _classnames2['default'])(wrapClassName, className, haveMask)\n      }), _this.renderBody()));\n    };\n\n    return _this;\n  }\n\n  (0, _createClass3['default'])(Drawer, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(preProps) {\n      if (preProps.visible !== this.props.visible && this.parentDrawer) {\n        if (this.props.visible) {\n          this.parentDrawer.push();\n        } else {\n          this.parentDrawer.pull();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(DrawerContext.Consumer, null, this.renderProvider);\n    }\n  }]);\n  return Drawer;\n}(React.Component);\n\nexports['default'] = Drawer;\nDrawer.propTypes = {\n  closable: PropTypes.bool,\n  destroyOnClose: PropTypes.bool,\n  getContainer: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func, PropTypes.bool]),\n  maskClosable: PropTypes.bool,\n  mask: PropTypes.bool,\n  maskStyle: PropTypes.object,\n  style: PropTypes.object,\n  title: PropTypes.node,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  zIndex: PropTypes.number,\n  prefixCls: PropTypes.string,\n  placement: PropTypes.string,\n  onClose: PropTypes.func,\n  className: PropTypes.string\n};\nDrawer.defaultProps = {\n  prefixCls: 'ant-drawer',\n  width: 256,\n  height: 256,\n  closable: true,\n  placement: 'right',\n  maskClosable: true,\n  mask: true,\n  level: null\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}