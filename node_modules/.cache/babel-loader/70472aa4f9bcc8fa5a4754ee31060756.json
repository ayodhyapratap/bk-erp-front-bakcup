{"ast":null,"code":"import _toConsumableArray from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/PatientSelection.js\";\nimport React from \"react\";\nimport { Avatar, Input, Card, Col, Icon, Radio, Row, Button } from \"antd\";\nimport { getAPI, interpolate, postAPI } from \"../../utils/common\";\nimport { PATIENT_GROUPS, SEARCH_PATIENT, PATIENTS_LIST } from \"../../constants/api\";\nvar Meta = Card.Meta;\nvar Search = Input.Search;\n\nvar PatientSelection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientSelection, _React$Component);\n\n  function PatientSelection(props) {\n    var _this;\n\n    _classCallCheck(this, PatientSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientSelection).call(this, props));\n    _this.state = {\n      patientListData: [],\n      patientGroup: [],\n      morePatients: null\n    };\n    _this.getPatientListData = _this.getPatientListData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.searchPatient = _this.searchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMorePatient = _this.getMorePatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientSelection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPatientListData();\n      this.getPatientGroup();\n    }\n  }, {\n    key: \"getPatientGroup\",\n    value: function getPatientGroup() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          patientGroup: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PATIENT_GROUPS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"getPatientListData\",\n    value: function getPatientListData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          patientListData: data.results,\n          morePatients: data.next,\n          currentPage: data.current\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(PATIENTS_LIST, successFn, errorFn);\n    }\n  }, {\n    key: \"searchPatient\",\n    value: function searchPatient(e) {\n      console.log(e.target.value);\n      var that = this;\n\n      var successFn = function successFn(data) {\n        if (data) {\n          that.setState({\n            patientListData: data\n          });\n        }\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(SEARCH_PATIENT, [e.target.value]), successFn, errorFn);\n    }\n  }, {\n    key: \"getMorePatient\",\n    value: function getMorePatient() {\n      var that = this;\n      var current = this.state.currentPage;\n\n      var successFn = function successFn(data) {\n        if (data.current == current + 1) that.setState(function (prevState) {\n          return {\n            patientListData: _toConsumableArray(prevState.patientListData).concat(_toConsumableArray(data.results)),\n            morePatients: data.next,\n            currentPage: data.current\n          };\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(PATIENTS_LIST, successFn, errorFn, {\n        page: parseInt(current) + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 6,\n        style: {\n          height: 'calc(100vh - 55px)',\n          overflow: 'auto',\n          padding: '10px',\n          // backgroundColor: '#e3e5e6',\n          borderRight: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        buttonStyle: \"solid\",\n        defaultValue: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Patients\"), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"All Patents\"), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Recently Visited\"), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Recently Added\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Groups\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"My Groups\")), this.state.patientGroup.map(function (group) {\n        return React.createElement(Radio.Button, {\n          style: {\n            width: '100%',\n            backgroundColor: 'transparent',\n            border: '0px'\n          },\n          value: group.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, group.name);\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Membership\")))), React.createElement(Col, {\n        span: 18,\n        style: {\n          overflow: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Search, {\n        placeholder: \"input search text\",\n        onChange: function onChange(value) {\n          return _this2.searchPatient(value);\n        },\n        enterButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), this.state.patientListData.length ? this.state.patientListData.map(function (patient) {\n        return React.createElement(PatientCard, Object.assign({}, patient, {\n          setCurrentPatient: that.props.setCurrentPatient,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }));\n      }) : React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"No Data Found\"), this.state.morePatients ? React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.getMorePatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Load More...\")) : null));\n    }\n  }]);\n\n  return PatientSelection;\n}(React.Component);\n\nexport default PatientSelection;\n\nfunction PatientCard(patient) {\n  return React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: function onClick() {\n      return patient.setCurrentPatient(patient);\n    },\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Meta, {\n    avatar: patient.image ? React.createElement(Avatar, {\n      src: patient.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(Avatar, {\n      style: {\n        backgroundColor: '#87d068'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, patient.name ? patient.name.charAt(0) : React.createElement(Icon, {\n      type: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })),\n    title: patient.name,\n    description: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, patient.primary_mobile_no, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), patient.email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/PatientSelection.js"],"names":["React","Avatar","Input","Card","Col","Icon","Radio","Row","Button","getAPI","interpolate","postAPI","PATIENT_GROUPS","SEARCH_PATIENT","PATIENTS_LIST","Meta","Search","PatientSelection","props","state","patientListData","patientGroup","morePatients","getPatientListData","bind","searchPatient","getMorePatient","getPatientGroup","that","successFn","data","setState","errorFn","active_practiceId","results","next","currentPage","current","e","console","log","target","value","prevState","page","parseInt","height","overflow","padding","borderRight","width","backgroundColor","border","map","group","id","name","length","patient","setCurrentPatient","textAlign","Component","PatientCard","margin","image","charAt","primary_mobile_no","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Input, Card, Col, Icon, Radio, Row, Button} from \"antd\";\nimport {getAPI, interpolate, postAPI} from \"../../utils/common\";\nimport {PATIENT_GROUPS, SEARCH_PATIENT, PATIENTS_LIST} from \"../../constants/api\";\n\nconst {Meta} = Card;\nconst Search = Input.Search;\n\nclass PatientSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientListData: [],\n            patientGroup: [],\n            morePatients: null\n        }\n        this.getPatientListData = this.getPatientListData.bind(this);\n        this.searchPatient = this.searchPatient.bind(this);\n        this.getMorePatient = this.getMorePatient.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPatientListData();\n        this.getPatientGroup();\n    }\n\n    getPatientGroup() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                patientGroup: data\n            });\n        };\n        let errorFn = function () {\n\n        };\n        getAPI(interpolate(PATIENT_GROUPS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    getPatientListData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                patientListData: data.results,\n                morePatients: data.next,\n                currentPage: data.current\n            })\n        };\n        let errorFn = function () {\n\n        };\n        getAPI(PATIENTS_LIST, successFn, errorFn);\n    }\n\n    searchPatient(e) {\n        console.log(e.target.value);\n        let that = this;\n        let successFn = function (data) {\n            if (data) {\n                that.setState({\n                    patientListData: data\n                })\n            }\n        };\n        let errorFn = function () {\n\n        };\n        getAPI(interpolate(SEARCH_PATIENT, [e.target.value]), successFn, errorFn);\n    }\n\n    getMorePatient() {\n        let that = this;\n        let current = this.state.currentPage;\n        let successFn = function (data) {\n            if (data.current == current + 1)\n                that.setState(function (prevState) {\n                    return {\n                        patientListData: [...prevState.patientListData, ...data.results],\n                        morePatients: data.next,\n                        currentPage: data.current\n                    }\n                })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(PATIENTS_LIST, successFn, errorFn, {page: parseInt(current) + 1});\n    }\n\n    render() {\n        let that = this;\n        return <Row>\n            <Col span={6}\n                 style={{\n                     height: 'calc(100vh - 55px)',\n                     overflow: 'auto',\n                     padding: '10px',\n                     // backgroundColor: '#e3e5e6',\n                     borderRight: '1px solid #ccc'\n                 }}>\n                <Radio.Group buttonStyle=\"solid\" defaultValue=\"all\">\n                    <h2>Patients</h2>\n                    <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value=\"all\">\n                        All Patents\n                    </Radio.Button>\n                    <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value=\"b\">\n                        Recently Visited\n                    </Radio.Button>\n                    <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value=\"c\">\n                        Recently Added\n                    </Radio.Button>\n                    <p><br/></p>\n                    <h2>Groups</h2>\n                    <p><b>My Groups</b></p>\n                    {this.state.patientGroup.map((group) => <Radio.Button\n                        style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value={group.id}>\n                        {group.name}\n                    </Radio.Button>)}\n\n                    <p><br/></p>\n                    <p><b>Membership</b></p>\n                </Radio.Group>\n            </Col>\n            <Col span={18} style={{overflow: 'scroll'}}>\n                <Search placeholder=\"input search text\"\n                        onChange={value => this.searchPatient(value)}\n                        enterButton/>\n\n                {this.state.patientListData.length ?\n                    this.state.patientListData.map((patient) => <PatientCard {...patient}\n                                                                             setCurrentPatient={that.props.setCurrentPatient}/>) :\n                    <p style={{textAlign: 'center'}}>No Data Found</p>\n                }\n                {this.state.morePatients ?\n                    <div style={{textAlign: 'center'}}><Button type=\"primary\" onClick={this.getMorePatient}>Load\n                        More...</Button></div> : null}\n            </Col>\n        </Row>\n    }\n}\n\nexport default PatientSelection;\n\nfunction PatientCard(patient) {\n    return <Col span={8}>\n        <Card onClick={() => patient.setCurrentPatient(patient)} style={{margin: '5px'}}>\n            <Meta avatar={(patient.image ? <Avatar src={patient.image}/> :\n                <Avatar style={{backgroundColor: '#87d068'}}>\n                    {patient.name ? patient.name.charAt(0) :\n                        <Icon type=\"user\"/>}\n                </Avatar>)}\n                  title={patient.name}\n                  description={<span>{patient.primary_mobile_no}<br/>{patient.email}</span>}/>\n        </Card>\n    </Col>;\n}\n"]},"metadata":{},"sourceType":"module"}