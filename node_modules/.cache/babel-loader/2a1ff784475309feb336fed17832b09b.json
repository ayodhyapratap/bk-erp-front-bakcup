{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/practice-detail/PracticeDetails.js\";\nimport React from \"react\";\nimport { Button, Divider, Card, Icon, Row, Table } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { ALL_PRACTICE, PRACTICE_DELETE } from \"../../../../constants/api\";\nimport { getAPI, interpolate, postAPI } from \"../../../../utils/common\";\n\nvar PracticeDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PracticeDetails, _React$Component);\n\n  function PracticeDetails(props) {\n    var _this;\n\n    _classCallCheck(this, PracticeDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PracticeDetails).call(this, props));\n    _this.state = {\n      practiceList: [],\n      specialisations: null\n    };\n    _this.deletePractice = _this.deletePractice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PracticeDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.refreshClinicData();\n      this.admin_practiceData();\n    }\n  }, {\n    key: \"admin_practiceData\",\n    value: function admin_practiceData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        var specialisations = {};\n        data[0].specialisations.forEach(function (speciality) {\n          specialisations[speciality.id] = speciality;\n        });\n        console.log(specialisations);\n        that.setState({\n          practiceList: data,\n          specialisations: specialisations\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(ALL_PRACTICE, successFn, errorFn);\n    } // clinicData(){\n    //   let  practice=loggedInUserPractices();\n    //   console.log(practice);\n    //   var practiceKeys = Object.keys(practice);\n    //   let practiceArray = [];\n    //   practiceKeys.forEach(function(key){\n    //     let successFn = function (data) {\n    //       practiceArray.push(data)\n    //       console.log(practiceArray);\n    //     }\n    //     let errorFn = function () {\n    //     };\n    //     getAPI(interpolate(PRACTICE,[key]), successFn, errorFn);\n    //\n    //   });\n    //   this.setState({\n    //     practiceList:practiceArray\n    //   })\n    //\n    // }\n\n  }, {\n    key: \"deletePractice\",\n    value: function deletePractice(value) {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"data\");\n        that.props.refreshClinicData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(PRACTICE_DELETE, [value]), {}, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var specialisations = {};\n\n      if (this.props.activePracticeData) {\n        this.props.activePracticeData.specialisations.forEach(function (speciality) {\n          specialisations[speciality.id] = speciality.name;\n        });\n      }\n\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: function render(text) {\n          return React.createElement(\"a\", {\n            href: \"javascript:;\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, text);\n        }\n      }, {\n        title: 'Tagline',\n        dataIndex: 'tagline',\n        key: 'tagline'\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address'\n      }, {\n        title: 'Specialisation',\n        key: 'specialisation',\n        dataIndex: 'specialisation'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: '/settings/clinics/' + record.id + '/edit',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }), that.props.practiceList.length > 1 ? React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.deletePractice(record.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \"Delete\") : null);\n        }\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Practice Details\", React.createElement(Link, {\n        to: \"/settings/clinics/add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \"\\xA0Add\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Table, {\n        pagination: false,\n        columns: columns,\n        dataSource: this.state.practiceList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PracticeDetails;\n}(React.Component);\n\nexport default PracticeDetails;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/practice-detail/PracticeDetails.js"],"names":["React","Button","Divider","Card","Icon","Row","Table","Link","ALL_PRACTICE","PRACTICE_DELETE","getAPI","interpolate","postAPI","PracticeDetails","props","state","practiceList","specialisations","deletePractice","bind","admin_practiceData","that","successFn","data","forEach","speciality","id","console","log","setState","errorFn","value","refreshClinicData","activePracticeData","name","columns","title","dataIndex","key","render","text","record","length","float","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Divider, Card, Icon, Row, Table} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {ALL_PRACTICE, PRACTICE_DELETE} from \"../../../../constants/api\";\nimport {getAPI, interpolate, postAPI} from \"../../../../utils/common\";\n\n\nclass PracticeDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            practiceList: [],\n            specialisations: null,\n        };\n        this.deletePractice = this.deletePractice.bind(this);\n    }\n\n    componentDidMount() {\n        // this.props.refreshClinicData();\n        this.admin_practiceData();\n    }\n\n    admin_practiceData() {\n        var that = this;\n        let successFn = function (data) {\n            let specialisations = {};\n            data[0].specialisations.forEach(function (speciality) {\n                specialisations[speciality.id] = speciality\n            });\n            console.log(specialisations);\n\n            that.setState({\n                practiceList: data,\n                specialisations: specialisations,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(ALL_PRACTICE, successFn, errorFn);\n\n    }\n\n    // clinicData(){\n    //   let  practice=loggedInUserPractices();\n    //   console.log(practice);\n    //   var practiceKeys = Object.keys(practice);\n    //   let practiceArray = [];\n    //   practiceKeys.forEach(function(key){\n    //     let successFn = function (data) {\n    //       practiceArray.push(data)\n    //       console.log(practiceArray);\n    //     }\n    //     let errorFn = function () {\n    //     };\n    //     getAPI(interpolate(PRACTICE,[key]), successFn, errorFn);\n    //\n    //   });\n    //   this.setState({\n    //     practiceList:practiceArray\n    //   })\n    //\n    // }\n\n    deletePractice(value) {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"data\");\n            that.props.refreshClinicData();\n        };\n        let errorFn = function () {\n        };\n        postAPI(interpolate(PRACTICE_DELETE, [value]), {}, successFn, errorFn);\n\n    }\n\n    render() {\n        let that = this;\n        let specialisations = {};\n        if (this.props.activePracticeData) {\n            this.props.activePracticeData.specialisations.forEach(function (speciality) {\n                specialisations[speciality.id] = speciality.name\n            });\n        }\n        const columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a href=\"javascript:;\">{text}</a>,\n        }, {\n            title: 'Tagline',\n            dataIndex: 'tagline',\n            key: 'tagline',\n        }, {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n        }, {\n            title: 'Specialisation',\n            key: 'specialisation',\n            dataIndex: 'specialisation',\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                <Link to={'/settings/clinics/' + record.id + '/edit'}>Edit</Link>\n                <Divider type=\"vertical\"/>\n                    {that.props.practiceList.length > 1\n                        ? <a onClick={() => this.deletePractice(record.id)}>Delete</a> : null}\n              </span>\n            ),\n        }];\n\n        return <Row>\n            <h2>Practice Details\n                <Link to=\"/settings/clinics/add\">\n                    <Button type=\"primary\" style={{float: 'right'}}>\n                        <Icon type=\"plus\"/>&nbsp;Add\n                    </Button>\n                </Link>\n            </h2>\n            <Card>\n                <Table pagination={false} columns={columns} dataSource={this.state.practiceList}/>\n            </Card>\n        </Row>\n    }\n}\n\nexport default PracticeDetails;\n"]},"metadata":{},"sourceType":"module"}