{"ast":null,"code":"import _defineProperty from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/auth/forms/ChangePasswordForm.js\";\nimport React from \"react\";\nimport { Button, Form, Icon, message, Input } from \"antd\";\nimport { postAPI, putAPI, validatePassword } from \"../../../utils/common\";\nimport { CHANGE_PASSWORD } from \"../../../constants/api\";\nimport { NEW_PASSWORD, OLD_PASSWORD } from \"../../../constants/formLabels\";\nvar FormItem = Form.Item;\n\nvar ChangePasswordForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChangePasswordForm, _React$Component);\n\n  function ChangePasswordForm(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePasswordForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePasswordForm).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          var _data;\n\n          that.setState({\n            changePassLoading: true\n          });\n          var data = (_data = {}, _defineProperty(_data, OLD_PASSWORD, values.oldPass), _defineProperty(_data, NEW_PASSWORD, values.newPass), _data);\n\n          var successFn = function successFn(data) {\n            message.success(data.message);\n            that.setState({\n              changePassLoading: false\n            });\n          };\n\n          var errorFn = function errorFn() {\n            that.setState({\n              changePassLoading: false\n            });\n          };\n\n          postAPI(CHANGE_PASSWORD, data, successFn, errorFn);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value != form.getFieldValue('newPass')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      callback(validatePassword(rule, value, callback));\n    };\n\n    _this.state = {\n      confirmDirty: false,\n      changePassLoading: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ChangePasswordForm, [{\n    key: \"render\",\n    value: function render() {\n      var formItemLayout = {\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 14\n        }\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"Old Password\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), getFieldDecorator('oldPass', {\n        rules: [{\n          required: true,\n          message: 'Please enter your old Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Old Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"New Password\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), getFieldDecorator('newPass', {\n        rules: [{\n          required: true,\n          message: 'Please enter your new Password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"Confirm Password\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), getFieldDecorator('confirmPass', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your new Password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Button, {\n        loading: this.state.changePassLoading,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Change Password\")));\n    }\n  }]);\n\n  return ChangePasswordForm;\n}(React.Component);\n\nexport { ChangePasswordForm as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/auth/forms/ChangePasswordForm.js"],"names":["React","Button","Form","Icon","message","Input","postAPI","putAPI","validatePassword","CHANGE_PASSWORD","NEW_PASSWORD","OLD_PASSWORD","FormItem","Item","ChangePasswordForm","props","handleSubmit","e","preventDefault","that","form","validateFieldsAndScroll","err","values","setState","changePassLoading","data","oldPass","newPass","successFn","success","errorFn","handleConfirmBlur","value","target","confirmDirty","state","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","bind","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","rules","required","color","validator","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Form, Icon, message, Input} from \"antd\";\nimport {postAPI, putAPI, validatePassword} from \"../../../utils/common\";\nimport {CHANGE_PASSWORD} from \"../../../constants/api\";\nimport {NEW_PASSWORD, OLD_PASSWORD} from \"../../../constants/formLabels\";\n\nconst FormItem = Form.Item;\nexport default class ChangePasswordForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            changePassLoading: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let that = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                that.setState({\n                    changePassLoading: true\n                });\n                let data = {\n                    [OLD_PASSWORD]: values.oldPass,\n                    [NEW_PASSWORD]: values.newPass,\n                };\n                let successFn = function (data) {\n                    message.success(data.message);\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                let errorFn = function () {\n                    that.setState({\n                        changePassLoading: false\n                    });\n                };\n                postAPI(CHANGE_PASSWORD, data, successFn, errorFn);\n            }\n        });\n    };\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value != form.getFieldValue('newPass')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n    validateToNextPassword = (rule, value, callback) => {\n        callback(validatePassword(rule, value, callback));\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem label=\"Old Password\"  {...formItemLayout}>\n                    {getFieldDecorator('oldPass', {\n                        rules: [{required: true, message: 'Please enter your old Password!'}],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"Old Password\"/>\n                    )}\n                </FormItem>\n                <FormItem label=\"New Password\"  {...formItemLayout}>\n                    {getFieldDecorator('newPass', {\n                        rules: [{\n                            required: true, message: 'Please enter your new Password!'\n                        }, {\n                            validator: this.validateToNextPassword\n                        }]\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"New Password\"/>\n                    )}\n                </FormItem>\n                <FormItem label=\"Confirm Password\"  {...formItemLayout}>\n                    {getFieldDecorator('confirmPass', {\n                        rules: [{required: true, message: 'Please confirm your new Password!'}, {\n                            validator: this.compareToFirstPassword\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                               placeholder=\"Confirm Password\" onBlur={this.handleConfirmBlur}/>\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button loading={this.state.changePassLoading} type=\"primary\" htmlType=\"submit\"\n                            className=\"login-form-button\">\n                        Change Password\n                    </Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}