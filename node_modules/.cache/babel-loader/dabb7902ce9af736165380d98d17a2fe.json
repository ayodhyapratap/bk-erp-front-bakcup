{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/payments/AddPayment.js\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Button, Card, Form, Icon, Row } from \"antd\";\nimport { CHECKBOX_FIELD, DATE_PICKER, SINGLE_CHECKBOX_FIELD, NUMBER_FIELD, SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../constants/dataKeys\";\nimport { PRESCRIPTIONS_API, PATIENT_PAYMENTS_API, PAYMENT_MODES, INVOICES_API, PROCEDURE_CATEGORY, TAXES } from \"../../../constants/api\";\nimport { getAPI, interpolate, displayMessage } from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nvar AddPayment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddPayment, _React$Component);\n\n  function AddPayment(props) {\n    var _this;\n\n    _classCallCheck(this, AddPayment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddPayment).call(this, props));\n    _this.state = {\n      redirect: false,\n      invoices: _this.props.invoices ? _this.props.invoices : null,\n      paymentModes: _this.props.paymentModes ? _this.props.paymentModes : null,\n      editInvoice: _this.props.editInvoice ? _this.props.editInvoice : null\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(\"Working or not\");\n    return _this;\n  }\n\n  _createClass(AddPayment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.invoices == null) {\n        this.loadInvoices();\n      }\n\n      if (this.props.paymentModes == null) {\n        this.loadPaymentModes();\n      }\n    }\n  }, {\n    key: \"loadInvoices\",\n    value: function loadInvoices() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          invoices: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(INVOICES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadPaymentModes\",\n    value: function loadPaymentModes() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          paymentModes: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var invoicesOption = [];\n\n      if (this.state.invoices) {\n        this.state.invoices.forEach(function (drug) {\n          invoicesOption.push({\n            label: drug.id,\n            value: drug.id\n          });\n        });\n      }\n\n      var paymentModesOptions = [];\n\n      if (this.state.paymentModes) {\n        this.state.paymentModes.forEach(function (drug) {\n          paymentModesOptions.push({\n            label: drug.mode,\n            value: drug.id\n          });\n        });\n      }\n\n      var fields = [{\n        label: \"Invoice Id\",\n        key: \"invoice\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.invoice : null,\n        options: invoicesOption\n      }, {\n        label: \"Amount\",\n        key: \"amount\",\n        type: INPUT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.invoice : null\n      }, {\n        label: \"Payment Mode\",\n        key: \"payment_mode\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.payment_mode : null,\n        options: paymentModesOptions\n      }, {\n        label: \"Advance\",\n        key: \"is_advance\",\n        initialValue: this.state.editInvoice ? this.state.editInvoice.is_advance : false,\n        type: SINGLE_CHECKBOX_FIELD\n      }];\n      var editformProp;\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(PATIENT_PAYMENTS_API, [this.props.match.params.id]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n\n      if (this.state.editInvoice) {\n        defaultValues.push({\n          \"key\": \"id\",\n          \"value\": this.state.editInvoice.id\n        });\n      }\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/billing/payments/edit\",\n        render: function render() {\n          return _this2.state.editInvoice ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit payment\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/patient/' + _this2.props.match.params.id + '/billing/invoices',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/billing/payments/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add payment\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/patient/' + this.props.match.params.id + '/billing/payments',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddPayment;\n}(React.Component);\n\nexport default AddPayment;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/payments/AddPayment.js"],"names":["React","Route","DynamicFieldsForm","Button","Card","Form","Icon","Row","CHECKBOX_FIELD","DATE_PICKER","SINGLE_CHECKBOX_FIELD","NUMBER_FIELD","SUCCESS_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","PRESCRIPTIONS_API","PATIENT_PAYMENTS_API","PAYMENT_MODES","INVOICES_API","PROCEDURE_CATEGORY","TAXES","getAPI","interpolate","displayMessage","Redirect","moment","AddPayment","props","state","redirect","invoices","paymentModes","editInvoice","changeRedirect","bind","console","log","loadInvoices","loadPaymentModes","that","successFn","data","setState","errorFn","match","params","id","active_practiceId","redirectVar","invoicesOption","forEach","drug","push","label","value","paymentModesOptions","mode","fields","key","type","initialValue","invoice","options","payment_mode","is_advance","editformProp","TestFormLayout","create","formProp","action","method","defaultValues","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router\";\n\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {CHECKBOX_FIELD, DATE_PICKER,SINGLE_CHECKBOX_FIELD , NUMBER_FIELD,  SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../constants/dataKeys\";\nimport {\n    PRESCRIPTIONS_API,\n    PATIENT_PAYMENTS_API,\n    PAYMENT_MODES,\n    INVOICES_API,\n    PROCEDURE_CATEGORY, TAXES\n} from \"../../../constants/api\";\nimport {getAPI,interpolate, displayMessage} from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\n\n\nclass AddPayment extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect:false,\n            invoices:this.props.invoices?this.props.invoices:null,\n            paymentModes: this.props.paymentModes?this.props.paymentModes:null,\n            editInvoice: this.props.editInvoice?this.props.editInvoice:null,\n\n        }\n        this.changeRedirect= this.changeRedirect.bind(this);\n          console.log(\"Working or not\");\n\n    }\n    componentDidMount(){\n\n        if(this.props.invoices==null){\n            this.loadInvoices()\n        }\n        if(this.props.paymentModes==null){\n            this.loadPaymentModes();\n        }\n\n    }\n\n    loadInvoices(){\n        let that = this;\n        let successFn =function (data){\n            that.setState({\n                invoices:data\n            })\n        }\n        let errorFn = function (){\n\n        }\n        getAPI(interpolate(INVOICES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n    loadPaymentModes(){\n      var that = this;\n        let successFn = function (data) {\n          console.log(\"get table\");\n          that.setState({\n            paymentModes:data,\n          })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate( PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    changeRedirect(){\n        var redirectVar=this.state.redirect;\n        this.setState({\n            redirect:  !redirectVar,\n        })  ;\n    }\n\n\n    render() {\n      const invoicesOption=[]\n      if(this.state.invoices){\n          this.state.invoices.forEach(function(drug){\n              invoicesOption.push({label:(drug.id), value:drug.id} );\n          })\n      }\n      const paymentModesOptions=[]\n      if(this.state.paymentModes){\n          this.state.paymentModes.forEach(function(drug){\n              paymentModesOptions.push({label:(drug.mode), value:drug.id} );\n          })\n      }\n        const  fields= [{\n            label: \"Invoice Id\",\n            key: \"invoice\",\n            type: SELECT_FIELD,\n            initialValue:this.state.editInvoice?this.state.editInvoice.invoice:null,\n            options: invoicesOption\n        },{\n            label: \"Amount\",\n            key: \"amount\",\n            type: INPUT_FIELD,\n            initialValue:this.state.editInvoice?this.state.editInvoice.invoice:null,\n        },{\n            label: \"Payment Mode\",\n            key: \"payment_mode\",\n            type: SELECT_FIELD,\n            initialValue:this.state.editInvoice?this.state.editInvoice.payment_mode:null,\n            options: paymentModesOptions\n        },\n        {\n           label: \"Advance\",\n           key: \"is_advance\",\n           initialValue:this.state.editInvoice?this.state.editInvoice.is_advance:false,\n           type: SINGLE_CHECKBOX_FIELD,\n       }, ];\n\n\n        let editformProp;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp={\n            successFn:function(data){\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n                console.log(data);\n            },\n            errorFn:function(){\n\n            },\n            action:  interpolate(PATIENT_PAYMENTS_API, [this.props.match.params.id]),\n            method: \"post\",\n        }\n        let defaultValues=[{\"key\":\"practice\", \"value\":this.props.active_practiceId}];\n        if(this.state.editInvoice){\n         defaultValues.push({\"key\":\"id\", \"value\":this.state.editInvoice.id});\n      }\n        return <Row>\n            <Card>\n                <Route exact path='/patient/:id/billing/payments/edit'\n                      render={() => (this.state.editInvoice?<TestFormLayout defaultValues={defaultValues} title=\"Edit payment\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>: <Redirect to={'/patient/'+this.props.match.params.id+'/billing/invoices'} />)}/>\n                <Route exact path='/patient/:id/billing/payments/add'\n                       render={() =><TestFormLayout title=\"Add payment\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect&&    <Redirect to={'/patient/'+this.props.match.params.id+'/billing/payments'} />}\n        </Row>\n\n    }\n}\n\nexport default AddPayment;\n"]},"metadata":{},"sourceType":"module"}