{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/labs/LabTest.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Card, Divider, Form, Icon, Popconfirm, Row, Table } from \"antd\";\nimport { CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { LABTEST_API, OFFERS } from \"../../../../constants/api\";\nimport { getAPI, deleteAPI, interpolate, postAPI } from \"../../../../utils/common\";\nimport AddorEditLab from \"./AddorEditLab\";\n\nvar LabTest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LabTest, _React$Component);\n\n  function LabTest(props) {\n    var _this;\n\n    _classCallCheck(this, LabTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabTest).call(this, props));\n    _this.state = {\n      tests: null,\n      editTest: null\n    };\n    _this.editLabs = _this.editLabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteTest = _this.deleteTest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LabTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          tests: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(LABTEST_API, [that.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"editLabs\",\n    value: function editLabs(record) {\n      var that = this;\n      this.setState({\n        editTest: record\n      }, function () {\n        that.props.history.push('/settings/labs/edit');\n      });\n    }\n  }, {\n    key: \"deleteTest\",\n    value: function deleteTest(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(LABTEST_API, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'code'\n      }, {\n        title: 'Cost',\n        dataIndex: 'cost',\n        key: 'cost'\n      }, {\n        title: ' Test Instructions',\n        dataIndex: 'instruction',\n        key: 'instruction'\n      }, {\n        title: ' MLM Margin',\n        dataIndex: 'margin',\n        key: 'margin'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return that.editLabs(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this test?\",\n            onConfirm: function onConfirm() {\n              return that.deleteTest(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/settings/labs/add',\n        render: function render() {\n          return React.createElement(AddorEditLab, Object.assign({}, that.state, {\n            loadData: _this2.loadData\n          }, _this2.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/settings/labs/edit',\n        render: function render() {\n          return React.createElement(AddorEditLab, Object.assign({}, that.state, {\n            loadData: _this2.loadData\n          }, _this2.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/settings/labs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Lab Tests\", React.createElement(Link, {\n        to: \"/settings/labs/add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"\\xA0Add\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.tests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return LabTest;\n}(React.Component);\n\nexport default LabTest;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/labs/LabTest.js"],"names":["React","DynamicFieldsForm","Button","Card","Divider","Form","Icon","Popconfirm","Row","Table","CHECKBOX_FIELD","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","Link","Route","Switch","LABTEST_API","OFFERS","getAPI","deleteAPI","interpolate","postAPI","AddorEditLab","LabTest","props","state","tests","editTest","editLabs","bind","loadData","deleteTest","that","successFn","data","console","log","setState","errorFn","active_practiceId","record","history","push","reqData","is_active","columns","title","dataIndex","key","render","text","float","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Card, Divider, Form, Icon, Popconfirm, Row, Table} from \"antd\";\nimport {CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../../constants/dataKeys\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {LABTEST_API, OFFERS} from \"../../../../constants/api\";\nimport {getAPI, deleteAPI, interpolate, postAPI} from \"../../../../utils/common\";\nimport AddorEditLab from \"./AddorEditLab\";\n\nclass LabTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tests: null,\n            editTest: null\n        };\n        this.editLabs = this.editLabs.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.deleteTest = this.deleteTest.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"get table\");\n            that.setState({\n                tests: data,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(LABTEST_API, [that.props.active_practiceId]), successFn, errorFn);\n    }\n\n    editLabs(record) {\n        let that = this;\n        this.setState({\n            editTest: record\n        }, function () {\n            that.props.history.push('/settings/labs/edit');\n        })\n\n\n    }\n    deleteTest(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        }\n        postAPI(interpolate(LABTEST_API, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n\n\n    render() {\n        let that = this;\n        const columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'code',\n        }, {\n            title: 'Cost',\n            dataIndex: 'cost',\n            key: 'cost',\n        }, {\n            title: ' Test Instructions',\n            dataIndex: 'instruction',\n            key: 'instruction',\n        }, {\n            title: ' MLM Margin',\n            dataIndex: 'margin',\n            key: 'margin',\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span><a onClick={() => that.editLabs(record)}>\n                Edit</a>\n                <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this test?\" onConfirm={() => that.deleteTest(record)}\n                                okText=\"Yes\" cancelText=\"No\">\n                        <a>Delete</a>\n                    </Popconfirm>\n              </span>\n            ),\n        }];\n        return <Row>\n            <Switch>\n                <Route exact path={'/settings/labs/add'}\n                       render={() => <AddorEditLab {...that.state} loadData={this.loadData}{...this.props}/>}/>\n                <Route exact path={'/settings/labs/edit'}\n                       render={() => <AddorEditLab {...that.state} loadData={this.loadData} {...this.props}/>}/>\n                <Route exact path={'/settings/labs'}>\n                    <div>\n                        <h2>Lab Tests\n                            <Link to=\"/settings/labs/add\">\n                                <Button type=\"primary\" style={{float: 'right'}}>\n                                    <Icon type=\"plus\"/>&nbsp;Add\n                                </Button>\n                            </Link>\n                        </h2>\n                        <Card>\n                            <Table columns={columns} dataSource={this.state.tests}/>\n                        </Card>\n                    </div>\n                </Route>\n            </Switch>\n\n        </Row>\n    }\n}\n\nexport default LabTest;\n"]},"metadata":{},"sourceType":"module"}