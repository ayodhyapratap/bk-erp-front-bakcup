{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/contacts/AddContacts.js\";\nimport { Card, Form, Row } from \"antd\";\nimport React from \"react\";\nimport { INPUT_FIELD, NUMBER_FIELD, SUCCESS_MSG_TYPE, TEXT_FIELD } from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { displayMessage, getAPI, interpolate } from \"../../../utils/common\";\nimport { BLOG_CONTACTUS, SINGLE_CONTACT } from \"../../../constants/api\";\nimport { Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\nvar AddContacts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddContacts, _React$Component);\n\n  function AddContacts(props) {\n    var _this;\n\n    _classCallCheck(this, AddContacts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContacts).call(this, props));\n    _this.state = {\n      editBlogData: _this.props.editBlogData ? _this.props.editBlogData : null\n    };\n    return _this;\n  }\n\n  _createClass(AddContacts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.id) {\n        if (!this.state.editBlogData) {\n          this.loadData();\n        }\n      }\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          editBlogData: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(SINGLE_CONTACT, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fields = [{\n        label: \"Name\",\n        key: \"name\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Rank \",\n        key: \"contact_rank\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.contact_rank : 1,\n        type: NUMBER_FIELD,\n        required: true,\n        min: 1\n      }, {\n        label: \"Link\",\n        key: \"link\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Phone Number \",\n        key: \"phone_no\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.phone_no : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Email\",\n        key: \"email\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.email : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Address\",\n        key: \"address\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.address : null,\n        type: TEXT_FIELD,\n        minRows: 3\n      }];\n      var that = this;\n      var editformProp;\n\n      if (this.state.editBlogData) {\n        editformProp = {\n          successFn: function successFn(data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"success\");\n            console.log(data);\n            that.props.loadData();\n            that.changeRedirect();\n          },\n          errorFn: function errorFn() {},\n          action: interpolate(SINGLE_CONTACT, [this.props.match.params.id]),\n          method: \"put\"\n        };\n      }\n\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          that.props.loadData();\n          that.changeRedirect();\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: BLOG_CONTACTUS,\n        method: \"post\"\n      };\n      var defaultValues = [{\n        key: 'is_active',\n        value: true\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/web/contact/edit/:id\",\n        render: function render() {\n          return _this2.props.match.params.id ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Contact\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: editformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/web/contact',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/web/contact/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Contact\",\n            defaultValues: defaultValues,\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/web/blog',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddContacts;\n}(React.Component);\n\nexport { AddContacts as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/contacts/AddContacts.js"],"names":["Card","Form","Row","React","INPUT_FIELD","NUMBER_FIELD","SUCCESS_MSG_TYPE","TEXT_FIELD","DynamicFieldsForm","displayMessage","getAPI","interpolate","BLOG_CONTACTUS","SINGLE_CONTACT","Route","Redirect","AddContacts","props","state","editBlogData","match","params","id","loadData","redirectVar","redirect","setState","that","successFn","data","errorFn","fields","label","key","initialValue","name","type","contact_rank","required","min","link","phone_no","email","address","minRows","editformProp","console","log","changeRedirect","action","method","TestFormLayout","create","formProp","defaultValues","value","Component"],"mappings":"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","sourcesContent":["import { Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD, NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    BLOG_CONTACTUS,\n    SINGLE_CONTACT\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddContacts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_CONTACT, [this.props.match.params.id]), successFn, errorFn);\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Rank \",\n            key: \"contact_rank\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.contact_rank : 1,\n            type: NUMBER_FIELD,\n            required:true,\n            min:1\n        }, {\n            label: \"Link\",\n            key: \"link\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.link : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Phone Number \",\n            key: \"phone_no\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.phone_no : null,\n            type: INPUT_FIELD,\n        },{\n            label: \"Email\",\n            key: \"email\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.email : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Address\",\n            key: \"address\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.address : null,\n            type: TEXT_FIELD,\n            minRows: 3,\n        }];\n\n        let that = this;\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                    that.props.loadData();\n                    that.changeRedirect();\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_CONTACT, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                that.changeRedirect();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_CONTACTUS,\n            method: \"post\",\n        }\n        let defaultValues = [{key: 'is_active', value: true}];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/contact/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Contact\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/contact'}/>)}/>\n                <Route exact path='/web/contact/add'\n                       render={() => <TestFormLayout title=\"Add Contact\" defaultValues={defaultValues}\n                                                     changeRedirect={this.changeRedirect} formProp={formProp}\n                                                     fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/blog'}/>}\n        </Row>\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}