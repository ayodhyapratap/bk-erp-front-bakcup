{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/mlm/MlmBase.js\";\nimport React from \"react\";\nimport { Button, Card, Icon, Table, Tabs } from \"antd\";\nimport { getAPI, interpolate, postAPI } from \"../../../../utils/common\";\nimport MLMGenerate from \"./MLMGenerate\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { PRODUCT_MARGIN, ROLE_COMMISION, SINGLE_PRODUCT_MARGIN, STAFF_ROLES } from \"../../../../constants/api\";\nvar TabPane = Tabs.TabPane;\n\nvar MlmBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MlmBase, _React$Component);\n\n  function MlmBase(props) {\n    var _this;\n\n    _classCallCheck(this, MlmBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MlmBase).call(this, props));\n    _this.state = {\n      mlmItems: [],\n      productMargin: [],\n      active_practiceId: _this.props.active_practiceId\n    };\n    _this.loadMlmData = _this.loadMlmData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadRoles = _this.loadRoles.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MlmBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadMlmData();\n      this.loadRoles();\n      this.loadProductMargin();\n    }\n  }, {\n    key: \"loadMlmData\",\n    value: function loadMlmData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          mlmItems: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(ROLE_COMMISION, successFn, errorFn);\n    }\n  }, {\n    key: \"loadRoles\",\n    value: function loadRoles() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          staffRoles: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(STAFF_ROLES, successFn, errorFn);\n    }\n  }, {\n    key: \"loadProductMargin\",\n    value: function loadProductMargin() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          productMargin: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(PRODUCT_MARGIN, successFn, errorFn);\n    }\n  }, {\n    key: \"editObject\",\n    value: function editObject(id, record) {\n      this.setState({\n        editId: id,\n        editRecord: record\n      }, function () {\n        this.props.history.push('/settings/mlm/edit');\n      });\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadProductMargin();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(SINGLE_PRODUCT_MARGIN, [record.id]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var rolesdata = {};\n\n      if (this.state.staffRoles) {\n        this.state.staffRoles.forEach(function (role) {\n          rolesdata[role.id] = role.name;\n        });\n      }\n\n      var columns = {};\n      that.state.productMargin.forEach(function (productMargin) {\n        columns[productMargin.id] = [{\n          title: 'Role',\n          key: 'role',\n          dataIndex: 'role'\n        }];\n\n        for (var level = 1; level <= productMargin.level_count; level++) {\n          columns[productMargin.id].push({\n            title: 'Level ' + level,\n            key: level,\n            dataIndex: level,\n            render: function render(value) {\n              return React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }, value, \"%\");\n            }\n          });\n        }\n      });\n      var datasource = {};\n      that.state.productMargin.forEach(function (productMargin) {\n        datasource[productMargin.id] = [];\n\n        if (that.state.staffRoles) {\n          that.state.staffRoles.forEach(function (role) {\n            var roledata = {\n              \"role\": role.name\n            };\n\n            if (productMargin.level_count) {\n              for (var level = 1; level <= productMargin.level_count; level++) {\n                if (that.state.mlmItems) {\n                  for (var i = 0; i < that.state.mlmItems.length; i++) {\n                    var item = that.state.mlmItems[i];\n\n                    if (item.role == role.id && item.level == level) {\n                      roledata[level] = item.commision_percent;\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n\n            datasource[productMargin.id].push(roledata);\n          });\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/settings/mlm/generate\",\n        render: function render(route) {\n          return React.createElement(MLMGenerate, Object.assign({}, route, {\n            loadData: _this2.loadMlmData\n          }, _this2.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), this.state.editId && this.state.editRecord ? React.createElement(Route, {\n        exact: true,\n        path: \"/settings/mlm/edit\",\n        render: function render(route) {\n          return React.createElement(MLMGenerate, Object.assign({}, route, {\n            loadData: _this2.loadMlmData\n          }, _this2.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }) : null, React.createElement(Route, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"MLM Commissions\", React.createElement(Link, {\n        to: \"/settings/mlm/generate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), \"\\xA0Add\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.state.productMargin ? React.createElement(Tabs, {\n        type: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.productMargin.map(function (marginType) {\n        return React.createElement(TabPane, {\n          tab: marginType.name,\n          key: marginType.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Button.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          onClick: function onClick() {\n            return _this2.editObject(marginType.id, datasource[marginType.id]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), \" Edit\"), React.createElement(Button, {\n          type: \"danger\",\n          onClick: function onClick() {\n            return that.deleteObject(marginType);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }), \" Delete\")))), React.createElement(Table, {\n          pagination: false,\n          dataSource: datasource[marginType.id],\n          rowKey: \"role\",\n          columns: columns[marginType.id],\n          bordered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"No MLM Data\"))))));\n    }\n  }]);\n\n  return MlmBase;\n}(React.Component);\n\nexport { MlmBase as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/mlm/MlmBase.js"],"names":["React","Button","Card","Icon","Table","Tabs","getAPI","interpolate","postAPI","MLMGenerate","Link","Route","Switch","PRODUCT_MARGIN","ROLE_COMMISION","SINGLE_PRODUCT_MARGIN","STAFF_ROLES","TabPane","MlmBase","props","state","mlmItems","productMargin","active_practiceId","loadMlmData","bind","loadRoles","loadProductMargin","that","successFn","data","setState","errorFn","staffRoles","id","record","editId","editRecord","history","push","reqData","is_active","rolesdata","forEach","role","name","columns","title","key","dataIndex","level","level_count","render","value","datasource","roledata","i","length","item","commision_percent","route","float","map","marginType","editObject","deleteObject","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Card, Icon, Table, Tabs} from \"antd\";\nimport {getAPI, interpolate, postAPI} from \"../../../../utils/common\";\nimport MLMGenerate from \"./MLMGenerate\"\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {PRODUCT_MARGIN, ROLE_COMMISION, SINGLE_PRODUCT_MARGIN, STAFF_ROLES} from \"../../../../constants/api\";\n\nconst TabPane = Tabs.TabPane;\n\nexport default class MlmBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mlmItems: [],\n            productMargin: [],\n            active_practiceId: this.props.active_practiceId,\n        }\n        this.loadMlmData = this.loadMlmData.bind(this);\n        this.loadRoles = this.loadRoles.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadMlmData();\n        this.loadRoles();\n        this.loadProductMargin();\n    }\n\n    loadMlmData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                mlmItems: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(ROLE_COMMISION, successFn, errorFn);\n    }\n\n    loadRoles() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                staffRoles: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(STAFF_ROLES, successFn, errorFn);\n    }\n\n    loadProductMargin() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                productMargin: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(PRODUCT_MARGIN, successFn, errorFn);\n    }\n\n    editObject(id, record) {\n        this.setState({\n            editId: id,\n            editRecord: record\n        }, function () {\n            this.props.history.push('/settings/mlm/edit');\n        })\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadProductMargin();\n        }\n        let errorFn = function () {\n        }\n        postAPI(interpolate(SINGLE_PRODUCT_MARGIN, [record.id]), reqData, successFn, errorFn);\n    }\n\n    render() {\n        let that = this;\n        const rolesdata = {}\n        if (this.state.staffRoles) {\n            this.state.staffRoles.forEach(function (role) {\n                rolesdata[role.id] = role.name;\n            })\n        }\n        let columns = {}\n\n        that.state.productMargin.forEach(function (productMargin) {\n            columns[productMargin.id] = [{\n                title: 'Role',\n                key: 'role',\n                dataIndex: 'role',\n            }];\n            for (let level = 1; level <= productMargin.level_count; level++) {\n                columns[productMargin.id].push({\n                    title: 'Level ' + level,\n                    key: level,\n                    dataIndex: level,\n                    render: (value) => <span>{value}%</span>\n                })\n            }\n        })\n\n\n        let datasource = {};\n        that.state.productMargin.forEach(function (productMargin) {\n            datasource[productMargin.id] = [];\n            if (that.state.staffRoles) {\n                that.state.staffRoles.forEach(function (role) {\n                    let roledata = {\"role\": role.name};\n                    if (productMargin.level_count) {\n                        for (let level = 1; level <= productMargin.level_count; level++) {\n                            if (that.state.mlmItems) {\n                                for (let i = 0; i < that.state.mlmItems.length; i++) {\n                                    let item = that.state.mlmItems[i];\n                                    if (item.role == role.id && item.level == level) {\n                                        roledata[level] = item.commision_percent;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    datasource[productMargin.id].push(roledata);\n                })\n            }\n        });\n        return <div>\n            <Switch>\n                <Route exact path=\"/settings/mlm/generate\"\n                       render={(route) => <MLMGenerate {...route} loadData={this.loadMlmData} {...this.state}/>}/>\n                {this.state.editId && this.state.editRecord ?\n                    <Route exact path=\"/settings/mlm/edit\"\n                           render={(route) => <MLMGenerate {...route}\n                                                           loadData={this.loadMlmData} {...this.state}/>}/> : null}\n                <Route>\n                    <div>\n                        <h2>MLM Commissions\n                            <Link to=\"/settings/mlm/generate\">\n                                <Button type=\"primary\" style={{float: 'right'}}>\n                                    <Icon type=\"plus\"/>&nbsp;Add\n                                </Button>\n                            </Link>\n                        </h2>\n                        <Card>\n                            {this.state.productMargin ?\n                                <Tabs type=\"card\">\n                                    {this.state.productMargin.map(marginType =>\n                                        <TabPane tab={marginType.name} key={marginType.id}>\n                                            <h4>\n                                                <div>\n                                                    <Button.Group>\n                                                        <Button type=\"primary\"\n                                                                onClick={() => this.editObject(marginType.id, datasource[marginType.id])}><Icon\n                                                            type=\"edit\"/> Edit</Button>\n                                                        <Button type=\"danger\"\n                                                                onClick={() => that.deleteObject(marginType)}><Icon\n                                                            type=\"delete\"/> Delete</Button>\n                                                    </Button.Group>\n                                                </div>\n                                            </h4>\n                                            <Table pagination={false} dataSource={datasource[marginType.id]}\n                                                   rowKey=\"role\"\n                                                   columns={columns[marginType.id]}\n                                                   bordered/>\n                                        </TabPane>)}\n                                </Tabs> : <h4>No MLM Data</h4>}\n\n                        </Card>\n                    </div>\n                </Route>\n            </Switch>\n\n        </div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}