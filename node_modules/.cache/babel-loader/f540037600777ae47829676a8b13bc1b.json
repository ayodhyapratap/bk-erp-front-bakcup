{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/videos/VideosList.js\";\nimport { Avatar, Button, Card, Icon, List, Popconfirm } from \"antd\";\nimport React from \"react\";\nimport { getAPI, interpolate, patchAPI, postAPI } from \"../../../utils/common\";\nimport { BLOG_POST, BLOG_VIDEOS, SINGLE_CONTACT, SINGLE_VIDEO } from \"../../../constants/api\";\nimport { Route, Switch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport AddVideo from \"./AddVideo\";\nimport YouTube from 'react-youtube';\n\nvar VideosList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideosList, _React$Component);\n\n  function VideosList(props) {\n    var _this;\n\n    _classCallCheck(this, VideosList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideosList).call(this, props));\n    _this.state = {\n      videos: []\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteObject = _this.deleteObject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VideosList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          videos: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(BLOG_VIDEOS, successFn, errorFn);\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = {};\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      patchAPI(interpolate(SINGLE_VIDEO, [record.id]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var opts = {\n        height: '200',\n        width: '300',\n        playerVars: {// https://developers.google.com/youtube/player_parameters\n          // autoplay: 1\n        }\n      };\n\n      var _onReady = function _onReady(event) {// access to player in all event handlers via event.target\n        // event.target.pauseVideo();\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/web/videos/add\",\n        render: function render(route) {\n          return React.createElement(AddVideo, Object.assign({}, _this2.state, route, {\n            loadData: _this2.loadData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/web/videos/edit/:id\",\n        render: function render(route) {\n          return React.createElement(AddVideo, Object.assign({}, _this2.state, route, {\n            loadData: _this2.loadData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"Videos\",\n        extra: React.createElement(Link, {\n          to: \"/web/videos/add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \" \", React.createElement(Button, {\n          type: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), \" Add\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(List, {\n        dataSource: this.state.videos,\n        itemLayout: \"vertical\",\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            key: item.id,\n            actions: [React.createElement(Link, {\n              to: \"/web/videos/edit/\" + item.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(Popconfirm, {\n              title: \"Are you sure delete this item?\",\n              onConfirm: function onConfirm() {\n                return that.deleteObject(item);\n              },\n              okText: \"Yes\",\n              cancelText: \"No\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, \"Delete\"))],\n            extra: React.createElement(YouTube, {\n              videoId: item.link,\n              opts: opts,\n              onReady: _onReady,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            avatar: React.createElement(Avatar, {\n              style: {\n                backgroundColor: '#87d068'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, item.rank),\n            title: item.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return VideosList;\n}(React.Component);\n\nexport { VideosList as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/videos/VideosList.js"],"names":["Avatar","Button","Card","Icon","List","Popconfirm","React","getAPI","interpolate","patchAPI","postAPI","BLOG_POST","BLOG_VIDEOS","SINGLE_CONTACT","SINGLE_VIDEO","Route","Switch","Link","AddVideo","YouTube","VideosList","props","state","videos","loadData","bind","deleteObject","that","successFn","data","setState","errorFn","record","reqData","is_active","id","opts","height","width","playerVars","_onReady","event","route","item","link","backgroundColor","rank","name","Component"],"mappings":"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","sourcesContent":["import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI, postAPI} from \"../../../utils/common\";\nimport {BLOG_POST, BLOG_VIDEOS, SINGLE_CONTACT, SINGLE_VIDEO} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddVideo from \"./AddVideo\";\nimport YouTube from 'react-youtube';\n\nexport default class VideosList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: []\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                videos: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(BLOG_VIDEOS, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        };\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_VIDEO, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        const opts = {\n            height: '200',\n            width: '300',\n            playerVars: { // https://developers.google.com/youtube/player_parameters\n                // autoplay: 1\n            }\n        };\n        let _onReady = function (event) {\n            // access to player in all event handlers via event.target\n            // event.target.pauseVideo();\n        }\n        return <div><Switch>\n            <Route exact path='/web/videos/add'\n                   render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/videos/edit/:id'\n                   render={(route) => <AddVideo {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Videos\"\n                  extra={<Link to={\"/web/videos/add\"}> <Button type=\"primary\"><Icon type=\"plus\"/> Add</Button></Link>}>\n                <List dataSource={this.state.videos}\n                      itemLayout=\"vertical\"\n                      renderItem={item => <List.Item key={item.id}\n                                                     actions={[<Link to={\"/web/videos/edit/\" + item.id}>Edit</Link>,\n                                                         <Popconfirm title=\"Are you sure delete this item?\"\n                                                                     onConfirm={() => that.deleteObject(item)}\n                                                                     okText=\"Yes\" cancelText=\"No\">\n                                                             <a>Delete</a>\n                                                         </Popconfirm>]}\n                                                     extra={<YouTube videoId={item.link}\n                                                                     opts={opts}\n                                                                     onReady={_onReady}/>}>\n                          <List.Item.Meta\n                              avatar={<Avatar style={{backgroundColor: '#87d068'}}>{item.rank}</Avatar>}\n                              title={item.name}\n                          />\n                      </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}