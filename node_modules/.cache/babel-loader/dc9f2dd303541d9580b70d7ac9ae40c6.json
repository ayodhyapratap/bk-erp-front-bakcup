{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/core/AppBase.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport { Layout } from \"antd\";\nimport AppFooter from \"./AppFooter\";\nimport AppSider from \"./AppSider\";\nimport { loggedInUser, loggedInactivePractice, loggedInUserGroup, loggedInPermissions, loggedInUserPractices, logInUser, logOutUser, setCurrentPractice, loadUserDetails } from \"../../utils/auth\";\nimport { getAPI, deleteAPI, interpolate } from \"../../utils/common\";\nimport { ALL_PRACTICE, PRACTICE } from \"../../constants/api\";\nimport SettingsDash from \"../settings/SettingsDash\";\nimport Calendar from \"../calendar/Calendar\";\nimport PatientHome from \"../patients/PatientHome\";\nimport Error404 from \"../common/errors/Error404\";\nimport ReportsHome from \"../reports/ReportsHome\";\nimport WebAdminHome from \"../webAdmin/WebAdminHome\";\nimport InventoryHome from \"../inventory/InventoryHome\";\nimport Profile from \"../auth/Profile\";\nimport MlmBase from \"../settings/options/mlm/MlmBase\";\n\nvar AppBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppBase, _React$Component);\n\n  function AppBase(props) {\n    var _this;\n\n    _classCallCheck(this, AppBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppBase).call(this, props));\n\n    _this.toggleSider = function (option) {\n      _this.setState({\n        collapsed: !!option\n      });\n    };\n\n    _this.state = {\n      collapsed: false,\n      active_practiceId: loggedInactivePractice(),\n      practiceList: loggedInUserPractices(),\n      activePracticeData: null,\n      activePracticePermissions: {},\n      specialisations: null,\n      allowAllPermissions: false\n    };\n    _this.activeData = _this.activeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clinicData = _this.clinicData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.switchPractice = _this.switchPractice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n\n      var successFn = function successFn() {\n        that.setState({\n          active_practiceId: loggedInactivePractice(),\n          practiceList: loggedInUserPractices()\n        }, function () {\n          that.clinicData();\n        });\n      };\n\n      loadUserDetails(successFn);\n    }\n  }, {\n    key: \"activeData\",\n    value: function activeData() {\n      var that = this;\n      that.state.practiceList.forEach(function (practiceObj) {\n        var permissions = {};\n        practiceObj.permissions_data.forEach(function (permission) {\n          permissions[permission.codename] = permission;\n        });\n        that.setState({\n          activePracticeData: practiceObj.pratice,\n          activePracticePermissions: permissions\n        });\n      });\n    }\n  }, {\n    key: \"switchPractice\",\n    value: function switchPractice(practiceId) {\n      var that = this;\n      that.setState({\n        active_practiceId: practiceId\n      }, function () {\n        setCurrentPractice(practiceId);\n        that.activeData();\n      });\n    }\n  }, {\n    key: \"clinicData\",\n    value: function clinicData() {\n      var that = this;\n      that.setState(function (prevState) {\n        var returnObj = {};\n        var practices = loggedInUserPractices();\n        practices.forEach(function (practiceObj) {\n          if (prevState.active_practiceId && prevState.active_practiceId == practiceObj.pratice.id) {\n            var permissions = {};\n            practiceObj.permissions_data.forEach(function (permission) {\n              permissions[permission.codename] = permission;\n            });\n            returnObj = {\n              activePracticeData: practiceObj.pratice,\n              activePracticePermissions: permissions\n            };\n          } else {\n            var _permissions = {};\n            practiceObj.permissions_data.forEach(function (permission) {\n              _permissions[permission.codename] = permission;\n            });\n            returnObj = {\n              activePracticeData: practiceObj.pratice,\n              activePracticePermissions: _permissions,\n              active_practiceId: practiceObj.pratice.id\n            };\n          }\n        });\n        return returnObj;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Layout, {\n        style: {\n          minHeight: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(AppSider, Object.assign({\n        toggleSider: this.toggleSider\n      }, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(AppHeader, Object.assign({}, this.props, this.state, {\n        switchPractice: this.switchPractice,\n        toggleSider: this.toggleSider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.activePracticePermissions.WebAdmin ? React.createElement(Route, {\n        path: \"/web\",\n        render: function render(route) {\n          return React.createElement(WebAdminHome, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }) : null, React.createElement(Route, {\n        path: \"/calendar\",\n        render: function render(route) {\n          return React.createElement(Calendar, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/patient/:id\",\n        render: function render(route) {\n          return React.createElement(PatientHome, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/patients\",\n        render: function render(route) {\n          return React.createElement(PatientHome, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/settings\",\n        render: function render(route) {\n          return React.createElement(SettingsDash, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            refreshClinicData: _this2.clinicData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/inventory\",\n        render: function render(route) {\n          return React.createElement(InventoryHome, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/reports\",\n        render: function render(route) {\n          return React.createElement(ReportsHome, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/profile\",\n        render: function render(route) {\n          return React.createElement(Profile, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(route) {\n          return React.createElement(Calendar, Object.assign({}, _this2.state, _this2.props, route, {\n            key: _this2.state.active_practiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: Error404,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(AppFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppBase;\n}(React.Component);\n\nexport default AppBase;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/core/AppBase.js"],"names":["React","Route","Switch","AppHeader","Layout","AppFooter","AppSider","loggedInUser","loggedInactivePractice","loggedInUserGroup","loggedInPermissions","loggedInUserPractices","logInUser","logOutUser","setCurrentPractice","loadUserDetails","getAPI","deleteAPI","interpolate","ALL_PRACTICE","PRACTICE","SettingsDash","Calendar","PatientHome","Error404","ReportsHome","WebAdminHome","InventoryHome","Profile","MlmBase","AppBase","props","toggleSider","option","setState","collapsed","state","active_practiceId","practiceList","activePracticeData","activePracticePermissions","specialisations","allowAllPermissions","activeData","bind","clinicData","switchPractice","that","successFn","forEach","practiceObj","permissions","permissions_data","permission","codename","pratice","practiceId","prevState","returnObj","practices","id","minHeight","WebAdmin","route","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport AppHeader from \"./AppHeader\";\nimport {Layout} from \"antd\";\nimport AppFooter from \"./AppFooter\";\nimport AppSider from \"./AppSider\";\nimport {\n    loggedInUser,\n    loggedInactivePractice,\n    loggedInUserGroup,\n    loggedInPermissions,\n    loggedInUserPractices,\n    logInUser,\n    logOutUser,\n    setCurrentPractice, loadUserDetails\n} from \"../../utils/auth\";\nimport {getAPI, deleteAPI, interpolate} from \"../../utils/common\";\nimport {ALL_PRACTICE, PRACTICE} from \"../../constants/api\";\nimport SettingsDash from \"../settings/SettingsDash\"\nimport Calendar from \"../calendar/Calendar\";\nimport PatientHome from \"../patients/PatientHome\";\nimport Error404 from \"../common/errors/Error404\";\nimport ReportsHome from \"../reports/ReportsHome\";\nimport WebAdminHome from \"../webAdmin/WebAdminHome\";\nimport InventoryHome from \"../inventory/InventoryHome\";\nimport Profile from \"../auth/Profile\";\nimport MlmBase from \"../settings/options/mlm/MlmBase\"\n\nclass AppBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            active_practiceId: loggedInactivePractice(),\n            practiceList: loggedInUserPractices(),\n            activePracticeData: null,\n            activePracticePermissions: {},\n            specialisations: null,\n            allowAllPermissions: false,\n        };\n        this.activeData = this.activeData.bind(this);\n        this.clinicData = this.clinicData.bind(this);\n        this.switchPractice = this.switchPractice.bind(this);\n    }\n\n    componentDidMount() {\n        let that = this;\n        let successFn = function () {\n            that.setState({\n                active_practiceId: loggedInactivePractice(),\n                practiceList: loggedInUserPractices()\n            }, function () {\n                that.clinicData();\n            });\n        }\n        loadUserDetails(successFn);\n\n    }\n\n    toggleSider = (option) => {\n        this.setState({\n            collapsed: !!option,\n        });\n    }\n\n    activeData() {\n        let that = this;\n        that.state.practiceList.forEach(function (practiceObj) {\n            let permissions = {};\n            practiceObj.permissions_data.forEach(function (permission) {\n                permissions[permission.codename] = permission\n            });\n            that.setState({\n                activePracticeData: practiceObj.pratice,\n                activePracticePermissions: permissions\n            })\n        });\n    }\n\n    switchPractice(practiceId) {\n        let that = this;\n        that.setState({\n            active_practiceId: practiceId,\n        }, function () {\n            setCurrentPractice(practiceId);\n            that.activeData();\n        });\n\n\n    }\n\n    clinicData() {\n        var that = this;\n        that.setState(function (prevState) {\n            let returnObj = {}\n            let practices = loggedInUserPractices();\n            practices.forEach(function (practiceObj) {\n                if (prevState.active_practiceId && prevState.active_practiceId == practiceObj.pratice.id) {\n                    let permissions = {};\n                    practiceObj.permissions_data.forEach(function (permission) {\n                        permissions[permission.codename] = permission\n                    });\n                    returnObj = {\n                        activePracticeData: practiceObj.pratice,\n                        activePracticePermissions: permissions\n                    }\n                } else {\n                    let permissions = {};\n                    practiceObj.permissions_data.forEach(function (permission) {\n                        permissions[permission.codename] = permission\n                    });\n                    returnObj = {\n                        activePracticeData: practiceObj.pratice,\n                        activePracticePermissions: permissions,\n                        active_practiceId: practiceObj.pratice.id\n                    }\n                }\n            });\n            return returnObj;\n        });\n    }\n\n\n    render() {\n        return <Layout style={{minHeight: '100vh'}}>\n\n            <AppSider toggleSider={this.toggleSider} {...this.state}/>\n            <Layout>\n                <AppHeader {...this.props}\n                           {...this.state}\n                           switchPractice={this.switchPractice}\n                           toggleSider={this.toggleSider}/>\n                <Switch>\n                    {this.state.activePracticePermissions.WebAdmin ?\n                        <Route path=\"/web\" render={(route) => <WebAdminHome {...this.state}\n                                                                            {...this.props}\n                                                                            {...route}\n                                                                            key={this.state.active_practiceId}/>}/>\n                        : null}\n                    <Route path=\"/calendar\" render={(route) => <Calendar {...this.state}\n                                                                         {...this.props}\n                                                                         {...route}\n                                                                         key={this.state.active_practiceId}/>}/>\n                    <Route path=\"/patient/:id\" render={(route) => <PatientHome {...this.state}\n                                                                               {...this.props}\n                                                                               {...route}\n                                                                               key={this.state.active_practiceId}/>}/>\n                    <Route path=\"/patients\" render={(route) => <PatientHome {...this.state}\n                                                                            {...this.props}\n                                                                            {...route}\n                                                                            key={this.state.active_practiceId}/>}/>\n                    <Route path=\"/settings\" render={(route) => <SettingsDash {...this.state}\n                                                                             {...this.props}\n                                                                             {...route}\n                                                                             key={this.state.active_practiceId}\n                                                                             refreshClinicData={this.clinicData}/>}/>\n                    <Route path=\"/inventory\" render={(route) => <InventoryHome {...this.state}\n                                                                               {...this.props}\n                                                                               {...route}\n                                                                               key={this.state.active_practiceId}/>}/>\n                    <Route path=\"/reports\" render={(route) => <ReportsHome {...this.state}\n                                                                           {...this.props}\n                                                                           {...route}\n                                                                           key={this.state.active_practiceId}/>}/>\n\n                    <Route path=\"/profile\" render={(route) => <Profile {...this.state}\n                                                                       {...this.props}\n                                                                       {...route}\n                                                                       key={this.state.active_practiceId}/>}/>\n                    <Route exact path=\"/\" render={(route) => <Calendar {...this.state}\n                                                                       {...this.props}\n                                                                       {...route}\n                                                                       key={this.state.active_practiceId}/>}/>\n                    <Route component={Error404}/>\n                    <AppFooter/>\n                </Switch>\n            </Layout>\n\n        </Layout>;\n    }\n}\n\nexport default AppBase;\n"]},"metadata":{},"sourceType":"module"}