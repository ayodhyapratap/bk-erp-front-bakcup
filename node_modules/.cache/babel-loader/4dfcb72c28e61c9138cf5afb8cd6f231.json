{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/calendar/AppointmentCategories.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Modal, Card, Form, Icon, Row, Table, Divider, Popconfirm } from \"antd\";\nimport { SUCCESS_MSG_TYPE, CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, NUMBER_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { APPOINTMENT_CATEGORIES } from \"../../../../constants/api\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI, displayMessage, interpolate, postAPI } from \"../../../../utils/common\";\n\nvar AppointmentCategories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppointmentCategories, _React$Component);\n\n  function AppointmentCategories(props) {\n    var _this;\n\n    _classCallCheck(this, AppointmentCategories);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentCategories).call(this, props));\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      redirect: false,\n      visible: false,\n      appointmentCategories: null\n    };\n    _this.loadAppointmentCategories = _this.loadAppointmentCategories.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteObject = _this.deleteObject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppointmentCategories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadAppointmentCategories();\n    }\n  }, {\n    key: \"loadAppointmentCategories\",\n    value: function loadAppointmentCategories() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          appointmentCategories: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"editCategory\",\n    value: function editCategory(value) {\n      this.setState({\n        editingId: value.id,\n        editingName: value.name,\n        visible: true\n      });\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadAppointmentCategories();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editCategory(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"  Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this?\",\n            onConfirm: function onConfirm() {\n              return that.deleteObject(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n      }];\n      var fields = [{\n        label: \"Category name\",\n        key: \"name\",\n        required: true,\n        type: INPUT_FIELD\n      }];\n      var editfields = [{\n        label: \"Category name\",\n        key: \"name\",\n        required: true,\n        initialValue: this.state.editingName,\n        type: INPUT_FIELD\n      }];\n      var formProp = {\n        successFn: function successFn(data) {\n          that.handleCancel();\n          that.loadAppointmentCategories();\n          console.log(data);\n          console.log(\"sucess\");\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]),\n        method: \"post\"\n      };\n      var defaultValues = [];\n      var editFormDefaultValues = [{\n        \"key\": \"id\",\n        \"value\": this.state.editingId\n      }];\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        defaultValues: defaultValues,\n        formProp: formProp,\n        fields: fields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.appointmentCategories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        title: \"ADD Appointment Category\",\n        visible: this.state.visible,\n        footer: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        defaultValues: editFormDefaultValues,\n        formProp: formProp,\n        fields: editfields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Return\"), \",\"));\n    }\n  }]);\n\n  return AppointmentCategories;\n}(React.Component);\n\nexport default AppointmentCategories;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/calendar/AppointmentCategories.js"],"names":["React","DynamicFieldsForm","Button","Modal","Card","Form","Icon","Row","Table","Divider","Popconfirm","SUCCESS_MSG_TYPE","CHECKBOX_FIELD","INPUT_FIELD","RADIO_FIELD","NUMBER_FIELD","SELECT_FIELD","APPOINTMENT_CATEGORIES","Link","getAPI","displayMessage","interpolate","postAPI","AppointmentCategories","props","handleCancel","setState","visible","state","redirect","appointmentCategories","loadAppointmentCategories","bind","deleteObject","that","successFn","data","errorFn","active_practiceId","redirectVar","value","editingId","id","editingName","name","record","reqData","is_active","columns","title","dataIndex","key","render","text","editCategory","fields","label","required","type","editfields","initialValue","formProp","console","log","action","method","defaultValues","editFormDefaultValues","TestFormLayout","create","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Modal, Card, Form, Icon, Row, Table, Divider, Popconfirm} from \"antd\";\nimport {\n    SUCCESS_MSG_TYPE,\n    CHECKBOX_FIELD,\n    INPUT_FIELD,\n    RADIO_FIELD,\n    NUMBER_FIELD,\n    SELECT_FIELD\n} from \"../../../../constants/dataKeys\";\nimport {APPOINTMENT_CATEGORIES} from \"../../../../constants/api\"\nimport {Link} from \"react-router-dom\";\nimport {getAPI, displayMessage, interpolate, postAPI} from \"../../../../utils/common\";\n\nclass AppointmentCategories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            visible: false,\n            appointmentCategories: null\n        };\n        this.loadAppointmentCategories = this.loadAppointmentCategories.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.loadAppointmentCategories();\n    }\n\n    loadAppointmentCategories() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                appointmentCategories: data\n            })\n\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]), successFn, errorFn)\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    editCategory(value) {\n        this.setState({\n            editingId: value.id,\n            editingName: value.name,\n\n            visible: true,\n        })\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadAppointmentCategories();\n        }\n        let errorFn = function () {\n        };\n        postAPI(interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]), reqData, successFn, errorFn)\n    }\n\n    handleCancel = () => {\n        this.setState({visible: false});\n    }\n\n\n    render() {\n        let that = this;\n        const columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n              <a onClick={() => this.editCategory(record)}>  Edit</a>\n                <Divider type=\"vertical\"/>\n                <Popconfirm title=\"Are you sure delete this?\"\n                            onConfirm={() => that.deleteObject(record)} okText=\"Yes\" cancelText=\"No\">\n                  <a>Delete</a>\n              </Popconfirm>\n              </span>\n            ),\n        }];\n        const fields = [{\n            label: \"Category name\",\n            key: \"name\",\n            required: true,\n            type: INPUT_FIELD\n        },];\n        const editfields = [{\n            label: \"Category name\",\n            key: \"name\",\n            required: true,\n            initialValue: this.state.editingName,\n            type: INPUT_FIELD\n        },];\n        const formProp = {\n            successFn: function (data) {\n                that.handleCancel();\n                that.loadAppointmentCategories();\n                console.log(data);\n                console.log(\"sucess\");\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(APPOINTMENT_CATEGORIES, [this.props.active_practiceId]),\n            method: \"post\",\n        }\n        const defaultValues = [];\n        const editFormDefaultValues = [{\"key\": \"id\", \"value\": this.state.editingId}];\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        return <div>\n            <TestFormLayout defaultValues={defaultValues} formProp={formProp} fields={fields}/>\n            <Divider/>\n            <Table columns={columns} dataSource={this.state.appointmentCategories}/>\n            <Modal\n                title=\"ADD Appointment Category\"\n                visible={this.state.visible}\n                footer={null}\n            >\n                <TestFormLayout defaultValues={editFormDefaultValues} formProp={formProp} fields={editfields}/>\n                <Button key=\"back\" onClick={this.handleCancel}>Return</Button>,\n\n            </Modal>\n        </div>\n    }\n}\n\nexport default AppointmentCategories;\n"]},"metadata":{},"sourceType":"module"}