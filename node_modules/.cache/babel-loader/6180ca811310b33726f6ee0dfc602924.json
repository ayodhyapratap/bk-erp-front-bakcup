{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/printout/PrintSettings.js\";\nimport React from 'react';\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Row, Form, Col, Radio, Input, Divider } from \"antd\";\nimport SettingForm from \"./SettingForm\";\nimport DocumentPdf from \"./DocumentPdf\";\nvar TextArea = Input.TextArea;\nvar style = {\n  box_shadow: {\n    webkitBoxShadow: \"1px 3px 1px #9E9E9E\",\n    mozBoxShadow: \"1px 3px 1px #9E9E9E\",\n    boxShadow: \"1px 3px 1px #9E9E9E\"\n  }\n};\n\nvar PrintPreview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrintPreview, _React$Component);\n\n  function PrintPreview(props) {\n    var _this;\n\n    _classCallCheck(this, PrintPreview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PrintPreview).call(this, props));\n\n    _this.changeFormType = function (e) {\n      _this.setState({\n        selectedFormType: e.target.value\n      });\n    };\n\n    var textFormate = [{\n      title: 'Prescription',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }),\n      key: '1'\n    }, {\n      title: 'Treatment Plan',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }),\n      key: '2'\n    }, {\n      title: 'Case Sheet',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }),\n      key: '3'\n    }, {\n      title: 'Medical Leave',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }),\n      key: '4'\n    }, {\n      title: 'Vital Signs',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }),\n      key: '5'\n    }, {\n      title: 'Lab Order',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }),\n      key: '6'\n    }, {\n      title: 'Lab Order Result',\n      content: React.createElement(PrintSettings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }),\n      key: '7',\n      closable: false\n    }];\n    _this.state = {\n      activeKey: textFormate[0].key,\n      textFormate: textFormate\n    };\n    return _this;\n  }\n\n  _createClass(PrintPreview, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var WrappedSettingForm = Form.create({\n        name: 'setting'\n      })(SettingForm);\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        buttonStyle: \"solid\",\n        size: \"small\",\n        value: this.state.selectedFormType,\n        onChange: this.changeFormType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.textFormate.map(function (item) {\n        return React.createElement(Radio.Button, {\n          value: _this2.state.pageSetting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Page Setting\");\n      })), React.createElement(\"div\", {\n        className: \"div_padding_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.selectedFormType), React.createElement(WrappedSettingForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PrintPreview;\n}(React.Component);\n\nexport default PrintPreview;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/printout/PrintSettings.js"],"names":["React","DynamicFieldsForm","Row","Form","Col","Radio","Input","Divider","SettingForm","DocumentPdf","TextArea","style","box_shadow","webkitBoxShadow","mozBoxShadow","boxShadow","PrintPreview","props","changeFormType","e","setState","selectedFormType","target","value","textFormate","title","content","key","closable","state","activeKey","WrappedSettingForm","create","name","map","item","pageSetting","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Row,Form, Col ,Radio, Input ,Divider} from \"antd\";\nimport SettingForm from \"./SettingForm\";\nimport DocumentPdf from \"./DocumentPdf\";\n\nconst { TextArea } = Input;\nconst style ={\n  box_shadow:{\n    webkitBoxShadow: \"1px 3px 1px #9E9E9E\",\n    mozBoxShadow: \"1px 3px 1px #9E9E9E\",\n    boxShadow: \"1px 3px 1px #9E9E9E\"\n  }\n}\nclass PrintPreview extends React.Component{\n  constructor(props){\n    super(props);\n    const textFormate = [\n        { title: 'Prescription', content: <PrintSettings/>  , key: '1' },\n        { title: 'Treatment Plan', content: <PrintSettings/>, key: '2' },\n        { title: 'Case Sheet', content: <PrintSettings/> , key: '3' },\n        { title: 'Medical Leave', content: <PrintSettings/>, key: '4' },\n        { title: 'Vital Signs', content: <PrintSettings/>, key: '5' },\n        { title: 'Lab Order', content: <PrintSettings/>, key: '6' },\n        {title: 'Lab Order Result', content: <PrintSettings/>, key: '7', closable: false,},\n\n      ];\n\n      this.state = {\n        activeKey: textFormate[0].key,\n        textFormate,\n      };\n\n  \n  }\n\nchangeFormType=(e)=>{\n  this.setState({\n    selectedFormType : e.target.value\n  })\n  \n  \n}\n  render(){\n  const WrappedSettingForm = Form.create({ name: 'setting' })(SettingForm);\n     return (<Row>\n        <Col span={12}>\n          <Radio.Group  buttonStyle=\"solid\" size=\"small\" value={this.state.selectedFormType} onChange={this.changeFormType}>\n              {this.state.textFormate.map(item=><Radio.Button value={this.state.pageSetting}>Page Setting</Radio.Button>)}\n           \n          </Radio.Group>\n          <div className=\"div_padding_top\">\n            <h2>{this.state.selectedFormType}</h2>\n            <WrappedSettingForm/>\n          </div>\n\n        </Col>\n      </Row>\n      );\n    \n  }\n  \n}\nexport default PrintPreview;\n"]},"metadata":{},"sourceType":"module"}