{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/patient/EditPatientDetails.js\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Button, Card, Form, Icon, Row } from \"antd\";\nimport { CHECKBOX_FIELD, DATE_PICKER, NUMBER_FIELD, SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../constants/dataKeys\";\nimport { PATIENTS_LIST, PATIENT_PROFILE } from \"../../../constants/api\";\nimport { getAPI, interpolate, displayMessage } from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nvar EditPatientDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPatientDetails, _React$Component);\n\n  function EditPatientDetails(props) {\n    var _this;\n\n    _classCallCheck(this, EditPatientDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditPatientDetails).call(this, props));\n    _this.state = {\n      redirect: false\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(\"Working or not\");\n    return _this;\n  }\n\n  _createClass(EditPatientDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.currentPatient);\n      var fields = [{\n        label: \"Patient Name\",\n        key: \"name\",\n        required: true,\n        initialValue: this.props.currentPatient ? this.props.currentPatient.name : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Patient ID\",\n        key: \"patient_id\",\n        required: true,\n        initialValue: this.props.currentPatient ? this.props.currentPatient.patient_id : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Adhaar ID\",\n        key: \"addhar_id\",\n        required: true,\n        initialValue: this.props.currentPatient ? this.props.currentPatient.addhar_id : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Gender\",\n        key: \"gender\",\n        type: SELECT_FIELD,\n        initialValue: this.props.currentPatient ? this.props.currentPatient.gender : null,\n        options: [{\n          label: \"Male\",\n          value: \"male\"\n        }, {\n          label: \"female\",\n          value: \"female\"\n        }, {\n          label: \"other\",\n          value: \"other\"\n        }]\n      }, {\n        label: \"DOB\",\n        key: \"dob\",\n        initialValue: this.props.currentPatient ? moment(this.props.currentPatient.dob) : null,\n        type: DATE_PICKER\n      }, {\n        label: \"Anniversary\",\n        key: \"anniversary\",\n        initialValue: this.props.currentPatient ? moment(this.props.currentPatient.anniversary) : null,\n        type: DATE_PICKER\n      }, {\n        label: \"Blood Group\",\n        key: \"blood_group\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.blood_group : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Age\",\n        key: \"age\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.age : null,\n        type: NUMBER_FIELD\n      }, {\n        label: \"Family Relation\",\n        key: \"family_relation\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.family_relation : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Mobile (Primary)\",\n        key: \"primary_mobile_no\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.primary_mobile_no : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Mobile (Secondary)\",\n        key: \"secondary_mobile_no\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.secondary_mobile_no : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Landline\",\n        key: \"landline_no\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.landline_no : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Address\",\n        key: \"address\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.address : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Locality\",\n        key: \"locality\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.locality : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"City\",\n        key: \"city\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.city : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"PINCODE\",\n        key: \"pincode\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.pincode : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Email\",\n        key: \"email\",\n        initialValue: this.props.currentPatient ? this.props.currentPatient.email : null,\n        type: INPUT_FIELD\n      }];\n      var editformProp;\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n\n      if (this.props.currentPatient) {\n        editformProp = {\n          successFn: function successFn(data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"success\");\n            console.log(data);\n          },\n          errorFn: function errorFn() {},\n          action: interpolate(PATIENT_PROFILE, [this.props.currentPatient.id]),\n          method: \"put\"\n        };\n      }\n\n      var newformProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: PATIENTS_LIST,\n        method: \"post\"\n      };\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/profile/edit\",\n        render: function render() {\n          return _this2.props.currentPatient ? React.createElement(TestFormLayout, {\n            title: \"Edit Patient\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: editformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: \"/patients/profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/patients/profile/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Patient\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: newformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: \"/patients/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditPatientDetails;\n}(React.Component);\n\nexport default EditPatientDetails;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/patient/EditPatientDetails.js"],"names":["React","Route","DynamicFieldsForm","Button","Card","Form","Icon","Row","CHECKBOX_FIELD","DATE_PICKER","NUMBER_FIELD","SUCCESS_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","PATIENTS_LIST","PATIENT_PROFILE","getAPI","interpolate","displayMessage","Redirect","moment","EditPatientDetails","props","state","redirect","changeRedirect","bind","console","log","redirectVar","setState","currentPatient","fields","label","key","required","initialValue","name","type","patient_id","addhar_id","gender","options","value","dob","anniversary","blood_group","age","family_relation","primary_mobile_no","secondary_mobile_no","landline_no","address","locality","city","pincode","email","editformProp","TestFormLayout","create","successFn","data","errorFn","action","id","method","newformProp","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router\";\n\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {CHECKBOX_FIELD, DATE_PICKER, NUMBER_FIELD,  SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../constants/dataKeys\";\nimport {PATIENTS_LIST, PATIENT_PROFILE} from \"../../../constants/api\";\nimport {getAPI,interpolate, displayMessage} from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\n\n\nclass EditPatientDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          redirect:false,\n\n        }\n        this.changeRedirect= this.changeRedirect.bind(this);\n        console.log(\"Working or not\");\n\n    }\n    componentDidMount(){\n    }\n\n\n      changeRedirect(){\n        var redirectVar=this.state.redirect;\n      this.setState({\n        redirect:  !redirectVar,\n      })  ;\n      }\n\n    render() {\n      console.log(this.props.currentPatient);\n      const  fields= [{\n            label: \"Patient Name\",\n            key: \"name\",\n            required: true,\n            initialValue:this.props.currentPatient?this.props.currentPatient.name:null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Patient ID\",\n            key: \"patient_id\",\n            required: true,\n            initialValue:this.props.currentPatient?this.props.currentPatient.patient_id:null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Adhaar ID\",\n            key: \"addhar_id\",\n            required: true,\n            initialValue:this.props.currentPatient?this.props.currentPatient.addhar_id:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Gender\",\n            key: \"gender\",\n            type: SELECT_FIELD,\n            initialValue:this.props.currentPatient?this.props.currentPatient.gender:null,\n            options: [{label: \"Male\", value: \"male\"}, {label: \"female\", value: \"female\"}, {label: \"other\", value: \"other\"}]\n        }, {\n            label: \"DOB\",\n            key: \"dob\",\n            initialValue:this.props.currentPatient?moment(this.props.currentPatient.dob):null,\n            type: DATE_PICKER\n        },\n        {\n            label: \"Anniversary\",\n            key: \"anniversary\",\n            initialValue:this.props.currentPatient?moment(this.props.currentPatient.anniversary):null,\n            type: DATE_PICKER\n        }, {\n            label: \"Blood Group\",\n            key: \"blood_group\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.blood_group:null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Age\",\n            key: \"age\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.age:null,\n            type: NUMBER_FIELD\n        }, {\n            label: \"Family Relation\",\n            key: \"family_relation\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.family_relation:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Mobile (Primary)\",\n            key: \"primary_mobile_no\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.primary_mobile_no:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Mobile (Secondary)\",\n            key: \"secondary_mobile_no\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.secondary_mobile_no:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Landline\",\n            key: \"landline_no\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.landline_no:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Address\",\n            key: \"address\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.address:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Locality\",\n            key: \"locality\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.locality:null,\n            type: INPUT_FIELD,\n        },{\n            label: \"City\",\n            key: \"city\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.city:null,\n            type: INPUT_FIELD\n        },  {\n            label: \"PINCODE\",\n            key: \"pincode\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.pincode:null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Email\",\n            key: \"email\",\n            initialValue:this.props.currentPatient?this.props.currentPatient.email:null,\n            type: INPUT_FIELD\n        },];\n\n\n        let editformProp;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        if(this.props.currentPatient){\n           editformProp={\n            successFn:function(data){\n              displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n              console.log(data);\n            },\n            errorFn:function(){\n\n            },\n            action: interpolate(PATIENT_PROFILE, [this.props.currentPatient.id]),\n            method: \"put\",\n          }\n        }\n          const newformProp={\n            successFn:function(data){\n              displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n              console.log(data);\n            },\n            errorFn:function(){\n\n            },\n            action: PATIENTS_LIST,\n            method: \"post\",\n          }\n\n          return <Row>\n                <Card>\n                  <Route exact path='/patient/:id/profile/edit'\n                        render={() => (this.props.currentPatient? <TestFormLayout title=\"Edit Patient\" changeRedirect= {this.changeRedirect} formProp= {editformProp} fields={fields}/>:<Redirect to='/patients/profile' />)}/>\n                  <Route exact path='/patients/profile/add'\n                        render={() =><TestFormLayout title=\"Add Patient\" changeRedirect= {this.changeRedirect} formProp= {newformProp} fields={fields}/>}/>\n\n\n                </Card>\n                {this.state.redirect&&    <Redirect to='/patients/profile' />}\n            </Row>\n\n    }\n}\n\nexport default EditPatientDetails;\n"]},"metadata":{},"sourceType":"module"}