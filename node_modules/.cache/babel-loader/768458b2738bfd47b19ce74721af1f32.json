{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/inventory/labs/AddLab.js\";\nimport { Card, Form, Row } from \"antd\";\nimport React from \"react\";\nimport { DATE_PICKER, INPUT_FIELD, SELECT_FIELD, SUCCESS_MSG_TYPE } from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { displayMessage, getAPI, interpolate } from \"../../../utils/common\";\nimport { LAB_API, PATIENTS_LIST, SINGLE_EXPENSES_API, SINGLE_LAB_API } from \"../../../constants/api\";\nimport { Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\nvar AddLab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddLab, _React$Component);\n\n  function AddLab(props) {\n    var _this;\n\n    _classCallCheck(this, AddLab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddLab).call(this, props));\n    _this.state = {\n      editData: _this.props.editData ? _this.props.editData : null\n    };\n    return _this;\n  }\n\n  _createClass(AddLab, [{\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.id) {\n        if (!this.state.editData) {\n          this.loadData();\n        }\n      }\n\n      this.getPatientListData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          editData: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(SINGLE_EXPENSES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"getPatientListData\",\n    value: function getPatientListData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          patientListData: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(PATIENTS_LIST, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var patientOptions = [];\n\n      if (this.state.patientListData && this.state.patientListData.length) {\n        this.state.patientListData.forEach(function (drug) {\n          patientOptions.push({\n            label: drug.name,\n            value: drug.id\n          });\n        });\n      }\n\n      var fields = [{\n        label: \"Job number \",\n        key: \"job_no\",\n        initialValue: this.state.editData ? this.state.editData.job_no : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Doctor Name \",\n        key: \"job_no\",\n        initialValue: this.state.editData ? this.state.editData.doctor_name : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Name \",\n        key: \"name\",\n        initialValue: this.state.editData ? this.state.editData.name : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Status \",\n        key: \"status\",\n        initialValue: this.state.editData ? this.state.editData.status : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Due Date\",\n        key: \"due_date\",\n        type: DATE_PICKER,\n        initialValue: this.state.editData ? this.state.editData.due_date : null,\n        format: \"YYYY/MM/DD HH:mm\"\n      }, {\n        label: \"patient\",\n        key: \"patient\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editData ? this.state.editData.patient : null,\n        options: patientOptions\n      }];\n      var editformProp;\n\n      if (this.state.editBlogData) {\n        editformProp = {\n          successFn: function successFn(data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"success\");\n            console.log(data);\n          },\n          errorFn: function errorFn() {},\n          action: interpolate(SINGLE_LAB_API, [this.props.match.params.id]),\n          method: \"put\"\n        };\n      }\n\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: LAB_API,\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/inventory/lab/edit/:id\",\n        render: function render() {\n          return _this2.props.match.params.id ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Lab\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: editformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/inventory/lab',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/inventory/lab/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add lab\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/inventory/lab',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddLab;\n}(React.Component);\n\nexport { AddLab as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/inventory/labs/AddLab.js"],"names":["Card","Form","Row","React","DATE_PICKER","INPUT_FIELD","SELECT_FIELD","SUCCESS_MSG_TYPE","DynamicFieldsForm","displayMessage","getAPI","interpolate","LAB_API","PATIENTS_LIST","SINGLE_EXPENSES_API","SINGLE_LAB_API","Route","Redirect","AddLab","props","state","editData","redirectVar","redirect","setState","match","params","id","loadData","getPatientListData","that","successFn","data","errorFn","patientListData","patientOptions","length","forEach","drug","push","label","name","value","fields","key","initialValue","job_no","type","doctor_name","status","due_date","format","patient","options","editformProp","editBlogData","console","log","action","method","TestFormLayout","create","formProp","defaultValues","active_practiceId","changeRedirect","Component"],"mappings":"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","sourcesContent":["import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    DATE_PICKER,\n    INPUT_FIELD,\n    SELECT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    LAB_API, PATIENTS_LIST, SINGLE_EXPENSES_API, SINGLE_LAB_API,\n} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default class AddLab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editData: this.props.editData ? this.props.editData : null\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editData) {\n                this.loadData();\n            }\n        }\n        this.getPatientListData();\n\n\n    }\n\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_EXPENSES_API, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n    getPatientListData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                patientListData: data\n            })\n        };\n        let errorFn = function () {\n\n        };\n        getAPI(PATIENTS_LIST, successFn, errorFn);\n    }\n\n\n    render() {\n\n        const patientOptions = []\n        if (this.state.patientListData && this.state.patientListData.length) {\n            this.state.patientListData.forEach(function (drug) {\n                patientOptions.push({label: (drug.name), value: drug.id});\n            })\n        }\n        const fields = [{\n            label: \"Job number \",\n            key: \"job_no\",\n            initialValue: this.state.editData ? this.state.editData.job_no : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Doctor Name \",\n            key: \"job_no\",\n            initialValue: this.state.editData ? this.state.editData.doctor_name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Name \",\n            key: \"name\",\n            initialValue: this.state.editData ? this.state.editData.name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Status \",\n            key: \"status\",\n            initialValue: this.state.editData ? this.state.editData.status : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Due Date\",\n            key: \"due_date\",\n            type: DATE_PICKER,\n            initialValue: this.state.editData ? this.state.editData.due_date : null,\n            format: \"YYYY/MM/DD HH:mm\"\n        }, {\n            label: \"patient\",\n            key: \"patient\",\n            type: SELECT_FIELD,\n            initialValue: this.state.editData ? this.state.editData.patient : null,\n            options: patientOptions\n        },];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_LAB_API, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: LAB_API,\n            method: \"post\",\n        }\n        const defaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n        return <Row>\n            <Card>\n                <Route exact path='/inventory/lab/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Lab\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/inventory/lab'}/>)}/>\n                <Route exact path='/inventory/lab/add'\n                       render={() => <TestFormLayout title=\"Add lab\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/inventory/lab'}/>}\n        </Row>\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}