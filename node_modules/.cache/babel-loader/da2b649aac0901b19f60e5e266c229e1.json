{"ast":null,"code":"import _defineProperty from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/practice-staff/PracticeStaff.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Checkbox, Card, Form, Icon, Tabs, Divider, Tag, Row, Table, Modal } from \"antd\";\nimport { CHECKBOX_FIELD, DOCTORS_ROLE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { PRACTICESTAFF, STAFF_ROLES, ALL_PRACTICE_STAFF, ALL_PRACTICE_DOCTORS, SINGLE_PRACTICE_STAFF_API, USER_PRACTICE_PERMISSIONS, SET_USER_PERMISSION, SET_SPECIFIC_USER_PERMISSION } from \"../../../../constants/api\";\nimport { Link } from \"react-router-dom\";\nimport { deleteAPI, getAPI, interpolate, patchAPI, postAPI } from \"../../../../utils/common\";\nimport { getAllPermissions, loggedInUserPractices } from \"../../../../utils/auth\";\nvar Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup;\nvar TabPane = Tabs.TabPane;\n\nvar PracticeDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PracticeDetails, _React$Component);\n\n  function PracticeDetails(props) {\n    var _this;\n\n    _classCallCheck(this, PracticeDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PracticeDetails).call(this, props));\n\n    _this.handleClick = function (e) {\n      _this.setState({\n        current: e.key\n      });\n    };\n\n    _this.state = {\n      current: 'staff',\n      practice_staff: [],\n      practice_doctors: [],\n      roles: null,\n      permissionEditModal: false,\n      editPermissions: {},\n      allPermissions: getAllPermissions()\n    };\n    _this.setPermission = _this.setPermission.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.staffRoles();\n\n    return _this;\n  }\n\n  _createClass(PracticeDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"setPermission\",\n    value: function setPermission(codename, e) {\n      var that = this;\n      var value = e.target.checked;\n      this.setState(function (prevState) {\n        var permission = _objectSpread({}, prevState.editPermissions[codename]);\n\n        permission.loading = true;\n        return {\n          editPermissions: _objectSpread({}, prevState.editPermissions, _defineProperty({}, codename, permission))\n        };\n      });\n\n      if (value) {\n        var reqData = {\n          \"name\": null,\n          \"codename\": codename,\n          \"is_active\": true,\n          \"practice\": that.props.active_practiceId,\n          \"user\": that.state.currentUser\n        };\n\n        var successFn = function successFn(data) {\n          that.setState(function (prevState) {\n            return {\n              editPermissions: _objectSpread({}, prevState.editPermissions, _defineProperty({}, codename, data))\n            };\n          });\n        };\n\n        var errorFn = function errorFn() {};\n\n        postAPI(SET_USER_PERMISSION, reqData, successFn, errorFn);\n      } else {\n        if (that.state.editPermissions[codename].id) {\n          var _reqData = {\n            // \"name\": null,\n            // \"codename\": codename,\n            \"is_active\": false // \"practice\": that.props.active_practiceId,\n            // \"user\": that.state.currentUser\n\n          };\n\n          var _successFn = function _successFn(data) {\n            that.setState(function (prevState) {\n              return {\n                editPermissions: _objectSpread({}, prevState.editPermissions, _defineProperty({}, data.codename, undefined))\n              };\n            });\n          };\n\n          var _errorFn = function _errorFn() {};\n\n          patchAPI(interpolate(SET_SPECIFIC_USER_PERMISSION, [that.state.editPermissions[codename].id]), _reqData, _successFn, _errorFn);\n        } else {}\n      }\n    }\n  }, {\n    key: \"editPermissions\",\n    value: function editPermissions(user) {\n      var that = this;\n\n      if (!user) {\n        that.setState({\n          permissionEditModal: false\n        });\n        return true;\n      }\n\n      that.setState({\n        permissionEditModal: true,\n        editPermissions: [],\n        currentUser: user\n      });\n\n      var successFn = function successFn(data) {\n        var permissions = {};\n        data.forEach(function (item) {\n          permissions[item.codename] = item;\n        });\n        that.setState({\n          editPermissions: permissions\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(USER_PRACTICE_PERMISSIONS, [user, that.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      // let group = loggedInUserGroup();\n      // if (group[0].name == \"Admin\") {\n      this.admin_StaffData(); // }\n      // else {\n      //     this.clinicData();\n      // }\n    }\n  }, {\n    key: \"deleteStaff\",\n    value: function deleteStaff(value) {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n        console.log(\"Deleted\");\n      };\n\n      var errorFn = function errorFn() {};\n\n      deleteAPI(interpolate(SINGLE_PRACTICE_STAFF_API, [value]), successFn, errorFn);\n    }\n  }, {\n    key: \"staffRoles\",\n    value: function staffRoles() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          roles: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(STAFF_ROLES, successFn, errorFn);\n    }\n  }, {\n    key: \"admin_StaffData\",\n    value: function admin_StaffData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        var doctor = [];\n        var staff = [];\n        data.staff.forEach(function (usersdata) {\n          if (usersdata.role == DOCTORS_ROLE) {\n            doctor.push(usersdata);\n          } else {\n            staff.push(usersdata);\n          }\n        });\n        that.setState({\n          practice_doctors: doctor,\n          practice_staff: staff\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"clinicData\",\n    value: function clinicData() {\n      var practice = loggedInUserPractices();\n      var practiceKeys = Object.keys(practice);\n      var that = this; // practiceKeys.forEach(function(key){\n      //     let successFn = function (data) {\n      //       that.setState(function(prevState){\n      //         let doctors = prevState.practice_doctors;\n      //         let staff= prevState.practice_staff;\n      //         // if(doctors==null){doctors=[];}\n      //         // if(staff==null){staff=[];}\n      //         data.doctors.concat(doctors);\n      //         data.staff.concat(staff);\n      //         return{\n      //           practice_staff:data.staff,\n      //           practice_doctors:data.doctors,\n      //         }\n      //       })\n      //     }\n      //     let errorFn = function () {\n      //     };\n      //     getAPI(interpolate(PRACTICESTAFF,[key]), successFn, errorFn);\n      //\n      // });\n\n      var successFn = function successFn(data) {\n        data.staff.forEach(function (usersdata) {\n          if (usersdata.role == DOCTORS_ROLE) {\n            var doctor = that.state.practice_doctors;\n            doctor.push(usersdata);\n            that.setState({\n              practice_doctors: doctor\n            });\n          } else {\n            var _doctor = that.state.practice_staff;\n\n            _doctor.push(usersdata);\n\n            that.setState({\n              practice_staff: _doctor\n            });\n          }\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var that = this;\n      var columns = [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\"\n      }, {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"email\",\n        render: function render(value, record) {\n          return record.user && record.user.is_active ? record.user.email : value;\n        }\n      }, {\n        title: \"Mobile\",\n        dataIndex: \"mobile\",\n        key: \"mobile\"\n      }, {\n        title: \"Registration Number\",\n        dataIndex: \"registration_number\",\n        key: \"registration_number\"\n      }, {\n        title: \"Status\",\n        key: \"user\",\n        render: function render(text, record) {\n          return record.user && record.user.is_active ? React.createElement(Tag, {\n            color: \"#87d068\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }, \"Active\") : React.createElement(Tag, {\n            color: \"#f50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, \"Pending\");\n        }\n      }, {\n        title: \"Action\t\",\n        key: \"action\",\n        render: function render(text, record) {\n          var _this2 = this;\n\n          return record.user && record.is_superuser ? React.createElement(Tag, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }, \" Not Allowed\") : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/settings/clinics-staff/\" + record.id + \"/edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, \"Edit\")), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            disabled: !(record.user && record.user.is_active),\n            onClick: function onClick() {\n              return that.editPermissions(record.user.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, \"Permissions\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.deleteStaff(record.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }];\n      var notification_columns = [{\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\"\n      }, {\n        title: \"Confirmation SMS\",\n        dataIndex: \"confirmation_sms\",\n        key: \"confirmation_sms\",\n        render: function render(confirmation_sms) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            disabled: true,\n            checked: confirmation_sms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: \"Schedule SMS\",\n        dataIndex: \"schedule_sms\",\n        key: \"schedule_sms\",\n        render: function render(schedule_sms) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            disabled: true,\n            checked: schedule_sms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: \"Confirmation EMAIL\",\n        dataIndex: \"confirmation_email\",\n        key: \"confirmation_email\",\n        render: function render(confirmation_email) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            disabled: true,\n            checked: confirmation_email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: \"online_appointment_sms\",\n        dataIndex: \"online_appointment_sms\",\n        key: \"online_appointment_sms\",\n        render: function render(online_appointment_sms) {\n          return React.createElement(Checkbox, {\n            disabled: true,\n            checked: online_appointment_sms,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305\n            },\n            __self: this\n          });\n        }\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Practice Staff\"), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"user-add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), \"Manage Staff\"),\n        key: \"staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Doctors \", React.createElement(Link, {\n        to: \"/settings/clinics-staff/adddoctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), \"\\xA0Add Doctor/Staff\"))), React.createElement(Table, {\n        pagination: false,\n        columns: columns,\n        dataSource: this.state.practice_doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Staff \"), React.createElement(Table, {\n        pagination: false,\n        columns: columns,\n        dataSource: this.state.practice_staff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"team\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }), \"Staff Notification\"),\n        key: \"notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Doctors\"), React.createElement(Table, {\n        pagination: false,\n        columns: notification_columns,\n        dataSource: this.state.practice_doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Staff\"), React.createElement(Table, {\n        pagination: false,\n        columns: notification_columns,\n        dataSource: this.state.practice_staff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"schedule\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }), \"Doctors visit Timing\"),\n        key: \"timing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Column, {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Visit Timing\",\n        dataIndex: \"loginstatus\",\n        key: \"VisitTiming\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Action\",\n        key: \"action\",\n        render: function render(text, record) {\n          return React.createElement(Link, {\n            to: \"/settings/clinics-staff/adddoctor\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344\n            },\n            __self: this\n          }, \"Edit\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      })))), React.createElement(Modal, {\n        title: \"Edit Permissions\",\n        visible: this.state.permissionEditModal,\n        onCancel: function onCancel() {\n          return _this3.editPermissions();\n        },\n        footer: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, that.state.allPermissions.map(function (item) {\n        return React.createElement(Checkbox, {\n          value: item.codename,\n          checked: that.state.editPermissions[item.codename],\n          disabled: that.state.editPermissions[item.codename] && that.state.editPermissions[item.codename].loading,\n          onClick: function onClick(e) {\n            return _this3.setPermission(item.codename, e);\n          },\n          style: {\n            display: 'list-item'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, item.id, \" \", item.name);\n      }))));\n    }\n  }]);\n\n  return PracticeDetails;\n}(React.Component);\n\nexport default PracticeDetails;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/practice-staff/PracticeStaff.js"],"names":["React","DynamicFieldsForm","Button","Checkbox","Card","Form","Icon","Tabs","Divider","Tag","Row","Table","Modal","CHECKBOX_FIELD","DOCTORS_ROLE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","PRACTICESTAFF","STAFF_ROLES","ALL_PRACTICE_STAFF","ALL_PRACTICE_DOCTORS","SINGLE_PRACTICE_STAFF_API","USER_PRACTICE_PERMISSIONS","SET_USER_PERMISSION","SET_SPECIFIC_USER_PERMISSION","Link","deleteAPI","getAPI","interpolate","patchAPI","postAPI","getAllPermissions","loggedInUserPractices","Column","ColumnGroup","TabPane","PracticeDetails","props","handleClick","e","setState","current","key","state","practice_staff","practice_doctors","roles","permissionEditModal","editPermissions","allPermissions","setPermission","bind","staffRoles","loadData","codename","that","value","target","checked","prevState","permission","loading","reqData","active_practiceId","currentUser","successFn","data","errorFn","id","undefined","user","permissions","forEach","item","admin_StaffData","console","log","doctor","staff","usersdata","role","push","practice","practiceKeys","Object","keys","columns","title","dataIndex","render","record","is_active","email","text","is_superuser","deleteStaff","notification_columns","confirmation_sms","schedule_sms","confirmation_email","online_appointment_sms","float","map","display","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Checkbox, Card, Form, Icon, Tabs, Divider, Tag, Row, Table, Modal} from \"antd\";\nimport {CHECKBOX_FIELD, DOCTORS_ROLE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../../constants/dataKeys\";\nimport {\n    PRACTICESTAFF,\n    STAFF_ROLES,\n    ALL_PRACTICE_STAFF,\n    ALL_PRACTICE_DOCTORS,\n    SINGLE_PRACTICE_STAFF_API, USER_PRACTICE_PERMISSIONS, SET_USER_PERMISSION, SET_SPECIFIC_USER_PERMISSION\n} from \"../../../../constants/api\"\nimport {Link} from \"react-router-dom\";\nimport {deleteAPI, getAPI, interpolate, patchAPI, postAPI} from \"../../../../utils/common\";\nimport {getAllPermissions, loggedInUserPractices} from \"../../../../utils/auth\";\n\nconst {Column, ColumnGroup} = Table;\nconst TabPane = Tabs.TabPane;\n\nclass PracticeDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 'staff',\n            practice_staff: [],\n            practice_doctors: [],\n            roles: null,\n            permissionEditModal: false,\n            editPermissions: {},\n            allPermissions: getAllPermissions()\n        }\n        this.setPermission = this.setPermission.bind(this);\n        this.staffRoles();\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    setPermission(codename, e) {\n        let that = this;\n        let value = e.target.checked;\n        this.setState(function (prevState) {\n            let permission = {...prevState.editPermissions[codename]}\n            permission.loading = true;\n            return {editPermissions: {...prevState.editPermissions, [codename]: permission}}\n        });\n        if (value) {\n            let reqData = {\n                \"name\": null,\n                \"codename\": codename,\n                \"is_active\": true,\n                \"practice\": that.props.active_practiceId,\n                \"user\": that.state.currentUser\n            }\n            let successFn = function (data) {\n                that.setState(function (prevState) {\n                    return {editPermissions: {...prevState.editPermissions, [codename]: data}}\n                })\n            }\n            let errorFn = function () {\n            }\n            postAPI(SET_USER_PERMISSION, reqData, successFn, errorFn);\n        } else {\n            if (that.state.editPermissions[codename].id) {\n                let reqData = {\n                    // \"name\": null,\n                    // \"codename\": codename,\n                    \"is_active\": false,\n                    // \"practice\": that.props.active_practiceId,\n                    // \"user\": that.state.currentUser\n                }\n                let successFn = function (data) {\n                    that.setState(function (prevState) {\n                        return {editPermissions: {...prevState.editPermissions, [data.codename]: undefined}}\n                    })\n                }\n                let errorFn = function () {\n\n                }\n                patchAPI(interpolate(SET_SPECIFIC_USER_PERMISSION, [that.state.editPermissions[codename].id]), reqData, successFn, errorFn);\n            } else {\n\n            }\n        }\n    }\n\n    editPermissions(user) {\n        let that = this;\n        if (!user) {\n            that.setState({\n                permissionEditModal: false,\n            });\n            return true\n        }\n\n        that.setState({\n            permissionEditModal: true,\n            editPermissions: [],\n            currentUser: user\n        });\n        let successFn = function (data) {\n            let permissions = {}\n            data.forEach(function (item) {\n                permissions[item.codename] = item\n            })\n            that.setState({\n                editPermissions: permissions\n            })\n        }\n        let errorFn = function () {\n        }\n        getAPI(interpolate(USER_PRACTICE_PERMISSIONS, [user, that.props.active_practiceId]), successFn, errorFn);\n    }\n\n    loadData() {\n        // let group = loggedInUserGroup();\n        // if (group[0].name == \"Admin\") {\n        this.admin_StaffData();\n        // }\n        // else {\n        //     this.clinicData();\n        // }\n\n    }\n\n    deleteStaff(value) {\n        var that = this;\n        let successFn = function (data) {\n            that.loadData();\n            console.log(\"Deleted\");\n        };\n        let errorFn = function () {\n        };\n        deleteAPI(interpolate(SINGLE_PRACTICE_STAFF_API, [value]), successFn, errorFn);\n\n    }\n\n    staffRoles() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                roles: data,\n            })\n        }\n        let errorFn = function () {\n        }\n        getAPI(STAFF_ROLES, successFn, errorFn)\n    }\n\n    admin_StaffData() {\n        var that = this;\n        let successFn = function (data) {\n            let doctor = [];\n            let staff = [];\n            data.staff.forEach(function (usersdata) {\n                if (usersdata.role == DOCTORS_ROLE) {\n                    doctor.push(usersdata);\n                } else {\n                    staff.push(usersdata);\n                }\n            });\n            that.setState({\n                practice_doctors: doctor,\n                practice_staff: staff,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n\n    clinicData() {\n        let practice = loggedInUserPractices();\n        var practiceKeys = Object.keys(practice);\n        var that = this;\n        // practiceKeys.forEach(function(key){\n        //     let successFn = function (data) {\n        //       that.setState(function(prevState){\n        //         let doctors = prevState.practice_doctors;\n        //         let staff= prevState.practice_staff;\n        //         // if(doctors==null){doctors=[];}\n        //         // if(staff==null){staff=[];}\n        //         data.doctors.concat(doctors);\n        //         data.staff.concat(staff);\n        //         return{\n        //           practice_staff:data.staff,\n        //           practice_doctors:data.doctors,\n        //         }\n        //       })\n        //     }\n        //     let errorFn = function () {\n        //     };\n        //     getAPI(interpolate(PRACTICESTAFF,[key]), successFn, errorFn);\n        //\n        // });\n        let successFn = function (data) {\n            data.staff.forEach(function (usersdata) {\n                if (usersdata.role == DOCTORS_ROLE) {\n                    let doctor = that.state.practice_doctors;\n                    doctor.push(usersdata);\n                    that.setState({\n                        practice_doctors: doctor,\n                    })\n                } else {\n                    let doctor = that.state.practice_staff;\n                    doctor.push(usersdata);\n                    that.setState({\n                        practice_staff: doctor,\n                    })\n                }\n            })\n        }\n        let errorFn = function () {\n        };\n        getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n\n\n    }\n\n    handleClick = (e) => {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n\n    render() {\n        let that = this;\n        const columns = [{\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        }, {\n            title: \"Email\",\n            dataIndex: \"email\",\n            key: \"email\",\n            render: (value, record) => (record.user && record.user.is_active ? record.user.email : value)\n        }, {\n            title: \"Mobile\",\n            dataIndex: \"mobile\",\n            key: \"mobile\",\n        }, {\n            title: \"Registration Number\",\n            dataIndex: \"registration_number\",\n            key: \"registration_number\",\n        }, {\n            title: \"Status\",\n            key: \"user\",\n            render: (text, record) => (record.user && record.user.is_active ? <Tag color=\"#87d068\">Active</Tag> :\n                <Tag color=\"#f50\">Pending</Tag>),\n        }, {\n            title: \"Action\t\",\n            key: \"action\",\n            render: function (text, record) {\n                return (record.user && record.is_superuser ?\n                    <Tag> Not Allowed</Tag> :\n                    <span>\n            <Link to={\"/settings/clinics-staff/\" + record.id + \"/edit\"}>\n              <a>Edit</a>\n            </Link>\n                     <Divider type=\"vertical\"/>\n                        <a disabled={!(record.user && record.user.is_active)}\n                           onClick={() => that.editPermissions(record.user.id)}>Permissions</a>\n                    <Divider type=\"vertical\"/>\n              <a onClick={() => this.deleteStaff(record.id)}>Delete</a>\n            </span>)\n            }\n        }];\n\n        const notification_columns = [{\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        }, {\n            title: \"Confirmation SMS\",\n            dataIndex: \"confirmation_sms\",\n            key: \"confirmation_sms\",\n            render: confirmation_sms => (\n                <span>\n            <Checkbox disabled\n                      checked={confirmation_sms}/>\n            </span>),\n        }, {\n            title: \"Schedule SMS\",\n            dataIndex: \"schedule_sms\",\n            key: \"schedule_sms\",\n            render: schedule_sms => (\n                <span>\n            <Checkbox disabled checked={schedule_sms}/>\n            </span>)\n        }, {\n            title: \"Confirmation EMAIL\",\n            dataIndex: \"confirmation_email\",\n            key: \"confirmation_email\",\n            render: confirmation_email => (\n                <span>\n            <Checkbox disabled checked={confirmation_email}/>\n            </span>)\n        }, {\n            title: \"online_appointment_sms\",\n            dataIndex: \"online_appointment_sms\",\n            key: \"online_appointment_sms\",\n            render: online_appointment_sms => (\n                <Checkbox disabled checked={online_appointment_sms}/>\n            )\n        }];\n        return <Row>\n            <h2>Practice Staff</h2>\n            <Card>\n                <Tabs defaultActiveKey=\"staff\">\n                    <TabPane tab={<span><Icon type=\"user-add\"/>Manage Staff</span>} key=\"staff\">\n                        <h2>Doctors <Link to=\"/settings/clinics-staff/adddoctor\">\n                            <Button type=\"primary\" style={{float: 'right'}}>\n                                <Icon type=\"plus\"/>&nbsp;Add Doctor/Staff\n                            </Button>\n                        </Link></h2>\n                        <Table pagination={false} columns={columns} dataSource={this.state.practice_doctors}/>\n                        <h2>Staff </h2>\n                        <Table pagination={false} columns={columns} dataSource={this.state.practice_staff}/>\n                    </TabPane>\n                    <TabPane tab={<span><Icon type=\"team\"/>Staff Notification</span>} key=\"notification\">\n                        <h2>Doctors</h2>\n                        <Table pagination={false} columns={notification_columns}\n                               dataSource={this.state.practice_doctors}/>\n                        <h2>Staff</h2>\n                        <Table pagination={false} columns={notification_columns}\n                               dataSource={this.state.practice_staff}/>\n                    </TabPane>\n                    <TabPane tab={<span><Icon type=\"schedule\"/>Doctors visit Timing</span>} key=\"timing\">\n                        <Table>\n                            <Column title=\"Name\"\n                                    dataIndex=\"name\"\n                                    key=\"name\"\n                            />\n                            <Column title=\"Visit Timing\"\n                                    dataIndex=\"loginstatus\"\n                                    key=\"VisitTiming\"\n                            />\n                            <Column title=\"Action\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Link to=\"/settings/clinics-staff/adddoctor\">\n                                            <a>Edit</a>\n                                        </Link>\n                                    )}/>\n                        </Table>\n                    </TabPane>\n                </Tabs>\n                <Modal title=\"Edit Permissions\"\n                       visible={this.state.permissionEditModal}\n                       onCancel={() => this.editPermissions()}\n                       footer={null}>\n                    {that.state.allPermissions.map(item => <Checkbox value={item.codename}\n                                                                     checked={that.state.editPermissions[item.codename]}\n                                                                     disabled={that.state.editPermissions[item.codename] && that.state.editPermissions[item.codename].loading}\n                                                                     onClick={(e) => this.setPermission(item.codename, e)}\n                                                                     style={{display: 'list-item'}}>{item.id} {item.name}</Checkbox>)}\n                </Modal>\n            </Card>\n        </Row>\n    }\n}\n\nexport default PracticeDetails;\n"]},"metadata":{},"sourceType":"module"}