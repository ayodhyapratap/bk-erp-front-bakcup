{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/prescriptions/Prescriptions.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Card, Divider, Form, Icon, Popconfirm, Row, Table } from \"antd\";\nimport { CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { DRUG_CATALOG } from \"../../../../constants/api\";\nimport { getAPI, deleteAPI, interpolate, postAPI } from \"../../../../utils/common\";\nimport AddPrescription from \"./AddPrescription\";\n\nvar Prescriptions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prescriptions, _React$Component);\n\n  function Prescriptions(props) {\n    var _this;\n\n    _classCallCheck(this, Prescriptions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prescriptions).call(this, props));\n    _this.state = {\n      catalog: null,\n      editCatalog: null\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteObject = _this.deleteObject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Prescriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          catalog: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"editCatalog\",\n    value: function editCatalog(record) {\n      this.setState({\n        editCatalog: record\n      });\n      this.props.history.push('/settings/prescriptions/edit');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'code'\n      }, {\n        title: 'Dosage',\n        dataIndex: 'strength',\n        key: 'strength'\n      }, {\n        title: ' Drug Instructions',\n        dataIndex: 'instruction',\n        key: 'instruction'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editCatalog(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this prescription?\",\n            onConfirm: function onConfirm() {\n              return that.deleteObject(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/settings/prescriptions/add\",\n        render: function render() {\n          return React.createElement(AddPrescription, Object.assign({}, _this2.props, {\n            loadData: _this2.loadData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/settings/prescriptions/edit\",\n        render: function render(route) {\n          return React.createElement(AddPrescription, Object.assign({}, _this2.state, {\n            loadData: _this2.loadData\n          }, _this2.props, route, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"All presciptions\", React.createElement(Link, {\n        to: \"/settings/prescriptions/add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"\\xA0Add\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.catalog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Prescriptions;\n}(React.Component);\n\nexport default Prescriptions;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/prescriptions/Prescriptions.js"],"names":["React","DynamicFieldsForm","Button","Card","Divider","Form","Icon","Popconfirm","Row","Table","CHECKBOX_FIELD","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","Link","Route","Switch","DRUG_CATALOG","getAPI","deleteAPI","interpolate","postAPI","AddPrescription","Prescriptions","props","state","catalog","editCatalog","loadData","bind","deleteObject","that","successFn","data","console","log","setState","errorFn","active_practiceId","record","reqData","is_active","history","push","columns","title","dataIndex","key","render","text","route","float","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Card, Divider, Form, Icon, Popconfirm, Row, Table} from \"antd\";\nimport {CHECKBOX_FIELD, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../../constants/dataKeys\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {DRUG_CATALOG,} from \"../../../../constants/api\";\nimport {getAPI, deleteAPI, interpolate, postAPI} from \"../../../../utils/common\";\nimport AddPrescription from \"./AddPrescription\";\n\nclass Prescriptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            catalog: null,\n            editCatalog: null\n        }\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"get table\");\n            that.setState({\n                catalog: data,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        }\n        postAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n\n    editCatalog(record) {\n        this.setState({\n            editCatalog: record\n        });\n        this.props.history.push('/settings/prescriptions/edit')\n    }\n\n    render() {\n        let that = this;\n        const columns = [{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'code',\n        }, {\n            title: 'Dosage',\n            dataIndex: 'strength',\n            key: 'strength',\n        }, {\n            title: ' Drug Instructions',\n            dataIndex: 'instruction',\n            key: 'instruction',\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    <a onClick={() => this.editCatalog(record)}>\n                Edit</a>\n                <Divider type=\"vertical\"/>\n                  <Popconfirm title=\"Are you sure delete this prescription?\" onConfirm={() => that.deleteObject(record)}\n                              okText=\"Yes\" cancelText=\"No\">\n                      <a>Delete</a>\n                  </Popconfirm>\n              </span>\n            ),\n        }];\n        return <Row>\n            <Switch>\n                <Route exact path=\"/settings/prescriptions/add\"\n                       render={() => <AddPrescription  {...this.props} loadData={this.loadData}/>}/>\n                <Route exact path=\"/settings/prescriptions/edit\"\n                       render={(route) => <AddPrescription  {...this.state} loadData={this.loadData} {...this.props} {...route}/>}/>\n                <Route>\n                    <div>\n                        <h2>All presciptions\n                            <Link to=\"/settings/prescriptions/add\">\n                                <Button type=\"primary\" style={{float: 'right'}}>\n                                    <Icon type=\"plus\"/>&nbsp;Add\n                                </Button>\n                            </Link>\n                        </h2>\n                        <Card>\n                            <Table columns={columns} dataSource={this.state.catalog}/>\n                        </Card>\n                    </div>\n                </Route>\n            </Switch>\n        </Row>\n    }\n}\n\nexport default Prescriptions;\n"]},"metadata":{},"sourceType":"module"}