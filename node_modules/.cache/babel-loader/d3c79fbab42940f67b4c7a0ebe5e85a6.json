{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/inventory/vendor/AddVendor.js\";\nimport { Card, Form, Row } from \"antd\";\nimport React from \"react\";\nimport { INPUT_FIELD, SUCCESS_MSG_TYPE } from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { displayMessage, getAPI, interpolate } from \"../../../utils/common\";\nimport { SINGLE_VENDOR_API, VENDOR_API } from \"../../../constants/api\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nvar AddVendor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddVendor, _React$Component);\n\n  function AddVendor(props) {\n    var _this;\n\n    _classCallCheck(this, AddVendor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddVendor).call(this, props));\n\n    _this.changeRedirect = function () {\n      var redirectVar = _this.state.redirect;\n\n      _this.setState({\n        redirect: !redirectVar\n      });\n    };\n\n    _this.state = {\n      editData: _this.props.editData ? _this.props.editData : null\n    };\n    return _this;\n  }\n\n  _createClass(AddVendor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.id) {\n        if (!this.state.editData) {\n          this.loadData();\n        }\n      }\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          editData: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(SINGLE_VENDOR_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var fields = [{\n        label: \"Name\",\n        key: \"name\",\n        initialValue: this.state.editData ? this.state.editData.name : null,\n        type: INPUT_FIELD,\n        required: true\n      }, {\n        label: \"Description\",\n        key: \"description\",\n        initialValue: this.state.editData ? this.state.editData.description : null,\n        type: INPUT_FIELD\n      }];\n      var editformProp;\n\n      if (this.state.editData) {\n        editformProp = {\n          successFn: function successFn(data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"success\");\n            that.props.loadData();\n            console.log(data);\n          },\n          errorFn: function errorFn() {},\n          action: interpolate(SINGLE_VENDOR_API, [this.props.match.params.id]),\n          method: \"put\"\n        };\n      }\n\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          that.props.loadData();\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(VENDOR_API, [that.props.active_practiceId]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/inventory/vendor/edit/:id\",\n        render: function render() {\n          return _this2.props.match.params.id ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Vendor\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: editformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/inventory/vendor',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/inventory/vendor/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Vendor\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/inventory/vendor',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddVendor;\n}(React.Component);\n\nexport { AddVendor as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/inventory/vendor/AddVendor.js"],"names":["Card","Form","Row","React","INPUT_FIELD","SUCCESS_MSG_TYPE","DynamicFieldsForm","displayMessage","getAPI","interpolate","SINGLE_VENDOR_API","VENDOR_API","Route","Redirect","AddVendor","props","changeRedirect","redirectVar","state","redirect","setState","editData","match","params","id","loadData","that","successFn","data","errorFn","fields","label","key","initialValue","name","type","required","description","editformProp","console","log","action","method","TestFormLayout","create","formProp","active_practiceId","defaultValues","Component"],"mappings":"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","sourcesContent":["import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    INPUT_FIELD,\n    SUCCESS_MSG_TYPE,\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {\n    SINGLE_VENDOR_API, VENDOR_API\n} from \"../../../constants/api\";\nimport {Route, Redirect} from \"react-router-dom\";\n\n\nexport default class AddVendor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editData: this.props.editData ? this.props.editData : null\n        }\n    }\n\n    changeRedirect = () => {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editData) {\n                this.loadData();\n            }\n        }\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_VENDOR_API, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        let that = this;\n        const fields = [{\n            label: \"Name\",\n            key: \"name\",\n            initialValue: this.state.editData ? this.state.editData.name : null,\n            type: INPUT_FIELD,\n            required: true\n        }, {\n            label: \"Description\",\n            key: \"description\",\n            initialValue: this.state.editData ? this.state.editData.description : null,\n            type: INPUT_FIELD\n        }];\n\n\n        let editformProp;\n        if (this.state.editData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    that.props.loadData();\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_VENDOR_API, [this.props.match.params.id]),\n                method: \"put\",\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                that.props.loadData();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(VENDOR_API, [that.props.active_practiceId]),\n            method: \"post\",\n        }\n        const defaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n        return <Row>\n            <Card>\n                <Route exact path='/inventory/vendor/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Vendor\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/inventory/vendor'}/>)}/>\n                <Route exact path='/inventory/vendor/add'\n                       render={() => <TestFormLayout title=\"Add Vendor\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/inventory/vendor'}/>}\n        </Row>\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}