{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/labs/AddorEditLab.js\";\nimport React from \"react\";\nimport { Card, Row } from \"antd\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Form } from \"antd/lib/index\";\nimport { INPUT_FIELD, NUMBER_FIELD, SELECT_FIELD, SUCCESS_MSG_TYPE, TEXT_FIELD } from \"../../../../constants/dataKeys\";\nimport { displayMessage, getAPI, interpolate } from \"../../../../utils/common\";\nimport { LABTEST_API, PRODUCT_MARGIN } from \"../../../../constants/api\";\n\nvar AddorEditLab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddorEditLab, _React$Component);\n\n  function AddorEditLab(props) {\n    var _this;\n\n    _classCallCheck(this, AddorEditLab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddorEditLab).call(this, props));\n    _this.state = {\n      redirect: false,\n      editFields: _this.props.editTest ? _this.props.editTest : null,\n      productMargin: []\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.loadProductMargin();\n\n    return _this;\n  }\n\n  _createClass(AddorEditLab, [{\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar,\n        editFields: {}\n      });\n    }\n  }, {\n    key: \"loadProductMargin\",\n    value: function loadProductMargin() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          productMargin: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(PRODUCT_MARGIN, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var fields = [{\n        label: \"Test Name\",\n        key: \"name\",\n        type: INPUT_FIELD,\n        initialValue: this.state.editFields ? this.state.editFields.name : null,\n        required: true\n      }, {\n        label: \"Cost\",\n        key: \"cost\",\n        type: NUMBER_FIELD,\n        initialValue: this.state.editFields ? this.state.editFields.cost : null,\n        required: true,\n        follow: 'INR',\n        min: 1\n      }, {\n        label: 'MLM Margin Type',\n        type: SELECT_FIELD,\n        initialValue: this.state.editFields ? this.state.editFields.margin : null,\n        key: 'margin',\n        required: true,\n        options: that.state.productMargin.map(function (margin) {\n          return {\n            label: margin.name,\n            value: margin.id\n          };\n        })\n      }, {\n        label: \"Instructions\",\n        key: \"instruction\",\n        initialValue: this.state.editFields ? this.state.editFields.instruction : null,\n        type: TEXT_FIELD\n      }];\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          that.props.loadData();\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(LABTEST_API, [that.props.active_practiceId]),\n        method: \"post\"\n      };\n      var defaultValues = [];\n      if (this.state.editFields) defaultValues.push({\n        'key': 'id',\n        'value': this.state.editFields.id\n      });\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/settings/labs/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Lab\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/settings/labs/edit\",\n        render: function render() {\n          return _this2.state.editFields ? React.createElement(TestFormLayout, {\n            title: \"Add Lab\",\n            defaultValues: defaultValues,\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/settings/labs',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/settings/labs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddorEditLab;\n}(React.Component);\n\nexport { AddorEditLab as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/labs/AddorEditLab.js"],"names":["React","Card","Row","Redirect","Route","DynamicFieldsForm","Form","INPUT_FIELD","NUMBER_FIELD","SELECT_FIELD","SUCCESS_MSG_TYPE","TEXT_FIELD","displayMessage","getAPI","interpolate","LABTEST_API","PRODUCT_MARGIN","AddorEditLab","props","state","redirect","editFields","editTest","productMargin","changeRedirect","bind","loadProductMargin","redirectVar","setState","that","successFn","data","errorFn","TestFormLayout","create","fields","label","key","type","initialValue","name","required","cost","follow","min","margin","options","map","value","id","instruction","formProp","loadData","console","log","action","active_practiceId","method","defaultValues","push","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,MAAxB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,gBAJJ,EAIsBC,UAJtB,QAKO,gCALP;AAMA,SAAQC,cAAR,EAAwBC,MAAxB,EAAgCC,WAAhC,QAAkD,0BAAlD;AACA,SAAQC,WAAR,EAAoBC,cAApB,QAAyC,2BAAzC;;IAEqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,UAAU,EAAG,MAAKH,KAAL,CAAWI,QAAX,GAAsB,MAAKJ,KAAL,CAAWI,QAAjC,GAA4C,IAFhD;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;;AACA,UAAKC,iBAAL;;AARe;AASlB;;;;qCAEgB;AACb,UAAIC,WAAW,GAAG,KAAKR,KAAL,CAAWC,QAA7B;AACA,WAAKQ,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,CAACO,WADD;AAEVN,QAAAA,UAAU,EAAE;AAFF,OAAd;AAIH;;;wCAEmB;AAChB,UAAIQ,IAAI,GAAG,IAAX;;AACA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BF,QAAAA,IAAI,CAACD,QAAL,CAAc;AACVL,UAAAA,aAAa,EAAEQ;AADL,SAAd;AAGH,OAJD;;AAKA,UAAIC,OAAO,GAAG,SAAVA,OAAU,GAAY,CAEzB,CAFD;;AAGAnB,MAAAA,MAAM,CAACG,cAAD,EAAiBc,SAAjB,EAA4BE,OAA5B,CAAN;AACH;;;6BAEQ;AAAA;;AACL,UAAIH,IAAI,GAAG,IAAX;AACA,UAAMI,cAAc,GAAG3B,IAAI,CAAC4B,MAAL,GAAc7B,iBAAd,CAAvB;AACA,UAAM8B,MAAM,GAAG,CAAC;AACZC,QAAAA,KAAK,EAAE,WADK;AAEZC,QAAAA,GAAG,EAAE,MAFO;AAGZC,QAAAA,IAAI,EAAE/B,WAHM;AAIZgC,QAAAA,YAAY,EAAG,KAAKpB,KAAL,CAAWE,UAAX,GAAwB,KAAKF,KAAL,CAAWE,UAAX,CAAsBmB,IAA9C,GAAqD,IAJxD;AAKZC,QAAAA,QAAQ,EAAE;AALE,OAAD,EAMZ;AACCL,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,GAAG,EAAE,MAFN;AAGCC,QAAAA,IAAI,EAAE9B,YAHP;AAIC+B,QAAAA,YAAY,EAAG,KAAKpB,KAAL,CAAWE,UAAX,GAAwB,KAAKF,KAAL,CAAWE,UAAX,CAAsBqB,IAA9C,GAAqD,IAJrE;AAKCD,QAAAA,QAAQ,EAAE,IALX;AAMCE,QAAAA,MAAM,EAAE,KANT;AAOCC,QAAAA,GAAG,EAAE;AAPN,OANY,EAcZ;AACCR,QAAAA,KAAK,EAAE,iBADR;AAECE,QAAAA,IAAI,EAAE7B,YAFP;AAGC8B,QAAAA,YAAY,EAAG,KAAKpB,KAAL,CAAWE,UAAX,GAAwB,KAAKF,KAAL,CAAWE,UAAX,CAAsBwB,MAA9C,GAAuD,IAHvE;AAICR,QAAAA,GAAG,EAAE,QAJN;AAKCI,QAAAA,QAAQ,EAAE,IALX;AAMCK,QAAAA,OAAO,EAAEjB,IAAI,CAACV,KAAL,CAAWI,aAAX,CAAyBwB,GAAzB,CAA6B,UAAAF,MAAM;AAAA,iBAAK;AAACT,YAAAA,KAAK,EAAES,MAAM,CAACL,IAAf;AAAqBQ,YAAAA,KAAK,EAAEH,MAAM,CAACI;AAAnC,WAAL;AAAA,SAAnC;AANV,OAdY,EAqBZ;AACCb,QAAAA,KAAK,EAAE,cADR;AAECC,QAAAA,GAAG,EAAE,aAFN;AAGCE,QAAAA,YAAY,EAAG,KAAKpB,KAAL,CAAWE,UAAX,GAAwB,KAAKF,KAAL,CAAWE,UAAX,CAAsB6B,WAA9C,GAA4D,IAH5E;AAICZ,QAAAA,IAAI,EAAE3B;AAJP,OArBY,CAAf;AA2BA,UAAMwC,QAAQ,GAAG;AACbrB,QAAAA,SAAS,EAAE,mBAAUC,IAAV,EAAgB;AACvBnB,UAAAA,cAAc,CAACF,gBAAD,EAAmB,SAAnB,CAAd;AACAmB,UAAAA,IAAI,CAACX,KAAL,CAAWkC,QAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACH,SALY;AAMbC,QAAAA,OAAO,EAAE,mBAAY,CAEpB,CARY;AASbuB,QAAAA,MAAM,EAAEzC,WAAW,CAACC,WAAD,EAAc,CAACc,IAAI,CAACX,KAAL,CAAWsC,iBAAZ,CAAd,CATN;AAUbC,QAAAA,MAAM,EAAE;AAVK,OAAjB;AAYA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAI,KAAKvC,KAAL,CAAWE,UAAf,EACIqC,aAAa,CAACC,IAAd,CAAmB;AAAC,eAAO,IAAR;AAAc,iBAAS,KAAKxC,KAAL,CAAWE,UAAX,CAAsB4B;AAA7C,OAAnB;AACJ,aAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,oBAAlB;AACO,QAAA,MAAM,EAAE;AAAA,iBAAM,oBAAC,cAAD;AAAgB,YAAA,KAAK,EAAC,SAAtB;AAAgC,YAAA,cAAc,EAAE,MAAI,CAACzB,cAArD;AACgB,YAAA,QAAQ,EAAE2B,QAD1B;AACoC,YAAA,MAAM,EAAEhB,MAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,qBAAlB;AACO,QAAA,MAAM,EAAE;AAAA,iBAAO,MAAI,CAAChB,KAAL,CAAWE,UAAX,GACX,oBAAC,cAAD;AAAgB,YAAA,KAAK,EAAC,SAAtB;AAAgC,YAAA,aAAa,EAAEqC,aAA/C;AACgB,YAAA,cAAc,EAAE,MAAI,CAAClC,cADrC;AAEgB,YAAA,QAAQ,EAAE2B,QAF1B;AAEoC,YAAA,MAAM,EAAEhB,MAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,GAG6C,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAE,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHpD;AAAA,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADG,EAWF,KAAKhB,KAAL,CAAWC,QAAX,IAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXrB,CAAP;AAaH;;;;EA3FqCpB,KAAK,CAAC4D,S;;SAA3B3C,Y","sourcesContent":["import React from \"react\";\nimport {Card, Row} from \"antd\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Form} from \"antd/lib/index\";\nimport {\n    INPUT_FIELD,\n    NUMBER_FIELD,\n    SELECT_FIELD,\n    SUCCESS_MSG_TYPE, TEXT_FIELD\n} from \"../../../../constants/dataKeys\";\nimport {displayMessage, getAPI, interpolate} from \"../../../../utils/common\";\nimport {LABTEST_API,PRODUCT_MARGIN} from \"../../../../constants/api\";\n\nexport default class AddorEditLab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            editFields: (this.props.editTest ? this.props.editTest : null),\n            productMargin: []\n        }\n        this.changeRedirect = this.changeRedirect.bind(this);\n        this.loadProductMargin();\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n            editFields: {},\n        });\n    }\n\n    loadProductMargin() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                productMargin: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(PRODUCT_MARGIN, successFn, errorFn);\n    }\n\n    render() {\n        let that = this;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const fields = [{\n            label: \"Test Name\",\n            key: \"name\",\n            type: INPUT_FIELD,\n            initialValue: (this.state.editFields ? this.state.editFields.name : null),\n            required: true\n        }, {\n            label: \"Cost\",\n            key: \"cost\",\n            type: NUMBER_FIELD,\n            initialValue: (this.state.editFields ? this.state.editFields.cost : null),\n            required: true,\n            follow: 'INR',\n            min: 1\n        }, {\n            label: 'MLM Margin Type',\n            type: SELECT_FIELD,\n            initialValue: (this.state.editFields ? this.state.editFields.margin : null),\n            key: 'margin',\n            required: true,\n            options: that.state.productMargin.map(margin => ({label: margin.name, value: margin.id}))\n        }, {\n            label: \"Instructions\",\n            key: \"instruction\",\n            initialValue: (this.state.editFields ? this.state.editFields.instruction : null),\n            type: TEXT_FIELD,\n        }];\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n                that.props.loadData();\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(LABTEST_API, [that.props.active_practiceId]),\n            method: \"post\",\n        };\n        let defaultValues = [];\n        if (this.state.editFields)\n            defaultValues.push({'key': 'id', 'value': this.state.editFields.id});\n        return <Row>\n            <Card>\n                <Route exact path='/settings/labs/add'\n                       render={() => <TestFormLayout title=\"Add Lab\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n                <Route exact path='/settings/labs/edit'\n                       render={() => (this.state.editFields ?\n                           <TestFormLayout title=\"Add Lab\" defaultValues={defaultValues}\n                                           changeRedirect={this.changeRedirect}\n                                           formProp={formProp} fields={fields}/> : <Redirect to={'/settings/labs'}/>)}/>\n            </Card>\n            {this.state.redirect && <Redirect to={'/settings/labs'}/>}\n        </Row>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}