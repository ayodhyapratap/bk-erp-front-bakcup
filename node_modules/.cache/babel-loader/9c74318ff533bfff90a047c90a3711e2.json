{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _tooltip = require('../tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _LocaleReceiver = require('../locale-provider/LocaleReceiver');\n\nvar _LocaleReceiver2 = _interopRequireDefault(_LocaleReceiver);\n\nvar _default = require('../locale-provider/default');\n\nvar _default2 = _interopRequireDefault(_default);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Popconfirm = function (_React$Component) {\n  (0, _inherits3['default'])(Popconfirm, _React$Component);\n\n  function Popconfirm(props) {\n    (0, _classCallCheck3['default'])(this, Popconfirm);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (Popconfirm.__proto__ || Object.getPrototypeOf(Popconfirm)).call(this, props));\n\n    _this.onConfirm = function (e) {\n      _this.setVisible(false, e);\n\n      var onConfirm = _this.props.onConfirm;\n\n      if (onConfirm) {\n        onConfirm.call(_this, e);\n      }\n    };\n\n    _this.onCancel = function (e) {\n      _this.setVisible(false, e);\n\n      var onCancel = _this.props.onCancel;\n\n      if (onCancel) {\n        onCancel.call(_this, e);\n      }\n    };\n\n    _this.onVisibleChange = function (visible) {\n      _this.setVisible(visible);\n    };\n\n    _this.saveTooltip = function (node) {\n      _this.tooltip = node;\n    };\n\n    _this.renderOverlay = function (popconfirmLocale) {\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          okButtonProps = _this$props.okButtonProps,\n          cancelButtonProps = _this$props.cancelButtonProps,\n          title = _this$props.title,\n          cancelText = _this$props.cancelText,\n          okText = _this$props.okText,\n          okType = _this$props.okType,\n          icon = _this$props.icon;\n      return React.createElement('div', null, React.createElement('div', {\n        className: prefixCls + '-inner-content'\n      }, React.createElement('div', {\n        className: prefixCls + '-message'\n      }, icon, React.createElement('div', {\n        className: prefixCls + '-message-title'\n      }, title)), React.createElement('div', {\n        className: prefixCls + '-buttons'\n      }, React.createElement(_button2['default'], (0, _extends3['default'])({\n        onClick: _this.onCancel,\n        size: 'small'\n      }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), React.createElement(_button2['default'], (0, _extends3['default'])({\n        onClick: _this.onConfirm,\n        type: okType,\n        size: 'small'\n      }, okButtonProps), okText || popconfirmLocale.okText))));\n    };\n\n    _this.state = {\n      visible: props.visible\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(Popconfirm, [{\n    key: 'getPopupDomNode',\n    value: function getPopupDomNode() {\n      return this.tooltip.getPopupDomNode();\n    }\n  }, {\n    key: 'setVisible',\n    value: function setVisible(visible, e) {\n      var props = this.props;\n\n      if (!('visible' in props)) {\n        this.setState({\n          visible: visible\n        });\n      }\n\n      var onVisibleChange = props.onVisibleChange;\n\n      if (onVisibleChange) {\n        onVisibleChange(visible, e);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          prefixCls = _a.prefixCls,\n          placement = _a.placement,\n          restProps = __rest(_a, [\"prefixCls\", \"placement\"]);\n\n      var overlay = React.createElement(_LocaleReceiver2['default'], {\n        componentName: 'Popconfirm',\n        defaultLocale: _default2['default'].Popconfirm\n      }, this.renderOverlay);\n      return React.createElement(_tooltip2['default'], (0, _extends3['default'])({}, restProps, {\n        prefixCls: prefixCls,\n        placement: placement,\n        onVisibleChange: this.onVisibleChange,\n        visible: this.state.visible,\n        overlay: overlay,\n        ref: this.saveTooltip\n      }));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      } else if ('defaultVisible' in nextProps) {\n        return {\n          visible: nextProps.defaultVisible\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Popconfirm;\n}(React.Component);\n\nPopconfirm.defaultProps = {\n  prefixCls: 'ant-popover',\n  transitionName: 'zoom-big',\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: React.createElement(_icon2['default'], {\n    type: 'exclamation-circle',\n    theme: 'filled'\n  })\n};\n(0, _reactLifecyclesCompat.polyfill)(Popconfirm);\nexports['default'] = Popconfirm;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}