{"ast":null,"code":"import _defineProperty from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport lockr from 'lockr';\nimport axios from 'axios';\nimport { AUTH_TOKEN, PASSWORD, ROLE, EMAIL, PRACTICE, GROUP } from \"../constants/dataKeys\";\nimport { getAPI, handleErrorResponse, makeURL } from \"./common\";\nimport { LOGIN_URL, USER_DATA } from \"../constants/api\";\nimport { CURRENT_PRACTICE } from \"../constants/formLabels\";\nexport var loggedInUser = function loggedInUser() {\n  var role = lockr.get(ROLE);\n  var token = lockr.get(AUTH_TOKEN);\n\n  if (role && token) {\n    return role;\n  }\n\n  return null;\n};\nexport var currentPractice = function currentPractice() {};\nexport var setCurrentPractice = function setCurrentPractice(practice) {\n  lockr.set(CURRENT_PRACTICE, practice);\n};\nexport var loggedInUserGroup = function loggedInUserGroup() {\n  var role = lockr.get(ROLE);\n  var token = lockr.get(AUTH_TOKEN);\n  var group = lockr.get(GROUP);\n\n  if (role && token && group) {\n    return group;\n  }\n\n  return null;\n};\nexport var loggedInUserPractices = function loggedInUserPractices() {\n  var role = lockr.get(ROLE);\n  var token = lockr.get(AUTH_TOKEN);\n  var practice = lockr.get(PRACTICE);\n\n  if (role && token && practice) {\n    return practice;\n  }\n\n  return [];\n};\nexport var loggedInactivePractice = function loggedInactivePractice() {\n  var currentPractice = lockr.get(CURRENT_PRACTICE);\n\n  if (currentPractice && currentPractice != {}) {\n    return currentPractice;\n  } else {\n    var practice = lockr.get(PRACTICE);\n\n    if (practice && practice.length) {\n      console.log(practice);\n      setCurrentPractice(practice[0].pratice.id);\n      return loggedInactivePractice();\n    }\n  }\n\n  return null;\n};\nexport var loggedInPermissions = function loggedInPermissions() {\n  var groups = lockr.get(GROUP);\n  var permissions = {};\n  if (groups) groups.forEach(function (group) {\n    group.permissions.forEach(function (permission) {\n      permissions[permission.codename] = true;\n    });\n  });\n  return permissions;\n};\nexport var getAllPermissions = function getAllPermissions() {\n  var permissions = [];\n  var lockrPermissions = lockr.get('PERMISSIONS');\n\n  if (lockrPermissions && lockrPermissions.ADMIN && lockrPermissions.ADMIN.length) {\n    return lockrPermissions.ADMIN;\n  }\n\n  return permissions;\n};\nexport var getSuperUserPermissions = function getSuperUserPermissions() {\n  var permissions = [];\n  var lockrPermissions = lockr.get('PERMISSIONS');\n\n  if (lockrPermissions && lockrPermissions.SUPERUSER && lockrPermissions.SUPERUSER.length) {\n    return lockrPermissions.ADMIN;\n  }\n\n  return permissions;\n};\nexport var logInUser = function logInUser(data, successFn, errorFn) {\n  var _data;\n\n  console.log(\"workign\");\n  var data = (_data = {}, _defineProperty(_data, EMAIL, data.email), _defineProperty(_data, PASSWORD, data.password), _data);\n  axios.post(makeURL(LOGIN_URL), data).then(function (response) {\n    // console.log(response);\n    var data = response.data;\n    lockr.set(ROLE, data.user);\n    lockr.set(AUTH_TOKEN, data.token);\n    lockr.set(PRACTICE, data.practice_permissions);\n    lockr.set('PERMISSIONS', data.permissions_list);\n    successFn();\n  }).catch(function (error) {\n    console.log(error);\n    handleErrorResponse(error);\n    errorFn();\n  });\n};\nexport var loadUserDetails = function loadUserDetails(callBackFn) {\n  var successFn = function successFn(data) {\n    lockr.set(ROLE, data.user);\n    callBackFn();\n  };\n\n  var errorFn = function errorFn() {};\n\n  getAPI(USER_DATA, successFn, errorFn);\n};\nexport var saveAuthToken = function saveAuthToken(response, successFn) {\n  var data = response;\n  lockr.set(ROLE, data.id);\n  lockr.set(AUTH_TOKEN, data.token);\n  successFn();\n};\nexport var logOutUser = function logOutUser(successFn, errorFn) {\n  lockr.rm(ROLE);\n  lockr.rm(AUTH_TOKEN);\n  lockr.rm(PRACTICE);\n  lockr.rm(GROUP);\n  successFn();\n};\nexport var getAuthToken = function getAuthToken() {\n  var token = lockr.get(AUTH_TOKEN);\n  return token;\n};\nexport var checkRole = function checkRole(role) {\n  var roles = lockr.get(ROLE);\n\n  if (roles[role] === undefined || roles[role] === '' || !roles[role]) {\n    return false;\n  }\n\n  return roles[role];\n};","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/utils/auth.js"],"names":["lockr","axios","AUTH_TOKEN","PASSWORD","ROLE","EMAIL","PRACTICE","GROUP","getAPI","handleErrorResponse","makeURL","LOGIN_URL","USER_DATA","CURRENT_PRACTICE","loggedInUser","role","get","token","currentPractice","setCurrentPractice","practice","set","loggedInUserGroup","group","loggedInUserPractices","loggedInactivePractice","length","console","log","pratice","id","loggedInPermissions","groups","permissions","forEach","permission","codename","getAllPermissions","lockrPermissions","ADMIN","getSuperUserPermissions","SUPERUSER","logInUser","data","successFn","errorFn","email","password","post","then","response","user","practice_permissions","permissions_list","catch","error","loadUserDetails","callBackFn","saveAuthToken","logOutUser","rm","getAuthToken","checkRole","roles","undefined"],"mappings":"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","sourcesContent":["import lockr from 'lockr';\nimport axios from 'axios';\nimport {AUTH_TOKEN, PASSWORD, ROLE, EMAIL, PRACTICE, GROUP} from \"../constants/dataKeys\";\nimport {getAPI, handleErrorResponse, makeURL} from \"./common\";\nimport {LOGIN_URL, USER_DATA} from \"../constants/api\";\nimport {CURRENT_PRACTICE} from \"../constants/formLabels\";\n\n\nexport const loggedInUser = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    if (role && token) {\n        return role;\n    }\n    return null;\n};\n\nexport const currentPractice = function () {\n\n}\nexport const setCurrentPractice = function (practice) {\n    lockr.set(CURRENT_PRACTICE, practice);\n}\nexport const loggedInUserGroup = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let group = lockr.get(GROUP);\n    if (role && token && group) {\n        return group;\n    }\n    return null;\n};\nexport const loggedInUserPractices = function () {\n    let role = lockr.get(ROLE);\n    let token = lockr.get(AUTH_TOKEN);\n    let practice = lockr.get(PRACTICE);\n    if (role && token && practice) {\n        return practice;\n    }\n    return [];\n};\nexport const loggedInactivePractice = function () {\n    let currentPractice = lockr.get(CURRENT_PRACTICE);\n    if (currentPractice && currentPractice != {}) {\n        return currentPractice;\n    } else {\n        let practice = lockr.get(PRACTICE);\n        if (practice && practice.length) {\n            console.log(practice);\n            setCurrentPractice(practice[0].pratice.id);\n            return loggedInactivePractice();\n        }\n    }\n    return null\n}\n\n\nexport const loggedInPermissions = function () {\n    let groups = lockr.get(GROUP);\n    let permissions = {};\n    if (groups)\n        groups.forEach(function (group) {\n            group.permissions.forEach(function (permission) {\n                permissions[permission.codename] = true\n            });\n        })\n    return permissions;\n}\n\nexport const getAllPermissions = function () {\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.ADMIN && lockrPermissions.ADMIN.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\n\nexport const getSuperUserPermissions = function (){\n    let permissions = [];\n    let lockrPermissions = lockr.get('PERMISSIONS');\n    if (lockrPermissions && lockrPermissions.SUPERUSER && lockrPermissions.SUPERUSER.length) {\n        return lockrPermissions.ADMIN;\n    }\n    return permissions\n}\nexport const logInUser = function (data, successFn, errorFn) {\n    console.log(\"workign\");\n    var data = {\n        [EMAIL]: data.email,\n        [PASSWORD]: data.password\n    };\n    axios.post(makeURL(LOGIN_URL), data).then(function (response) {\n        // console.log(response);\n        let data = response.data;\n        lockr.set(ROLE, data.user);\n        lockr.set(AUTH_TOKEN, data.token);\n        lockr.set(PRACTICE, data.practice_permissions);\n        lockr.set('PERMISSIONS', data.permissions_list);\n        successFn()\n    }).catch(function (error) {\n        console.log(error);\n        handleErrorResponse(error);\n        errorFn();\n    })\n};\nexport const loadUserDetails = function (callBackFn) {\n    let successFn = function (data) {\n        lockr.set(ROLE, data.user);\n        callBackFn();\n    }\n    let errorFn = function () {\n\n    }\n    getAPI(USER_DATA, successFn, errorFn);\n}\nexport const saveAuthToken = function (response, successFn) {\n    let data = response;\n    lockr.set(ROLE, data.id);\n    lockr.set(AUTH_TOKEN, data.token);\n    successFn()\n}\n\nexport const logOutUser = function (successFn, errorFn) {\n    lockr.rm(ROLE);\n    lockr.rm(AUTH_TOKEN);\n    lockr.rm(PRACTICE);\n    lockr.rm(GROUP);\n    successFn();\n};\nexport const getAuthToken = function () {\n    let token = lockr.get(AUTH_TOKEN);\n    return token;\n};\n\nexport const checkRole = function (role) {\n    let roles = lockr.get(ROLE);\n    if (roles[role] === undefined || roles[role] === '' || !roles[role]) {\n        return false;\n    }\n    return roles[role];\n}\n"]},"metadata":{},"sourceType":"module"}