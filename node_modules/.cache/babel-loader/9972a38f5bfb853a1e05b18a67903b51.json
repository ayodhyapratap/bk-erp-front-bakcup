{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/billing/PaymentModes.js\";\nimport React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport { Button, Modal, Form, Table, Divider, Popconfirm } from \"antd\";\nimport { SUCCESS_MSG_TYPE, INPUT_FIELD, NUMBER_FIELD, SELECT_FIELD } from \"../../../../constants/dataKeys\";\nimport { PAYMENT_MODES } from \"../../../../constants/api\";\nimport { getAPI, displayMessage, interpolate, postAPI } from \"../../../../utils/common\";\nimport { PAYMENT_TYPES } from \"../../../../constants/hardData\";\n\nvar PaymentModes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PaymentModes, _React$Component);\n\n  function PaymentModes(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentModes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentModes).call(this, props));\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      redirect: false,\n      visible: false,\n      modes: null\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PaymentModes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          modes: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"editPayment\",\n    value: function editPayment(value) {\n      this.setState({\n        editingId: value.id,\n        editingmode: value.mode,\n        editingType: value.payment_type,\n        editingFee: value.fee,\n        visible: true\n      });\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var columns = [{\n        title: 'Mode of Payment',\n        dataIndex: 'mode',\n        key: 'mode'\n      }, {\n        title: 'Payment Type',\n        dataIndex: 'payment_type',\n        key: 'payment_type'\n      }, {\n        title: 'Fees',\n        dataIndex: 'fee',\n        key: 'fee',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, text, \" %\");\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editPayment(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this payment mode?\",\n            onConfirm: function onConfirm() {\n              return that.deleteObject(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n      }];\n      var fields = [{\n        label: \"Mode of payment\",\n        key: \"mode\",\n        required: true,\n        type: INPUT_FIELD\n      }, {\n        label: \"Payment Type\",\n        key: \"payment_type\",\n        required: true,\n        type: SELECT_FIELD,\n        options: PAYMENT_TYPES\n      }, {\n        label: \"Vendor Fee\",\n        key: \"fee\",\n        required: true,\n        type: NUMBER_FIELD,\n        min: 0,\n        follow: '%'\n      }];\n      var editfields = [{\n        label: \"Mode of payment\",\n        key: \"mode\",\n        required: true,\n        initialValue: this.state.editingmode,\n        type: INPUT_FIELD\n      }, {\n        label: \"Payment Type\",\n        key: \"payment_type\",\n        required: true,\n        initialValue: this.state.editingType,\n        type: SELECT_FIELD,\n        options: PAYMENT_TYPES\n      }, {\n        label: \"Vendor Fee\",\n        key: \"fee\",\n        required: true,\n        initialValue: this.state.editingFee,\n        type: NUMBER_FIELD,\n        min: 0,\n        follow: '%'\n      }];\n      var formProp = {\n        successFn: function successFn(data) {\n          that.handleCancel();\n          that.loadData();\n          console.log(data);\n          console.log(\"sucess\");\n          displayMessage(SUCCESS_MSG_TYPE, \"sucess\");\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(PAYMENT_MODES, [this.props.active_practiceId]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n      var editFormDefaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }, {\n        \"key\": \"id\",\n        \"value\": this.state.editingId\n      }];\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        defaultValues: defaultValues,\n        formProp: formProp,\n        fields: fields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.modes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        title: \"Edit Payment Mode\",\n        visible: this.state.visible,\n        footer: null,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(TestFormLayout, {\n        defaultValues: editFormDefaultValues,\n        formProp: formProp,\n        fields: editfields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Return\")));\n    }\n  }]);\n\n  return PaymentModes;\n}(React.Component);\n\nexport default PaymentModes;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/billing/PaymentModes.js"],"names":["React","DynamicFieldsForm","Button","Modal","Form","Table","Divider","Popconfirm","SUCCESS_MSG_TYPE","INPUT_FIELD","NUMBER_FIELD","SELECT_FIELD","PAYMENT_MODES","getAPI","displayMessage","interpolate","postAPI","PAYMENT_TYPES","PaymentModes","props","handleCancel","setState","visible","state","redirect","modes","loadData","bind","that","successFn","data","console","log","errorFn","active_practiceId","redirectVar","value","editingId","id","editingmode","mode","editingType","payment_type","editingFee","fee","record","reqData","is_active","columns","title","dataIndex","key","render","text","editPayment","deleteObject","fields","label","required","type","options","min","follow","editfields","initialValue","formProp","action","method","defaultValues","editFormDefaultValues","TestFormLayout","create","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DynamicFieldsForm from \"../../../common/DynamicFieldsForm\";\nimport {Button, Modal, Form, Table, Divider, Popconfirm} from \"antd\";\nimport {\n    SUCCESS_MSG_TYPE,\n    INPUT_FIELD,\n    NUMBER_FIELD,\n    SELECT_FIELD\n} from \"../../../../constants/dataKeys\";\nimport {PAYMENT_MODES} from \"../../../../constants/api\"\nimport {getAPI, displayMessage, interpolate, postAPI} from \"../../../../utils/common\";\nimport {PAYMENT_TYPES} from \"../../../../constants/hardData\";\n\nclass PaymentModes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            visible: false,\n            modes: null,\n        }\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"get table\");\n            that.setState({\n                modes: data,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    editPayment(value) {\n        this.setState({\n            editingId: value.id,\n            editingmode: value.mode,\n            editingType: value.payment_type,\n            editingFee: value.fee,\n            visible: true,\n        })\n    }\n\n    handleCancel = () => {\n        this.setState({visible: false});\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        postAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        const columns = [{\n            title: 'Mode of Payment',\n            dataIndex: 'mode',\n            key: 'mode',\n        }, {\n            title: 'Payment Type',\n            dataIndex: 'payment_type',\n            key: 'payment_type',\n        }, {\n            title: 'Fees',\n            dataIndex: 'fee',\n            key: 'fee',\n            render: (text, record) => (<span>{text} %</span>)\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n              <a onClick={() => this.editPayment(record)}>Edit</a>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title=\"Are you sure delete this payment mode?\"\n                                onConfirm={() => that.deleteObject(record)} okText=\"Yes\" cancelText=\"No\">\n                      <a>Delete</a>\n                  </Popconfirm>\n              </span>\n            ),\n        }];\n        const fields = [{\n            label: \"Mode of payment\",\n            key: \"mode\",\n            required: true,\n            type: INPUT_FIELD\n        }, {\n            label: \"Payment Type\",\n            key: \"payment_type\",\n            required: true,\n            type: SELECT_FIELD,\n            options: PAYMENT_TYPES\n        }, {\n            label: \"Vendor Fee\",\n            key: \"fee\",\n            required: true,\n            type: NUMBER_FIELD,\n            min: 0,\n            follow: '%'\n        },];\n        const editfields = [{\n            label: \"Mode of payment\",\n            key: \"mode\",\n            required: true,\n            initialValue: this.state.editingmode,\n            type: INPUT_FIELD\n        }, {\n            label: \"Payment Type\",\n            key: \"payment_type\",\n            required: true,\n            initialValue: this.state.editingType,\n            type: SELECT_FIELD,\n            options: PAYMENT_TYPES\n        }, {\n            label: \"Vendor Fee\",\n            key: \"fee\",\n            required: true,\n            initialValue: this.state.editingFee,\n            type: NUMBER_FIELD,\n            min: 0,\n            follow: '%'\n        },];\n        const formProp = {\n            successFn: function (data) {\n                that.handleCancel();\n                that.loadData();\n                console.log(data);\n                console.log(\"sucess\");\n                displayMessage(SUCCESS_MSG_TYPE, \"sucess\")\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(PAYMENT_MODES, [this.props.active_practiceId]),\n            method: \"post\",\n        }\n        const defaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n        const editFormDefaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}, {\n            \"key\": \"id\",\n            \"value\": this.state.editingId\n        }];\n\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        return <div>\n            <TestFormLayout defaultValues={defaultValues} formProp={formProp} fields={fields}/>\n            <Divider/>\n            <Table columns={columns} dataSource={this.state.modes}/>\n            <Modal\n                title=\"Edit Payment Mode\"\n                visible={this.state.visible}\n                footer={null}\n                onCancel={this.handleCancel}\n            >\n                <TestFormLayout defaultValues={editFormDefaultValues} formProp={formProp} fields={editfields}/>\n                <Button key=\"back\" onClick={this.handleCancel}>Return</Button>\n            </Modal>\n        </div>\n    }\n}\n\nexport default PaymentModes;\n"]},"metadata":{},"sourceType":"module"}