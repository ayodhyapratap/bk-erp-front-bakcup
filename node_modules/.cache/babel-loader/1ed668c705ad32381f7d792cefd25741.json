{"ast":null,"code":"import _toConsumableArray from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/calendar/Calendar.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport BigCalendar from 'react-big-calendar';\nimport { Card, Row, Timeline, Col, Popover, Button, List, Divider, Layout, Badge } from \"antd\";\nimport { DOCTORS_ROLE, SUCCESS_MSG_TYPE } from \"../../constants/dataKeys\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./app.css\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport CreateAppointment from \"./CreateAppointment\";\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid';\nimport dates from 'date-arithmetic';\nimport { getAPI, postAPI, putAPI, interpolate, displayMessage } from \"../../utils/common\";\nimport { APPOINTMENT_PERPRACTICE_API, APPOINTMENT_API, PRACTICESTAFF, CALENDER_SETTINGS } from \"../../constants/api\";\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar Content = Layout.Content;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.resizeEvent = function (_ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.state.events;\n      var changedEvent = {};\n\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var nextEvents = [];\n      events.forEach(function (existingEvent) {\n        if (existingEvent.id == event.id) {\n          changedEvent = {\n            \"id\": event.id,\n            \"shedule_at\": moment(start),\n            \"slot\": parseInt((end - start) / 60000)\n          };\n        }\n      });\n      console.log(changedEvent);\n\n      var successFn = function successFn(data) {\n        displayMessage(SUCCESS_MSG_TYPE, \"time changed\");\n        events.forEach(function (existingEvent) {\n          nextEvents.push(existingEvent.id == event.id ? _objectSpread({}, existingEvent, {\n            start: start,\n            end: end\n          }) : existingEvent);\n        });\n        that.setState({\n          events: nextEvents\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      putAPI(interpolate(APPOINTMENT_API, [event.id]), changedEvent, successFn, errorFn);\n    };\n\n    _this.onRangeChange = function (e) {\n      console.log(e);\n\n      if (e.start && e.end) {\n        _this.appointmentList(moment(e.start), moment(e.end));\n      } else if (e.length == 1) {\n        _this.appointmentList(moment(e[0]), moment(e[0]));\n      } else if (e.length == 7) {\n        _this.appointmentList(moment(e[0]), moment(e[6]));\n      }\n    };\n\n    _this.state = {\n      startTime: null,\n      visiblePopover: false,\n      events: [],\n      appointments: [],\n      practice_doctors: [],\n      practice_staff: [],\n      doctors_object: null,\n      calendarTimings: null\n    };\n    _this.onSelectSlot = _this.onSelectSlot.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelectEvent = _this.onSelectEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resizeEvent = _this.resizeEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDoctors = _this.loadDoctors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCalendarTimings = _this.loadCalendarTimings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.loadDoctors();\n\n    _this.appointmentList(moment(), moment());\n\n    _this.loadCalendarTimings();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadDoctors\",\n    value: function loadDoctors() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        data.staff.forEach(function (usersdata) {\n          if (usersdata.role == DOCTORS_ROLE) {\n            var doctor = that.state.practice_doctors;\n            doctor.push(usersdata);\n            that.setState({\n              practice_doctors: doctor\n            });\n          } else {\n            var _doctor = that.state.practice_staff;\n\n            _doctor.push(usersdata);\n\n            that.setState({\n              practice_staff: _doctor\n            });\n          }\n        });\n        var doctor_object = {};\n\n        if (that.state.practice_doctors) {\n          that.state.practice_doctors.forEach(function (drug) {\n            doctor_object[drug.id] = drug;\n          });\n        }\n\n        that.setState({\n          doctors_object: doctor_object\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadCalendarTimings\",\n    value: function loadCalendarTimings() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          calendarTimings: data[0]\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n    /***\n     * Calenders Functions\n     * */\n\n  }, {\n    key: \"moveEvent\",\n    value: function moveEvent(_ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end,\n          droppedOnAllDaySlot = _ref2.isAllDay;\n      var events = this.state.events;\n      var idx = events.indexOf(event);\n      var allDay = event.allDay;\n      var that = this;\n\n      if (!event.allDay && droppedOnAllDaySlot) {\n        allDay = true;\n      } else if (event.allDay && !droppedOnAllDaySlot) {\n        allDay = false;\n      }\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end,\n        allDay: allDay\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      var changedEvent = {\n        \"id\": event.id,\n        \"shedule_at\": moment(start),\n        \"slot\": parseInt((end - start) / 60000)\n      };\n\n      var successFn = function successFn(data) {\n        displayMessage(SUCCESS_MSG_TYPE, \"time changed\");\n        nextEvents.splice(idx, 1, updatedEvent);\n        that.setState({\n          events: nextEvents\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      putAPI(interpolate(APPOINTMENT_API, [event.id]), changedEvent, successFn, errorFn);\n    }\n  }, {\n    key: \"onSelectSlot\",\n    value: function onSelectSlot(value) {\n      console.log(value);\n      var time = moment(value.start).format();\n      console.log(time);\n\n      if (value.action == \"doubleClick\") {\n        this.setState({\n          startTime: time,\n          redirect: true\n        });\n        this.props.history.push('/calendar/create-appointment');\n      }\n    }\n  }, {\n    key: \"onSelectEvent\",\n    value: function onSelectEvent(event, e) {\n      console.log(\"wokring\");\n      console.log(e);\n      console.log(event);\n      this.setState({\n        visiblePopover: true\n      });\n      this.props.history.push(\"/patients/appointments/\" + event.id);\n    }\n    /***\n     * List and style settings\n     * */\n\n  }, {\n    key: \"appointmentList\",\n    value: function appointmentList(start, end) {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState(function (prevState) {\n          var previousEvent = prevState.events;\n          var newEvents = []; // newEvents.concat(previousEvent);\n\n          data.forEach(function (appointment) {\n            var endtime = new moment(appointment.shedule_at).add(appointment.slot, 'minutes');\n            console.log(moment(appointment.shedule_at).format('LLL'));\n            console.log(endtime.format('LLL')); // let event= that.state.events;\n\n            newEvents.push({\n              start: new Date(moment(appointment.shedule_at)),\n              end: new Date(endtime),\n              title: appointment.patient_name,\n              id: appointment.id,\n              doctor: appointment.doctor\n            });\n          });\n          return {\n            events: newEvents\n          };\n        });\n        that.setState({\n          appointments: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(APPOINTMENT_PERPRACTICE_API, [this.props.active_practiceId]), successFn, errorFn, {\n        start: start.format('YYYY-MM-DD'),\n        end: end.format('YYYY-MM-DD')\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event, start, end, isSelected) {\n      var doctor = event.doctor;\n      var doctor_object;\n\n      if (this.state.doctors_object != null) {\n        console.log(this.state.doctors_object[doctor]);\n        doctor_object = this.state.doctors_object[doctor].calender_colour;\n      }\n\n      var backgroundColor = doctor_object;\n      var style = {\n        backgroundColor: backgroundColor,\n        borderRadius: '0px',\n        opacity: 0.8,\n        border: '5px',\n        color: 'white',\n        display: 'block'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var startTime;\n      var endTime;\n\n      if (this.state.calendarTimings) {\n        console.log(new Date(new moment(this.state.calendarTimings.start_time, 'HH:mm:ss')));\n        startTime = new Date(new moment(this.state.calendarTimings.start_time, 'HH:mm:ss'));\n        endTime = new Date(new moment(this.state.calendarTimings.end_time, 'HH:mm:ss'));\n      }\n\n      var counter = 0;\n      this.state.events.forEach(function (event) {\n        var today = new Date();\n        console.log(today);\n\n        if (moment(event.start).format(\"YYYY-MM-DD\") == moment(today).format(\"YYYY-MM-DD\")) {\n          counter++;\n        }\n      });\n      return React.createElement(Content, {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/calendar/create-appointment\",\n        render: function render(route) {\n          return React.createElement(CreateAppointment, Object.assign({}, _this2.props, route, {\n            startTime: _this2.state.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/calendar/:appointmentid/edit-appointment\",\n        render: function render(route) {\n          return React.createElement(CreateAppointment, Object.assign({}, _this2.props, route, {\n            startTime: _this2.state.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Route, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff',\n          margin: '10px',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 16,\n        style: {\n          margin: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Doctors\"), React.createElement(List, {\n        dataSource: this.state.practice_doctors,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            style: {\n              textOverflow: \"ellipsis\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            style: {\n              width: '5px',\n              marginRight: '2px',\n              backgroundColor: item.calender_colour\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }), item.name);\n        },\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(DragAndDropCalendar, {\n        defaultDate: new Date(),\n        localizer: localizer,\n        defaultView: \"week\",\n        step: 10,\n        timeslots: 1,\n        events: this.state.events,\n        onEventDrop: this.moveEvent,\n        onEventResize: this.resizeEvent,\n        resizable: true,\n        selectable: true,\n        popup: this.onSelectEvent,\n        onSelectSlot: this.onSelectSlot,\n        onSelectEvent: this.onSelectEvent,\n        views: {\n          month: true,\n          week: MyWeek,\n          day: true,\n          agenda: true\n        },\n        style: {\n          height: \"calc(100vh - 85px)\"\n        },\n        eventPropGetter: this.eventStyleGetter,\n        min: startTime,\n        max: endTime,\n        onRangeChange: this.onRangeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/calendar/create-appointment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \" Walkin Appointment\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Appointments\"), React.createElement(Timeline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, this.state.appointments.length ? this.state.appointments.map(function (apppointment) {\n        return React.createElement(Timeline.Item, {\n          style: {\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(AppointmentCard, Object.assign({}, apppointment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        })));\n      }) : React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"No Data Found\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Today's Apointment \", React.createElement(Badge, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, counter))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n\nfunction AppointmentCard(appointment) {\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      width: 'calc(100% - 60px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, moment(appointment.shedule_at).format(\"HH:mm\"), \" \\xA0\", appointment.patient_name), React.createElement(\"span\", {\n    style: {\n      width: '60px',\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, \" Check In\"))));\n}\n\nvar MyWeek =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyWeek, _React$Component);\n\n  function MyWeek() {\n    _classCallCheck(this, MyWeek);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyWeek).apply(this, arguments));\n  }\n\n  _createClass(MyWeek, [{\n    key: \"render\",\n    value: function render() {\n      var date = this.props.date;\n      var range = MyWeek.range(date);\n      return React.createElement(TimeGrid, Object.assign({}, this.props, {\n        range: range,\n        eventOffset: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MyWeek;\n}(React.Component);\n\nMyWeek.range = function (date) {\n  var start = dates.add(date, -1, 'day');\n  var end = dates.add(start, 6, 'day');\n  var current = start;\n  var range = [];\n\n  while (dates.lte(current, end, 'day')) {\n    range.push(current);\n    current = dates.add(current, 1, 'day');\n  }\n\n  return range;\n};\n\nMyWeek.navigate = function (date, action) {\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      return dates.add(date, -3, 'day');\n\n    case BigCalendar.Navigate.NEXT:\n      return dates.add(date, 3, 'day');\n\n    default:\n      return date;\n  }\n};\n\nMyWeek.title = function (date) {\n  return \" \".concat(date.toLocaleDateString());\n};","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/calendar/Calendar.js"],"names":["React","Component","moment","withDragAndDrop","BigCalendar","Card","Row","Timeline","Col","Popover","Button","List","Divider","Layout","Badge","DOCTORS_ROLE","SUCCESS_MSG_TYPE","Route","Link","Switch","CreateAppointment","TimeGrid","dates","getAPI","postAPI","putAPI","interpolate","displayMessage","APPOINTMENT_PERPRACTICE_API","APPOINTMENT_API","PRACTICESTAFF","CALENDER_SETTINGS","localizer","momentLocalizer","DragAndDropCalendar","Content","App","props","resizeEvent","event","start","end","events","state","changedEvent","that","nextEvents","forEach","existingEvent","id","parseInt","console","log","successFn","data","push","setState","errorFn","onRangeChange","e","appointmentList","length","startTime","visiblePopover","appointments","practice_doctors","practice_staff","doctors_object","calendarTimings","onSelectSlot","bind","onSelectEvent","moveEvent","loadDoctors","eventStyleGetter","loadCalendarTimings","staff","usersdata","role","doctor","doctor_object","drug","active_practiceId","droppedOnAllDaySlot","isAllDay","idx","indexOf","allDay","updatedEvent","splice","value","time","format","action","redirect","history","prevState","previousEvent","newEvents","appointment","endtime","shedule_at","add","slot","Date","title","patient_name","isSelected","calender_colour","backgroundColor","style","borderRadius","opacity","border","color","display","endTime","start_time","end_time","counter","today","route","margin","padding","item","textOverflow","width","marginRight","name","month","week","MyWeek","day","agenda","height","map","apppointment","textAlign","AppointmentCard","float","date","range","current","lte","navigate","Navigate","PREVIOUS","NEXT","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport BigCalendar from 'react-big-calendar'\nimport {Card, Row, Timeline, Col, Popover, Button, List, Divider, Layout, Badge} from \"antd\"\nimport {DOCTORS_ROLE, SUCCESS_MSG_TYPE,} from \"../../constants/dataKeys\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./app.css\";\nimport {Route, Link, Switch} from \"react-router-dom\";\nimport CreateAppointment from \"./CreateAppointment\";\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\nimport dates from 'date-arithmetic'\nimport {getAPI, postAPI, putAPI, interpolate, displayMessage} from \"../../utils/common\";\nimport {APPOINTMENT_PERPRACTICE_API, APPOINTMENT_API, PRACTICESTAFF, CALENDER_SETTINGS} from \"../../constants/api\";\n\nconst localizer = BigCalendar.momentLocalizer(moment)\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\nconst {Content} = Layout;\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startTime: null,\n            visiblePopover: false,\n            events: [],\n            appointments: [],\n            practice_doctors: [],\n            practice_staff: [],\n            doctors_object: null,\n            calendarTimings: null\n        };\n        this.onSelectSlot = this.onSelectSlot.bind(this);\n        this.onSelectEvent = this.onSelectEvent.bind(this);\n        this.moveEvent = this.moveEvent.bind(this)\n        this.resizeEvent = this.resizeEvent.bind(this);\n        this.loadDoctors = this.loadDoctors.bind(this);\n        this.eventStyleGetter = this.eventStyleGetter.bind(this);\n        this.loadCalendarTimings = this.loadCalendarTimings.bind(this);\n        this.loadDoctors();\n        this.appointmentList(moment(), moment());\n        this.loadCalendarTimings()\n    }\n\n    loadDoctors() {\n        let that = this;\n        let successFn = function (data) {\n            data.staff.forEach(function (usersdata) {\n                if (usersdata.role == DOCTORS_ROLE) {\n                    let doctor = that.state.practice_doctors;\n                    doctor.push(usersdata);\n                    that.setState({\n                        practice_doctors: doctor,\n                    })\n                } else {\n                    let doctor = that.state.practice_staff;\n                    doctor.push(usersdata);\n                    that.setState({\n                        practice_staff: doctor,\n                    })\n                }\n            })\n            let doctor_object = {}\n            if (that.state.practice_doctors) {\n                that.state.practice_doctors.forEach(function (drug) {\n                    doctor_object[drug.id] = drug;\n                })\n            }\n            that.setState({\n                doctors_object: doctor_object,\n            })\n        }\n        let errorFn = function () {\n        };\n        getAPI(interpolate(PRACTICESTAFF, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    loadCalendarTimings() {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"get table\");\n            that.setState({\n                calendarTimings: data[0],\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(CALENDER_SETTINGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    /***\n     * Calenders Functions\n     * */\n\n\n    moveEvent({event, start, end, isAllDay: droppedOnAllDaySlot}) {\n        const {events} = this.state;\n        const idx = events.indexOf(event)\n        let allDay = event.allDay\n        let that = this;\n        if (!event.allDay && droppedOnAllDaySlot) {\n            allDay = true\n        } else if (event.allDay && !droppedOnAllDaySlot) {\n            allDay = false\n        }\n        const updatedEvent = {...event, start, end, allDay}\n        const nextEvents = [...events]\n        let changedEvent = {\n            \"id\": event.id,\n            \"shedule_at\": moment(start),\n            \"slot\": parseInt((end - start) / 60000)\n        };\n        let successFn = function (data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"time changed\");\n            nextEvents.splice(idx, 1, updatedEvent)\n            that.setState({\n                events: nextEvents,\n            })\n        }\n        let errorFn = function () {\n        }\n        putAPI(interpolate(APPOINTMENT_API, [event.id]), changedEvent, successFn, errorFn);\n    }\n\n    resizeEvent = ({event, start, end}) => {\n        const {events} = this.state\n        let changedEvent = {};\n        let that = this;\n        const nextEvents = [];\n        events.forEach((existingEvent) => {\n            if (existingEvent.id == event.id) {\n                changedEvent = {\n                    \"id\": event.id,\n                    \"shedule_at\": moment(start),\n                    \"slot\": parseInt((end - start) / 60000)\n                };\n            }\n        })\n\n        console.log(changedEvent);\n        let successFn = function (data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"time changed\");\n            events.forEach((existingEvent) => {\n                nextEvents.push(existingEvent.id == event.id\n                    ? {...existingEvent, start, end}\n                    : existingEvent)\n            });\n            that.setState({\n                events: nextEvents,\n            })\n        }\n        let errorFn = function () {\n        }\n        putAPI(interpolate(APPOINTMENT_API, [event.id]), changedEvent, successFn, errorFn);\n    }\n\n\n    onSelectSlot(value) {\n        console.log(value);\n        let time = moment(value.start).format();\n\n        console.log(time);\n        if (value.action == \"doubleClick\") {\n            this.setState({\n                startTime: time,\n                redirect: true\n            });\n            this.props.history.push('/calendar/create-appointment')\n        }\n    }\n\n\n    onSelectEvent(event, e) {\n        console.log(\"wokring\");\n        console.log(e);\n        console.log(event);\n        this.setState({\n            visiblePopover: true\n        })\n\n        this.props.history.push(\"/patients/appointments/\" + event.id)\n    }\n\n\n    /***\n     * List and style settings\n     * */\n\n    appointmentList(start, end) {\n        let that = this;\n        let successFn = function (data) {\n            that.setState(function (prevState) {\n                let previousEvent = prevState.events;\n                let newEvents = [];\n                // newEvents.concat(previousEvent);\n                data.forEach(function (appointment) {\n                    let endtime = new moment(appointment.shedule_at).add(appointment.slot, 'minutes')\n                    console.log(moment(appointment.shedule_at).format('LLL'));\n                    console.log(endtime.format('LLL'));\n                    // let event= that.state.events;\n                    newEvents.push({\n                        start: new Date(moment(appointment.shedule_at)),\n                        end: new Date(endtime),\n                        title: appointment.patient_name,\n                        id: appointment.id,\n                        doctor: appointment.doctor\n                    })\n                });\n                return {events: newEvents}\n            });\n            that.setState({\n                appointments: data,\n            })\n        }\n        let errorFn = function () {\n        }\n        getAPI(interpolate(APPOINTMENT_PERPRACTICE_API, [this.props.active_practiceId]), successFn, errorFn, {\n            start: start.format('YYYY-MM-DD'),\n            end: end.format('YYYY-MM-DD')\n        });\n    }\n\n    eventStyleGetter(event, start, end, isSelected) {\n        let doctor = event.doctor;\n        let doctor_object;\n        if (this.state.doctors_object != null) {\n            console.log(this.state.doctors_object[doctor]);\n            doctor_object = this.state.doctors_object[doctor].calender_colour;\n        }\n        var backgroundColor = doctor_object;\n        var style = {\n            backgroundColor: backgroundColor,\n            borderRadius: '0px',\n            opacity: 0.8,\n            border: '5px',\n            color: 'white',\n            display: 'block'\n        };\n        return {\n            style: style\n        };\n    }\n\n    onRangeChange = (e) => {\n        console.log(e)\n        if (e.start && e.end) {\n            this.appointmentList(moment(e.start), moment(e.end));\n        }else if(e.length == 1){\n            this.appointmentList(moment(e[0]), moment(e[0]));\n        }else if(e.length == 7){\n            this.appointmentList(moment(e[0]), moment(e[6]));\n        }\n    }\n\n    render() {\n        let startTime;\n        let endTime;\n        if (this.state.calendarTimings) {\n            console.log(new Date(new moment(this.state.calendarTimings.start_time, 'HH:mm:ss')));\n            startTime = new Date(new moment(this.state.calendarTimings.start_time, 'HH:mm:ss'));\n            endTime = new Date(new moment(this.state.calendarTimings.end_time, 'HH:mm:ss'))\n        }\n        let counter = 0;\n        this.state.events.forEach(function (event) {\n            let today = new Date();\n            console.log(today)\n            if (moment(event.start).format(\"YYYY-MM-DD\") == moment(today).format(\"YYYY-MM-DD\")) {\n                counter++;\n            }\n        });\n\n        return (<Content className=\"main-container\">\n                <Switch>\n                    <Route exact path=\"/calendar/create-appointment\"\n                           render={(route) => <CreateAppointment {...this.props} {...route}\n                                                                 startTime={this.state.startTime}/>}/>\n                    <Route exact path=\"/calendar/:appointmentid/edit-appointment\"\n                           render={(route) => <CreateAppointment {...this.props} {...route}\n                                                                 startTime={this.state.startTime}/>}/>\n                    <Route>\n                        <div style={{backgroundColor: '#fff', margin: '10px', padding: '5px'}}>\n                            <Row gutter={16} style={{margin: '5px'}}>\n                                <Col span={3}>\n                                    <Divider>Doctors</Divider>\n                                    <List dataSource={this.state.practice_doctors}\n                                          renderItem={item => (\n                                              <List.Item style={{textOverflow: \"ellipsis\"}}><span style={{width:'5px',marginRight:'2px',backgroundColor:item.calender_colour}}/>{item.name}</List.Item>)}\n                                          size={\"small\"}/>\n\n                                </Col>\n                                <Col span={16}>\n                                    <DragAndDropCalendar\n                                        defaultDate={new Date()}\n                                        localizer={localizer}\n                                        defaultView=\"week\"\n                                        step={10}\n                                        timeslots={1}\n                                        events={this.state.events}\n                                        onEventDrop={this.moveEvent}\n                                        onEventResize={this.resizeEvent}\n                                        resizable\n                                        selectable\n                                        popup={this.onSelectEvent}\n                                        onSelectSlot={this.onSelectSlot}\n                                        onSelectEvent={this.onSelectEvent}\n                                        views={{month: true, week: MyWeek, day: true, agenda: true}}\n                                        style={{height: \"calc(100vh - 85px)\"}}\n                                        eventPropGetter={(this.eventStyleGetter)}\n                                        min={startTime}\n                                        max={endTime}\n                                        onRangeChange={this.onRangeChange}/>\n                                </Col>\n                                <Col span={5}>\n                                    <Link to='/calendar/create-appointment'>\n                                        <Button block type=\"primary\"> Walkin Appointment</Button>\n                                    </Link>\n                                    <Divider>Appointments</Divider>\n                                    <Timeline>\n                                        {this.state.appointments.length ?\n                                            this.state.appointments.map((apppointment) =>\n                                                <Timeline.Item style={{padding: 0}}><AppointmentCard {...apppointment}/></Timeline.Item>) :\n                                            <p style={{textAlign: 'center'}}>No Data Found</p>}\n                                    </Timeline>\n                                    <h3>Today's Apointment <Badge>{counter}</Badge></h3>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Route>\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default App;\n\n\nfunction AppointmentCard(appointment) {\n    return <div style={{width: '100%'}}>\n        <p>\n            <span\n                style={{width: 'calc(100% - 60px)'}}>{moment(appointment.shedule_at).format(\"HH:mm\")} &nbsp;{appointment.patient_name}</span>\n            <span style={{width: '60px', float: 'right'}}><a> Check In</a></span>\n        </p>\n    </div>;\n}\n\n\nclass MyWeek extends React.Component {\n    render() {\n        let {date} = this.props\n        let range = MyWeek.range(date)\n\n        return <TimeGrid {...this.props} range={range} eventOffset={15}/>\n    }\n}\n\nMyWeek.range = date => {\n    let start = dates.add(date, -1, 'day')\n    let end = dates.add(start, 6, 'day')\n    let current = start\n    let range = []\n    while (dates.lte(current, end, 'day')) {\n        range.push(current)\n        current = dates.add(current, 1, 'day')\n    }\n    return range\n}\n\nMyWeek.navigate = (date, action) => {\n    switch (action) {\n        case BigCalendar.Navigate.PREVIOUS:\n            return dates.add(date, -3, 'day')\n\n        case BigCalendar.Navigate.NEXT:\n            return dates.add(date, 3, 'day')\n\n        default:\n            return date\n    }\n}\n\nMyWeek.title = date => {\n    return ` ${date.toLocaleDateString()}`\n}\n"]},"metadata":{},"sourceType":"module"}