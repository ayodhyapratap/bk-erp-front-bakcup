{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/reports/appointments/AppointmentsReport.js\";\nimport React from \"react\";\nimport { Button, Card, Col, Icon, Radio, Row, Table } from \"antd\";\nimport { APPOINTMENT_REPORTS } from \"../../../constants/api\";\nimport { getAPI, displayMessage, interpolate } from \"../../../utils/common\";\nimport moment from \"moment\";\n\nvar AppointmentsReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppointmentsReport, _React$Component);\n\n  function AppointmentsReport(props) {\n    var _this;\n\n    _classCallCheck(this, AppointmentsReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentsReport).call(this, props));\n    _this.state = {\n      appointmentReports: []\n    };\n    _this.loadAppointmentReport = _this.loadAppointmentReport.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.loadAppointmentReport();\n\n    return _this;\n  }\n\n  _createClass(AppointmentsReport, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (this.props.startDate != newProps.startDate || this.props.endDate != newProps.endDate) this.loadAppointmentReport();\n    }\n  }, {\n    key: \"loadAppointmentReport\",\n    value: function loadAppointmentReport() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(data);\n        that.setState({\n          appointmentReports: data.data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(APPOINTMENT_REPORTS, [this.props.active_practiceId, \"start=\" + this.props.startDate + \"&end=\" + this.props.endDate]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: 'Date',\n        key: 'date',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, moment(record.shedule_at).format('LL'));\n        }\n      }, {\n        title: 'Scheduled At\t',\n        key: 'time',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, moment(record.shedule_at).format('HH:mm'));\n        }\n      }, {\n        title: 'Check-in At',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: 'Waited For (hh:mm:ss)',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: 'Engaged At',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: 'Checkout At',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: 'Patient',\n        dataIndex: 'patient_name',\n        key: 'patient_name'\n      }, {\n        title: 'Doctor',\n        dataIndex: 'address',\n        key: 'address'\n      }, {\n        title: 'Category',\n        dataIndex: 'address',\n        key: 'address'\n      }];\n      var relatedReport = [{\n        name: 'Appointments For Each Category',\n        value: 'b'\n      }, {\n        name: 'Cancellation Numbers',\n        value: 'c'\n      }, {\n        name: 'Average Waiting/engaged Time Day Wise',\n        value: 'd'\n      }, {\n        name: 'Average Waiting/engaged Time Month Wise',\n        value: 'e'\n      }, {\n        name: 'Reasons For Cancellations',\n        value: 'f'\n      }, {\n        name: 'Daily Appointment Count',\n        value: 'g'\n      }, {\n        name: 'Appointments For Each Doctor',\n        value: 'h'\n      }, {\n        name: 'Monthly Appointment Count',\n        value: 'i'\n      }, {\n        name: 'Appointment For Each Patient Group',\n        value: 'j'\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Appointments Report\", React.createElement(Button.Group, {\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), \" Mail\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"printer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \" Print\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: columns,\n        size: 'small',\n        dataSource: this.state.appointmentReports,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        buttonStyle: \"solid\",\n        defaultValue: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Appointments\"), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"All Appointemnts\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Related Reports\"), relatedReport.map(function (item) {\n        return React.createElement(Radio.Button, {\n          style: {\n            width: '100%',\n            backgroundColor: 'transparent',\n            border: '0px'\n          },\n          value: item.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, item.name);\n      }))))));\n    }\n  }]);\n\n  return AppointmentsReport;\n}(React.Component);\n\nexport { AppointmentsReport as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/reports/appointments/AppointmentsReport.js"],"names":["React","Button","Card","Col","Icon","Radio","Row","Table","APPOINTMENT_REPORTS","getAPI","displayMessage","interpolate","moment","AppointmentsReport","props","state","appointmentReports","loadAppointmentReport","bind","newProps","startDate","endDate","that","successFn","data","console","log","setState","errorFn","active_practiceId","columns","title","key","render","text","record","shedule_at","format","dataIndex","relatedReport","name","value","float","width","backgroundColor","border","map","item","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Card, Col, Icon, Radio, Row, Table} from \"antd\";\nimport {APPOINTMENT_REPORTS} from \"../../../constants/api\";\nimport {getAPI, displayMessage, interpolate} from \"../../../utils/common\";\nimport moment from \"moment\"\n\nexport default class AppointmentsReport extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appointmentReports: [],\n        }\n        this.loadAppointmentReport = this.loadAppointmentReport.bind(this);\n        this.loadAppointmentReport();\n    }\n    componentWillReceiveProps(newProps){\n        if(this.props.startDate != newProps.startDate || this.props.endDate != newProps.endDate)\n            this.loadAppointmentReport();\n    }\n    loadAppointmentReport() {\n        let that = this;\n        let successFn = function (data) {\n            console.log(data);\n            that.setState({\n                appointmentReports: data.data,\n            });\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(APPOINTMENT_REPORTS, [this.props.active_practiceId, \"start=\" + this.props.startDate + \"&end=\" + this.props.endDate]), successFn, errorFn);\n    }\n\n\n    render() {\n        const columns = [{\n            title: 'Date',\n            key: 'date',\n            render: (text, record) => (\n                <span>\n                {moment(record.shedule_at).format('LL')}\n                  </span>\n            ),\n        }, {\n            title: 'Scheduled At\t',\n            key: 'time',\n            render: (text, record) => (\n                <span>\n                  {moment(record.shedule_at).format('HH:mm')}\n\n                  </span>\n            ),\n        }, {\n            title: 'Check-in At',\n            dataIndex: 'age',\n            key: 'age',\n        }, {\n            title: 'Waited For (hh:mm:ss)',\n            dataIndex: 'age',\n            key: 'age',\n        }, {\n            title: 'Engaged At',\n            dataIndex: 'age',\n            key: 'age',\n        }, {\n            title: 'Checkout At',\n            dataIndex: 'age',\n            key: 'age',\n        }, {\n            title: 'Patient',\n            dataIndex: 'patient_name',\n            key: 'patient_name',\n        }, {\n            title: 'Doctor',\n            dataIndex: 'address',\n            key: 'address',\n        }, {\n            title: 'Category',\n            dataIndex: 'address',\n            key: 'address',\n        }];\n\n\n        const relatedReport = [\n            {name: 'Appointments For Each Category', value: 'b'},\n            {name: 'Cancellation Numbers', value: 'c'},\n            {name: 'Average Waiting/engaged Time Day Wise', value: 'd'},\n            {name: 'Average Waiting/engaged Time Month Wise', value: 'e'},\n            {name: 'Reasons For Cancellations', value: 'f'},\n            {name: 'Daily Appointment Count', value: 'g'},\n            {name: 'Appointments For Each Doctor', value: 'h'},\n            {name: 'Monthly Appointment Count', value: 'i'},\n            {name: 'Appointment For Each Patient Group', value: 'j'},]\n        return <div>\n            <h2>Appointments Report\n                <Button.Group style={{float: 'right'}}>\n                    <Button><Icon type=\"mail\"/> Mail</Button>\n                    <Button><Icon type=\"printer\"/> Print</Button>\n                </Button.Group>\n            </h2>\n            <Card>\n                <Row gutter={16}>\n                    <Col span={16}>\n                        <Table columns={columns} size={'small'} dataSource={this.state.appointmentReports}/>\n                    </Col>\n                    <Col span={8}>\n                        <Radio.Group buttonStyle=\"solid\" defaultValue=\"all\">\n                            <h2>Appointments</h2>\n                            <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}}\n                                          value=\"all\">\n                                All Appointemnts\n                            </Radio.Button>\n                            <p><br/></p>\n                            <h2>Related Reports</h2>\n                            {relatedReport.map((item) => <Radio.Button\n                                style={{width: '100%', backgroundColor: 'transparent', border: '0px'}}\n                                value={item.value}>\n                                {item.name}\n                            </Radio.Button>)}\n                        </Radio.Group>\n                    </Col>\n                </Row>\n            </Card>\n        </div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}