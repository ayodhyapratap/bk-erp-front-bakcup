{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rcTreeSelect = require('rc-tree-select');\n\nvar _rcTreeSelect2 = _interopRequireDefault(_rcTreeSelect);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _LocaleReceiver = require('../locale-provider/LocaleReceiver');\n\nvar _LocaleReceiver2 = _interopRequireDefault(_LocaleReceiver);\n\nvar _warning = require('../_util/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _omit = require('omit.js');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar TreeSelect = function (_React$Component) {\n  (0, _inherits3['default'])(TreeSelect, _React$Component);\n\n  function TreeSelect(props) {\n    (0, _classCallCheck3['default'])(this, TreeSelect);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (TreeSelect.__proto__ || Object.getPrototypeOf(TreeSelect)).call(this, props));\n\n    _this.saveTreeSelect = function (node) {\n      _this.rcTreeSelect = node;\n    };\n\n    _this.renderSwitcherIcon = function (_ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading;\n      var prefixCls = _this.props.prefixCls;\n\n      if (loading) {\n        return React.createElement(_icon2['default'], {\n          type: 'loading',\n          className: prefixCls + '-switcher-loading-icon'\n        });\n      }\n\n      if (isLeaf) {\n        return null;\n      }\n\n      return React.createElement(_icon2['default'], {\n        type: 'caret-down',\n        className: prefixCls + '-switcher-icon'\n      });\n    };\n\n    _this.renderTreeSelect = function (locale) {\n      var _classNames;\n\n      var _a = _this.props,\n          prefixCls = _a.prefixCls,\n          className = _a.className,\n          size = _a.size,\n          notFoundContent = _a.notFoundContent,\n          dropdownStyle = _a.dropdownStyle,\n          dropdownClassName = _a.dropdownClassName,\n          suffixIcon = _a.suffixIcon,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"notFoundContent\", \"dropdownStyle\", \"dropdownClassName\", \"suffixIcon\"]);\n\n      var rest = (0, _omit2['default'])(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n      var cls = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-lg', size === 'large'), (0, _defineProperty3['default'])(_classNames, prefixCls + '-sm', size === 'small'), _classNames), className);\n      var checkable = rest.treeCheckable;\n\n      if (checkable) {\n        checkable = React.createElement('span', {\n          className: prefixCls + '-tree-checkbox-inner'\n        });\n      }\n\n      var inputIcon = suffixIcon && (React.isValidElement(suffixIcon) ? React.cloneElement(suffixIcon) : suffixIcon) || React.createElement(_icon2['default'], {\n        type: 'down',\n        className: prefixCls + '-arrow-icon'\n      });\n      var removeIcon = React.createElement(_icon2['default'], {\n        type: 'close',\n        className: prefixCls + '-remove-icon'\n      });\n      var clearIcon = React.createElement(_icon2['default'], {\n        type: 'close-circle',\n        className: prefixCls + '-clear-icon',\n        theme: 'filled'\n      });\n      return React.createElement(_rcTreeSelect2['default'], (0, _extends3['default'])({\n        switcherIcon: _this.renderSwitcherIcon,\n        inputIcon: inputIcon,\n        removeIcon: removeIcon,\n        clearIcon: clearIcon\n      }, rest, {\n        dropdownClassName: (0, _classnames2['default'])(dropdownClassName, prefixCls + '-tree-dropdown'),\n        prefixCls: prefixCls,\n        className: cls,\n        dropdownStyle: (0, _extends3['default'])({\n          maxHeight: '100vh',\n          overflow: 'auto'\n        }, dropdownStyle),\n        treeCheckable: checkable,\n        notFoundContent: notFoundContent || locale.notFoundContent,\n        ref: _this.saveTreeSelect\n      }));\n    };\n\n    (0, _warning2['default'])(props.multiple !== false || !props.treeCheckable, '`multiple` will alway be `true` when `treeCheckable` is true');\n    return _this;\n  }\n\n  (0, _createClass3['default'])(TreeSelect, [{\n    key: 'focus',\n    value: function focus() {\n      this.rcTreeSelect.focus();\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.rcTreeSelect.blur();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(_LocaleReceiver2['default'], {\n        componentName: 'Select',\n        defaultLocale: {}\n      }, this.renderTreeSelect);\n    }\n  }]);\n  return TreeSelect;\n}(React.Component);\n\nexports['default'] = TreeSelect;\nTreeSelect.TreeNode = _rcTreeSelect.TreeNode;\nTreeSelect.SHOW_ALL = _rcTreeSelect.SHOW_ALL;\nTreeSelect.SHOW_PARENT = _rcTreeSelect.SHOW_PARENT;\nTreeSelect.SHOW_CHILD = _rcTreeSelect.SHOW_CHILD;\nTreeSelect.defaultProps = {\n  prefixCls: 'ant-select',\n  transitionName: 'slide-up',\n  choiceTransitionName: 'zoom',\n  showSearch: false\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}