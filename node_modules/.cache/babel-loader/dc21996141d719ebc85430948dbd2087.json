{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/procedure-catalog/RecentProcedure.js\";\nimport React from \"react\";\nimport { Button, Card, Icon, Tabs, Divider, Tag, Row, Table, Popconfirm } from \"antd\";\nimport { PROCEDURE_CATEGORY } from \"../../../../constants/api\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport { getAPI, interpolate, postAPI } from \"../../../../utils/common\";\nimport EditProcedure from \"./EditProcedure\";\nimport PermissionDenied from \"../../../common/errors/PermissionDenied\";\nvar Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup;\nvar TabPane = Tabs.TabPane;\n\nvar RecentProcedure =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RecentProcedure, _React$Component);\n\n  function RecentProcedure(props) {\n    var _this;\n\n    _classCallCheck(this, RecentProcedure);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecentProcedure).call(this, props));\n\n    _this.handleClick = function (e) {\n      _this.setState({\n        current: e.key\n      });\n    };\n\n    _this.state = {\n      current: 'staff',\n      procedure_category: null,\n      editingProcedureData: null\n    };\n    _this.loadProcedures = _this.loadProcedures.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RecentProcedure, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadProcedures();\n    }\n  }, {\n    key: \"loadProcedures\",\n    value: function loadProcedures() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          procedure_category: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = record;\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadProcedures();\n      };\n\n      var errorFn = function errorFn() {};\n\n      postAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"editProcedure\",\n    value: function editProcedure(record) {\n      this.setState({\n        editingProcedureData: record\n      });\n      var url = '/settings/procedures/' + record.id + '/editprocedure';\n      this.props.history.push(url);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/settings/procedures/:id/editprocedure\",\n        render: function render(route) {\n          return _this2.props.permissions.add_procedurecatalog || _this2.props.allowAllPermissions ? React.createElement(EditProcedure, Object.assign({}, _this2.props, _this2.state, route, {\n            loadProcedures: _this2.loadProcedures,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          })) : React.createElement(PermissionDenied, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Procedures\", React.createElement(Link, {\n        to: \"/settings/procedures/addprocedure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"\\xA0Add Procedure\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"procedurecatalog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"android\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), \"Procedure Catalog\"),\n        key: \"procedurecatalog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Table, {\n        dataSource: this.state.procedure_category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Column, {\n        title: \"Procedure Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Procedure Unit Cost\",\n        dataIndex: \"cost\",\n        key: \"cost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"MLM Margin\",\n        dataIndex: \"margin\",\n        key: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Applicable Taxes\",\n        dataIndex: \"taxes\",\n        key: \"taxes\",\n        render: function render(taxes) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, taxes.map(function (tag) {\n            return React.createElement(Tag, {\n              color: \"blue\",\n              key: tag,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, tag);\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Standard Notes\\t\",\n        dataIndex: \"default_notes\",\n        key: \"default_notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Column, {\n        title: \"Action\\t\",\n        key: \"action\",\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editProcedure(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }), React.createElement(Popconfirm, {\n            title: \"Are you sure delete this?\",\n            onConfirm: function onConfirm() {\n              return that.deleteObject(record);\n            },\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Delete\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return RecentProcedure;\n}(React.Component);\n\nexport default RecentProcedure;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/settings/options/procedure-catalog/RecentProcedure.js"],"names":["React","Button","Card","Icon","Tabs","Divider","Tag","Row","Table","Popconfirm","PROCEDURE_CATEGORY","Route","Link","Switch","getAPI","interpolate","postAPI","EditProcedure","PermissionDenied","Column","ColumnGroup","TabPane","RecentProcedure","props","handleClick","e","setState","current","key","state","procedure_category","editingProcedureData","loadProcedures","bind","that","successFn","data","errorFn","active_practiceId","record","reqData","is_active","url","id","history","push","route","permissions","add_procedurecatalog","allowAllPermissions","float","taxes","map","tag","text","editProcedure","deleteObject","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,GAA3C,EAAgDC,GAAhD,EAAqDC,KAArD,EAA4DC,UAA5D,QAA6E,MAA7E;AACA,SAAQC,kBAAR,QAAiC,2BAAjC;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,kBAAlC;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,OAA7B,QAA2C,0BAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;IAGOC,M,GAAuBX,K,CAAvBW,M;IAAQC,W,GAAeZ,K,CAAfY,W;AACf,IAAMC,OAAO,GAAGjB,IAAI,CAACiB,OAArB;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UA4BnBC,WA5BmB,GA4BL,UAACC,CAAD,EAAO;AACjB,YAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEF,CAAC,CAACG;AADD,OAAd;AAGH,KAhCkB;;AAEf,UAAKC,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE,OADA;AAETG,MAAAA,kBAAkB,EAAE,IAFX;AAGTC,MAAAA,oBAAoB,EAAE;AAHb,KAAb;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAPe;AAQlB;;;;wCAEmB;AAChB,WAAKD,cAAL;AACH;;;qCAEgB;AACb,UAAIE,IAAI,GAAG,IAAX;;AACA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BF,QAAAA,IAAI,CAACR,QAAL,CAAc;AACVI,UAAAA,kBAAkB,EAAEM;AADV,SAAd;AAGH,OAJD;;AAKA,UAAIC,OAAO,GAAG,SAAVA,OAAU,GAAY,CACzB,CADD;;AAGAvB,MAAAA,MAAM,CAACC,WAAW,CAACL,kBAAD,EAAqB,CAAC,KAAKa,KAAL,CAAWe,iBAAZ,CAArB,CAAZ,EAAkEH,SAAlE,EAA6EE,OAA7E,CAAN;AACH;;;iCASYE,M,EAAQ;AACjB,UAAIL,IAAI,GAAG,IAAX;AACA,UAAIM,OAAO,GAAGD,MAAd;AACAC,MAAAA,OAAO,CAACC,SAAR,GAAoB,KAApB;;AACA,UAAIN,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BF,QAAAA,IAAI,CAACF,cAAL;AACH,OAFD;;AAGA,UAAIK,OAAO,GAAG,SAAVA,OAAU,GAAY,CACzB,CADD;;AAEArB,MAAAA,OAAO,CAACD,WAAW,CAACL,kBAAD,EAAqB,CAAC,KAAKa,KAAL,CAAWe,iBAAZ,CAArB,CAAZ,EAAkEE,OAAlE,EAA2EL,SAA3E,EAAsFE,OAAtF,CAAP;AACH;;;kCAEaE,M,EAAQ;AAClB,WAAKb,QAAL,CAAc;AACVK,QAAAA,oBAAoB,EAAEQ;AADZ,OAAd;AAGA,UAAIG,GAAG,GAAG,0BAA0BH,MAAM,CAACI,EAAjC,GAAsC,gBAAhD;AACA,WAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwBH,GAAxB;AAEH;;;6BAGQ;AAAA;;AACL,UAAIR,IAAI,GAAG,IAAX;AACA,aAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,wCAAlB;AACO,QAAA,MAAM,EAAE,gBAACY,KAAD;AAAA,iBAAY,MAAI,CAACvB,KAAL,CAAWwB,WAAX,CAAuBC,oBAAvB,IAA+C,MAAI,CAACzB,KAAL,CAAW0B,mBAA1D,GACZ,oBAAC,aAAD,oBAAoB,MAAI,CAAC1B,KAAzB,EAAoC,MAAI,CAACM,KAAzC,EAAmDiB,KAAnD;AACgB,YAAA,cAAc,EAAE,MAAI,CAACd,cADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADY,GAE6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzD;AAAA,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAMH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,mCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAACkB,UAAAA,KAAK,EAAE;AAAR,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,sBADJ,CADJ,CADJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN,sBAAd;AAAoE,QAAA,GAAG,EAAC,kBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,gBADV;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,GAAG,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,qBADV;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,GAAG,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAWI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,YADV;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,GAAG,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAgBI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,SAAS,EAAC,OAFd;AAGI,QAAA,GAAG,EAAC,OAHR;AAII,QAAA,MAAM,EAAE,gBAAAqB,KAAK;AAAA,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCA,KAAK,CAACC,GAAN,CAAU,UAAAC,GAAG;AAAA,mBAAI,oBAAC,GAAD;AAAK,cAAA,KAAK,EAAC,MAAX;AAAkB,cAAA,GAAG,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6BA,GAA7B,CAAJ;AAAA,WAAb,CADD,CADS;AAAA,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EA0BI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,SAAS,EAAC,eAFd;AAGI,QAAA,GAAG,EAAC,eAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,EA+BI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,GAAG,EAAC,QAFR;AAGI,QAAA,MAAM,EAAE,gBAACC,IAAD,EAAOf,MAAP;AAAA,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACgB,aAAL,CAAmBhB,MAAnB,CAAN;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEA,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGA,oBAAC,UAAD;AAAY,YAAA,KAAK,EAAC,2BAAlB;AACY,YAAA,SAAS,EAAE;AAAA,qBAAML,IAAI,CAACsB,YAAL,CAAkBjB,MAAlB,CAAN;AAAA,aADvB;AACwD,YAAA,MAAM,EAAC,KAD/D;AAEY,YAAA,UAAU,EAAC,IAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CAHA,CADI;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BJ,CADJ,CADJ,CADJ,CARJ,CANG,CAAP;AAwEH;;;;EAnIyBvC,KAAK,CAACyD,S;;AAsIpC,eAAenC,eAAf","sourcesContent":["import React from \"react\";\nimport {Button, Card, Icon, Tabs, Divider, Tag, Row, Table, Popconfirm} from \"antd\";\nimport {PROCEDURE_CATEGORY} from \"../../../../constants/api\"\nimport {Route, Link, Switch} from \"react-router-dom\";\nimport {getAPI, interpolate, postAPI} from \"../../../../utils/common\";\nimport EditProcedure from \"./EditProcedure\";\nimport PermissionDenied from \"../../../common/errors/PermissionDenied\";\n\n\nconst {Column, ColumnGroup} = Table;\nconst TabPane = Tabs.TabPane;\n\nclass RecentProcedure extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 'staff',\n            procedure_category: null,\n            editingProcedureData: null\n        };\n        this.loadProcedures = this.loadProcedures.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadProcedures();\n    }\n\n    loadProcedures() {\n        var that = this;\n        let successFn = function (data) {\n            that.setState({\n                procedure_category: data,\n            })\n        };\n        let errorFn = function () {\n        };\n\n        getAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n\n    handleClick = (e) => {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = record;\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadProcedures();\n        }\n        let errorFn = function () {\n        };\n        postAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), reqData, successFn, errorFn)\n    }\n\n    editProcedure(record) {\n        this.setState({\n            editingProcedureData: record,\n        });\n        let url = '/settings/procedures/' + record.id + '/editprocedure';\n        this.props.history.push(url);\n\n    }\n\n\n    render() {\n        let that = this;\n        return <Switch>\n            <Route exact path=\"/settings/procedures/:id/editprocedure\"\n                   render={(route) => (this.props.permissions.add_procedurecatalog || this.props.allowAllPermissions ?\n                           <EditProcedure  {...this.props} {...this.state}{...route}\n                                           loadProcedures={this.loadProcedures}/> : <PermissionDenied/>\n                   )}/>\n            <Row>\n                <h2>Procedures\n                    <Link to=\"/settings/procedures/addprocedure\">\n                        <Button type=\"primary\" style={{float: 'right'}}>\n                            <Icon type=\"plus\"/>&nbsp;Add Procedure\n                        </Button>\n                    </Link>\n                </h2>\n                <Card>\n                    <Tabs defaultActiveKey=\"procedurecatalog\">\n                        <TabPane tab={<span><Icon type=\"android\"/>Procedure Catalog</span>} key=\"procedurecatalog\">\n                            <Table dataSource={this.state.procedure_category}>\n                                <Column\n                                    title=\"Procedure Name\"\n                                    dataIndex=\"name\"\n                                    key=\"name\"\n                                />\n                                <Column\n                                    title=\"Procedure Unit Cost\"\n                                    dataIndex=\"cost\"\n                                    key=\"cost\"\n                                />\n                                <Column\n                                    title=\"MLM Margin\"\n                                    dataIndex=\"margin\"\n                                    key=\"margin\"\n                                />\n                                <Column\n                                    title=\"Applicable Taxes\"\n                                    dataIndex=\"taxes\"\n                                    key=\"taxes\"\n                                    render={taxes => (\n                                        <span>\n                                        {taxes.map(tag => <Tag color=\"blue\" key={tag}>{tag}</Tag>)}\n                                    </span>\n                                    )}\n                                />\n                                <Column\n                                    title=\"Standard Notes\t\"\n                                    dataIndex=\"default_notes\"\n                                    key=\"default_notes\"\n                                />\n                                <Column\n                                    title=\"Action\t\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <span>\n                                            <a onClick={() => this.editProcedure(record)}>Edit</a>\n                                        <Divider type=\"vertical\"/>\n                                        <Popconfirm title=\"Are you sure delete this?\"\n                                                    onConfirm={() => that.deleteObject(record)} okText=\"Yes\"\n                                                    cancelText=\"No\">\n                                            <a>Delete</a>\n                                        </Popconfirm>\n                                    </span>\n                                    )}\n                                />\n\n                            </Table>\n                        </TabPane>\n\n                    </Tabs>\n\n                </Card>\n            </Row>\n        </Switch>\n    }\n}\n\nexport default RecentProcedure;\n"]},"metadata":{},"sourceType":"module"}