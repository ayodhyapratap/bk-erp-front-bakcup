{"ast":null,"code":"import _defineProperty from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/auth/forms/LoginForm.js\";\nimport { Form, Icon, Input, Button, Modal } from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { EMAIL, PASSWORD } from \"../../../constants/formLabels\";\nimport { Redirect } from 'react-router';\nimport { displayMessage, makeURL, postOuterAPI } from \"../../../utils/common\";\nimport { RESET_PASSWORD_MAIL } from \"../../../constants/api\";\nvar FormItem = Form.Item;\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.handleOk = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      console.log(e);\n\n      var successFn = function successFn(data) {\n        displayMessage('success', \"Link to update your password have been sent to your mail.\");\n        that.setState({\n          resetModalVisible: false\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      postOuterAPI(makeURL(RESET_PASSWORD_MAIL), {\n        email: _this.state.userMail\n      }, successFn, errorFn);\n    };\n\n    _this.handleCancel = function (e) {\n      console.log(e);\n\n      _this.setState({\n        resetModalVisible: false\n      });\n    };\n\n    _this.state = {\n      isLoading: false,\n      username: null,\n      userMail: '',\n      redirect: null,\n      resetModalVisible: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showResetModal = _this.showResetModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeUserMail = _this.changeUserMail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"showResetModal\",\n    value: function showResetModal() {\n      this.setState({\n        resetModalVisible: true\n      });\n    }\n  }, {\n    key: \"changeUserMail\",\n    value: function changeUserMail(e) {\n      this.setState({\n        userMail: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var that = this;\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var _data;\n\n          var data = (_data = {}, _defineProperty(_data, EMAIL, values.email), _defineProperty(_data, PASSWORD, values.password), _data);\n          that.props.login(data);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      if (this.state.redirect) return React.createElement(Redirect, {\n        to: this.state.redirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }),\n        placeholder: \"Username or Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: {\n          float: 'right'\n        },\n        type: \"primary\",\n        onClick: this.showResetModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Forgot Password ?\"), React.createElement(Button, {\n        size: \"large\",\n        loading: this.state.changePassLoading,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Log in\")), React.createElement(Modal, {\n        title: \"Email to Reset Password\",\n        visible: this.state.resetModalVisible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        okText: \"Reset Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter your Email\",\n        prefix: React.createElement(Icon, {\n          type: \"message\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        onChange: this.changeUserMail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), this.props.redirect == true && React.createElement(Redirect, {\n        push: true,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nexport default LoginForm;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/auth/forms/LoginForm.js"],"names":["Form","Icon","Input","Button","Modal","React","EMAIL","PASSWORD","Redirect","displayMessage","makeURL","postOuterAPI","RESET_PASSWORD_MAIL","FormItem","Item","LoginForm","props","handleOk","e","that","console","log","successFn","data","setState","resetModalVisible","errorFn","email","state","userMail","handleCancel","isLoading","username","redirect","handleSubmit","bind","showResetModal","changeUserMail","target","value","preventDefault","form","validateFields","err","values","password","login","getFieldDecorator","rules","required","message","color","float","changePassLoading","Component","hasErrors","fieldsError","Object","keys","some","field"],"mappings":";;;;;;;;AAAA,SAAQA,IAAR,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,+BAA9B;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,cAAR,EAAwBC,OAAxB,EAAiCC,YAAjC,QAAoD,uBAApD;AACA,SAAQC,mBAAR,QAAkC,wBAAlC;AAEA,IAAMC,QAAQ,GAAGb,IAAI,CAACc,IAAtB;;IAGMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAoBnBC,QApBmB,GAoBR,UAACC,CAAD,EAAO;AACd,UAAIC,IAAI,wDAAR;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;;AACA,UAAII,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5Bd,QAAAA,cAAc,CAAC,SAAD,EAAY,2DAAZ,CAAd;AACAU,QAAAA,IAAI,CAACK,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAE;AADT,SAAd;AAGH,OALD;;AAMA,UAAIC,OAAO,GAAG,SAAVA,OAAU,GAAY,CAEzB,CAFD;;AAGAf,MAAAA,YAAY,CAACD,OAAO,CAACE,mBAAD,CAAR,EAA+B;AAACe,QAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWC;AAAnB,OAA/B,EAA6DP,SAA7D,EAAwEI,OAAxE,CAAZ;AACH,KAjCkB;;AAAA,UAmCnBI,YAnCmB,GAmCJ,UAACZ,CAAD,EAAO;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;;AACA,YAAKM,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAE;AADT,OAAd;AAGH,KAxCkB;;AAEf,UAAKG,KAAL,GAAa;AACTG,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTH,MAAAA,QAAQ,EAAE,EAHD;AAITI,MAAAA,QAAQ,EAAE,IAJD;AAKTR,MAAAA,iBAAiB,EAAE;AALV,KAAb;AAOA,UAAKS,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,uDAAtB;AAXe;AAYlB;;;;qCAEgB;AACb,WAAKX,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAE;AADT,OAAd;AAGH;;;mCAwBcP,C,EAAG;AACd,WAAKM,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAEX,CAAC,CAACoB,MAAF,CAASC;AADT,OAAd;AAGH;;;iCAEYrB,C,EAAG;AACZA,MAAAA,CAAC,CAACsB,cAAF;AACA,UAAIrB,IAAI,GAAG,IAAX;AACA,WAAKH,KAAL,CAAWyB,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AAAA;;AACN,cAAIpB,IAAI,uCACHjB,KADG,EACKsC,MAAM,CAACjB,KADZ,0BAEHpB,QAFG,EAEQqC,MAAM,CAACC,QAFf,SAAR;AAIA1B,UAAAA,IAAI,CAACH,KAAL,CAAW8B,KAAX,CAAiBvB,IAAjB;AACH;AACJ,OARD;AASH;;;6BAGQ;AAAA,UACEwB,iBADF,GACuB,KAAK/B,KAAL,CAAWyB,IADlC,CACEM,iBADF;AAEL,UAAI,KAAKnB,KAAL,CAAWK,QAAf,EACI,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKL,KAAL,CAAWK,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,QAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKa,iBAAiB,CAAC,OAAD,EAAU;AACxBC,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADiB,OAAV,CAAjB,CAGG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5B;AACO,QAAA,WAAW,EAAC,mBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADL,CADJ,EASI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,iBAAiB,CAAC,UAAD,EAAa;AAC3BC,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADoB,OAAb,CAAjB,CAGG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5B;AACO,QAAA,IAAI,EAAC,UADZ;AAEO,QAAA,WAAW,EAAC,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADL,CATJ,EAmBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAV;AAA4B,QAAA,IAAI,EAAC,SAAjC;AAA2C,QAAA,OAAO,EAAE,KAAKhB,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWyB,iBAAzC;AAA4D,QAAA,IAAI,EAAC,SAAjE;AAA2E,QAAA,QAAQ,EAAC,QAApF;AACQ,QAAA,SAAS,EAAC,mBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAnBJ,EA4BI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAC,yBADV;AAEI,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWH,iBAFxB;AAGI,QAAA,IAAI,EAAE,KAAKR,QAHf;AAII,QAAA,QAAQ,EAAE,KAAKa,YAJnB;AAKI,QAAA,MAAM,EAAC,gBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD;AACI,QAAA,WAAW,EAAC,kBADhB;AAEI,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,KAAK,EAAE;AAACqB,YAAAA,KAAK,EAAE;AAAR,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFZ;AAGI,QAAA,QAAQ,EAAE,KAAKd,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CA5BJ,EAyCK,KAAKrB,KAAL,CAAWiB,QAAX,IAAuB,IAAvB,IAA+B,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCpC,CADJ;AA6CH;;;;EAjHmB5B,KAAK,CAACiD,S;;AAoH9B,eAAevC,SAAf;;AAEA,SAASwC,SAAT,CAAmBC,WAAnB,EAAgC;AAC5B,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8B,UAAAC,KAAK;AAAA,WAAIJ,WAAW,CAACI,KAAD,CAAf;AAAA,GAAnC,CAAP;AACH","sourcesContent":["import {Form, Icon, Input, Button, Modal,} from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport {EMAIL, PASSWORD} from \"../../../constants/formLabels\";\nimport {Redirect} from 'react-router';\nimport {displayMessage, makeURL, postOuterAPI} from \"../../../utils/common\";\nimport {RESET_PASSWORD_MAIL} from \"../../../constants/api\";\n\nconst FormItem = Form.Item;\n\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            username: null,\n            userMail: '',\n            redirect: null,\n            resetModalVisible: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showResetModal = this.showResetModal.bind(this);\n        this.changeUserMail = this.changeUserMail.bind(this);\n    }\n\n    showResetModal() {\n        this.setState({\n            resetModalVisible: true\n        });\n    }\n\n    handleOk = (e) => {\n        var that = this;\n        console.log(e);\n        var successFn = function (data) {\n            displayMessage('success', \"Link to update your password have been sent to your mail.\")\n            that.setState({\n                resetModalVisible: false,\n            });\n        }\n        var errorFn = function () {\n\n        }\n        postOuterAPI(makeURL(RESET_PASSWORD_MAIL), {email: this.state.userMail}, successFn, errorFn);\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            resetModalVisible: false,\n        });\n    }\n\n    changeUserMail(e) {\n        this.setState({\n            userMail: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let that = this;\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = {\n                    [EMAIL]: values.email,\n                    [PASSWORD]: values.password\n                };\n                that.props.login(data)\n            }\n        });\n    }\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        if (this.state.redirect)\n            return <Redirect to={this.state.redirect}/>\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('email', {\n                        rules: [{required: true, message: 'Please input your username!'}],\n                    })(\n                        <Input size=\"large\" prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                               placeholder=\"Username or Email\"/>\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{required: true, message: 'Please input your Password!'}],\n                    })(\n                        <Input size=\"large\" prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                               type=\"password\"\n                               placeholder=\"Password\"/>\n                    )}\n                </FormItem>\n\n                <FormItem>\n                    <a style={{float: 'right'}} type=\"primary\" onClick={this.showResetModal}>\n                        Forgot Password ?\n                    </a>\n                    <Button size=\"large\" loading={this.state.changePassLoading} type=\"primary\" htmlType=\"submit\"\n                            className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </FormItem>\n                <Modal\n                    title=\"Email to Reset Password\"\n                    visible={this.state.resetModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    okText=\"Reset Password\"\n                >\n                    <Input\n                        placeholder=\"Enter your Email\"\n                        prefix={<Icon type=\"message\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                        onChange={this.changeUserMail}\n                    />\n                </Modal>\n                {this.props.redirect == true && <Redirect push to=\"/\"/>}\n            </Form>\n        );\n    }\n}\n\nexport default LoginForm;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n"]},"metadata":{},"sourceType":"module"}