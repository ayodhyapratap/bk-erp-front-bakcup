{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/sliderImages/SliderImageList.js\";\nimport { Avatar, Button, Card, Icon, List, Popconfirm } from \"antd\";\nimport React from \"react\";\nimport { getAPI, interpolate, patchAPI } from \"../../../utils/common\";\nimport { BLOG_PAGE_SEO, BLOG_POST, BLOG_SLIDER, SINGLE_LANDING_PAGE_VIDEO, SINGLE_SLIDER } from \"../../../constants/api\";\nimport { Route, Switch } from \"react-router\";\nimport AddSliderImage from \"./AddSliderImage\";\nimport { Link } from \"react-router-dom\";\n\nvar SliderImageList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SliderImageList, _React$Component);\n\n  function SliderImageList(props) {\n    var _this;\n\n    _classCallCheck(this, SliderImageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SliderImageList).call(this, props));\n    _this.state = {\n      slider: []\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteObject = _this.deleteObject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SliderImageList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(data);\n        that.setState({\n          slider: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(BLOG_SLIDER, successFn, errorFn);\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject(record) {\n      var that = this;\n      var reqData = {};\n      reqData.is_active = false;\n\n      var successFn = function successFn(data) {\n        that.loadData();\n      };\n\n      var errorFn = function errorFn() {};\n\n      patchAPI(interpolate(SINGLE_SLIDER, [record.id]), reqData, successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/web/slider-image/add\",\n        render: function render(route) {\n          return React.createElement(AddSliderImage, Object.assign({}, _this2.state, route, {\n            loadData: _this2.loadData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/web/slider-image/edit/:id\",\n        render: function render(route) {\n          return React.createElement(AddSliderImage, Object.assign({}, _this2.state, route, {\n            loadData: _this2.loadData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"Slider Image\",\n        extra: React.createElement(Link, {\n          to: \"/web/slider-image/add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), \" Add\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(List, {\n        itemLayout: \"vertical\",\n        dataSource: this.state.slider,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            key: item.id,\n            extra: React.createElement(\"img\", {\n              src: item.silder_image,\n              alt: \"\",\n              style: {\n                maxWidth: '100%',\n                width: '400px'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }),\n            actions: [React.createElement(Link, {\n              to: '/web/slider-image/edit/' + item.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(Popconfirm, {\n              title: \"Are you sure delete this item?\",\n              onConfirm: function onConfirm() {\n                return that.deleteObject(item);\n              },\n              okText: \"Yes\",\n              cancelText: \"No\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, \"Delete\"))],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            avatar: React.createElement(Avatar, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, item.rank),\n            title: item.title,\n            description: item.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SliderImageList;\n}(React.Component);\n\nexport { SliderImageList as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/sliderImages/SliderImageList.js"],"names":["Avatar","Button","Card","Icon","List","Popconfirm","React","getAPI","interpolate","patchAPI","BLOG_PAGE_SEO","BLOG_POST","BLOG_SLIDER","SINGLE_LANDING_PAGE_VIDEO","SINGLE_SLIDER","Route","Switch","AddSliderImage","Link","SliderImageList","props","state","slider","loadData","bind","deleteObject","that","successFn","data","console","log","setState","errorFn","record","reqData","is_active","id","route","item","silder_image","maxWidth","width","rank","title","name","Component"],"mappings":"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","sourcesContent":["import {Avatar, Button, Card, Icon, List, Popconfirm} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate, patchAPI} from \"../../../utils/common\";\nimport {BLOG_PAGE_SEO, BLOG_POST, BLOG_SLIDER, SINGLE_LANDING_PAGE_VIDEO, SINGLE_SLIDER} from \"../../../constants/api\";\nimport {Route, Switch} from \"react-router\";\nimport AddSliderImage from \"./AddSliderImage\";\nimport {Link} from \"react-router-dom\";\n\nexport default class SliderImageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slider: []\n        };\n        this.loadData = this.loadData.bind(this);\n        this.deleteObject = this.deleteObject.bind(this)\n    }\n\n    componentWillMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            console.log(data);\n            that.setState({\n                slider: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(BLOG_SLIDER, successFn, errorFn);\n    }\n\n    deleteObject(record) {\n        let that = this;\n        let reqData = {};\n        reqData.is_active = false;\n        let successFn = function (data) {\n            that.loadData();\n        }\n        let errorFn = function () {\n        };\n        patchAPI(interpolate(SINGLE_SLIDER, [record.id]), reqData, successFn, errorFn)\n    }\n\n    render() {\n        let that = this;\n        return <div><Switch>\n            <Route exact path='/web/slider-image/add'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Route exact path='/web/slider-image/edit/:id'\n                   render={(route) => <AddSliderImage {...this.state} {...route} loadData={this.loadData}/>}/>\n            <Card title=\"Slider Image\" extra={<Link to={\"/web/slider-image/add\"}>\n                <Button type=\"primary\">\n                    <Icon type=\"plus\"/> Add\n                </Button>\n            </Link>}>\n                <List itemLayout=\"vertical\" dataSource={this.state.slider} renderItem={item =>\n                    <List.Item key={item.id}\n                               extra={<img src={item.silder_image}\n                                           alt=\"\"\n                                           style={{\n                                               maxWidth: '100%',\n                                               width: '400px'\n                                           }}\n                               />}\n                               actions={[<Link to={'/web/slider-image/edit/' + item.id}>Edit</Link>,\n                                   <Popconfirm title=\"Are you sure delete this item?\"\n                                               onConfirm={() => that.deleteObject(item)} okText=\"Yes\" cancelText=\"No\">\n                                       <a>Delete</a>\n                                   </Popconfirm>]}>\n                        <List.Item.Meta\n                            avatar={<Avatar>{item.rank}</Avatar>}\n                            title={item.title}\n                            description={item.name}\n                        />\n                    </List.Item>}/>\n            </Card>\n        </Switch>\n        </div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}