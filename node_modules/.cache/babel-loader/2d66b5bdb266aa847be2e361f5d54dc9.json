{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/prescriptions/AddorEditPatientPrescriptions.js\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Button, Card, Form, Icon, Row } from \"antd\";\nimport { CHECKBOX_FIELD, DATE_PICKER, SINGLE_CHECKBOX_FIELD, NUMBER_FIELD, SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../constants/dataKeys\";\nimport { PRESCRIPTIONS_API, DRUG_CATALOG, ALL_PRESCRIPTIONS_API } from \"../../../constants/api\";\nimport { getAPI, interpolate, displayMessage } from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom';\n\nvar AddorEditPatientPrescriptions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddorEditPatientPrescriptions, _React$Component);\n\n  function AddorEditPatientPrescriptions(props) {\n    var _this;\n\n    _classCallCheck(this, AddorEditPatientPrescriptions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddorEditPatientPrescriptions).call(this, props));\n    _this.state = {\n      redirect: false,\n      vitalSign: null,\n      drug_catalog: _this.props.drug_catalog ? _this.props.drug_catalog : null,\n      editPrescription: _this.props.editPrescription ? _this.props.editPrescription : null\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDrugCatalog = _this.loadDrugCatalog.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddorEditPatientPrescriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadDrugCatalog();\n    }\n  }, {\n    key: \"loadDrugCatalog\",\n    value: function loadDrugCatalog() {\n      if (this.state.drug_catalog == null) {\n        var that = this;\n\n        var successFn = function successFn(data) {\n          that.setState({\n            drug_catalog: data\n          });\n        };\n\n        var errorFn = function errorFn() {};\n\n        getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn);\n      }\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.editPrescription);\n      var drugOption = [];\n\n      if (this.state.drug_catalog) {\n        this.state.drug_catalog.forEach(function (drug) {\n          drugOption.push({\n            label: drug.name + \"(\" + drug.strength + \")\",\n            value: drug.id\n          });\n        });\n      }\n\n      var fields = [{\n        label: \"Drug\",\n        key: \"drug\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editPrescription ? this.state.editPrescription.drug : null,\n        options: drugOption\n      }, {\n        label: \"Quantity\",\n        key: \"qunatity\",\n        required: true,\n        initialValue: this.state.editPrescription ? this.state.editPrescription.qunatity : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"cost\",\n        key: \"cost\",\n        initialValue: this.state.editPrescription ? this.state.editPrescription.cost : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"total\",\n        key: \"total\",\n        initialValue: this.state.editPrescription ? this.state.editPrescription.total : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"active\",\n        key: \"is_active\",\n        initialValue: this.state.editPrescription ? this.state.editPrescription.is_active : false,\n        type: SINGLE_CHECKBOX_FIELD\n      }, {\n        label: \"Completed\",\n        key: \"is_completed\",\n        initialValue: this.state.editPrescription ? this.state.editPrescription.is_completed : false,\n        type: SINGLE_CHECKBOX_FIELD\n      }];\n      var editformProp;\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(PRESCRIPTIONS_API, [this.props.match.params.id]),\n        method: \"post\"\n      };\n      var defaultValues = [];\n\n      if (this.state.editPrescription) {\n        defaultValues = [{\n          \"key\": \"id\",\n          \"value\": this.state.editPrescription.id\n        }];\n      }\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/emr/prescriptions/edit\",\n        render: function render() {\n          return _this2.state.editPrescription ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Invoive\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/patient/' + _this2.props.match.params.id + '/emr/prescriptions',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/emr/prescriptions/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Prescriptions\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/patient/' + this.props.match.params.id + '/emr/prescriptions',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddorEditPatientPrescriptions;\n}(React.Component);\n\nexport default AddorEditPatientPrescriptions;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/prescriptions/AddorEditPatientPrescriptions.js"],"names":["React","Route","DynamicFieldsForm","Button","Card","Form","Icon","Row","CHECKBOX_FIELD","DATE_PICKER","SINGLE_CHECKBOX_FIELD","NUMBER_FIELD","SUCCESS_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","PRESCRIPTIONS_API","DRUG_CATALOG","ALL_PRESCRIPTIONS_API","getAPI","interpolate","displayMessage","Redirect","AddorEditPatientPrescriptions","props","state","redirect","vitalSign","drug_catalog","editPrescription","changeRedirect","bind","loadDrugCatalog","that","successFn","data","setState","errorFn","active_practiceId","redirectVar","console","log","drugOption","forEach","drug","push","label","name","strength","value","id","fields","key","type","initialValue","options","required","qunatity","cost","total","is_active","is_completed","editformProp","TestFormLayout","create","formProp","action","match","params","method","defaultValues","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router\";\n\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {\n    CHECKBOX_FIELD,\n    DATE_PICKER,\n    SINGLE_CHECKBOX_FIELD,\n    NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    INPUT_FIELD,\n    RADIO_FIELD,\n    SELECT_FIELD\n} from \"../../../constants/dataKeys\";\nimport {PRESCRIPTIONS_API, DRUG_CATALOG, ALL_PRESCRIPTIONS_API} from \"../../../constants/api\";\nimport {getAPI, interpolate, displayMessage} from \"../../../utils/common\";\nimport {Redirect} from 'react-router-dom'\n\n\nclass AddorEditPatientPrescriptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            vitalSign: null,\n            drug_catalog: this.props.drug_catalog ? this.props.drug_catalog : null,\n            editPrescription:this.props.editPrescription ? this.props.editPrescription : null,\n        }\n        this.changeRedirect = this.changeRedirect.bind(this);\n        this.loadDrugCatalog = this.loadDrugCatalog.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadDrugCatalog();\n    }\n\n    loadDrugCatalog() {\n        if (this.state.drug_catalog == null) {\n            let that = this;\n            let successFn = function (data) {\n                that.setState({\n                    drug_catalog: data,\n                })\n            };\n            let errorFn = function () {\n            }\n            getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn)\n        }\n    }\n\n\n\n    changeRedirect() {\n        let redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n\n\n    }\n\n    render() {\n        console.log(this.state.editPrescription)\n        const drugOption = []\n        if (this.state.drug_catalog) {\n            this.state.drug_catalog.forEach(function (drug) {\n                drugOption.push({label: (drug.name + \"(\" + drug.strength + \")\"), value: drug.id});\n            })\n        }\n        const fields = [{\n            label: \"Drug\",\n            key: \"drug\",\n            type: SELECT_FIELD,\n            initialValue: this.state.editPrescription ? this.state.editPrescription.drug : null,\n            options: drugOption\n        }, {\n            label: \"Quantity\",\n            key: \"qunatity\",\n            required: true,\n            initialValue: this.state.editPrescription ? this.state.editPrescription.qunatity : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"cost\",\n            key: \"cost\",\n            initialValue: this.state.editPrescription ? this.state.editPrescription.cost : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"total\",\n            key: \"total\",\n            initialValue: this.state.editPrescription ? this.state.editPrescription.total : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"active\",\n            key: \"is_active\",\n            initialValue: this.state.editPrescription ? this.state.editPrescription.is_active : false,\n            type: SINGLE_CHECKBOX_FIELD,\n        }, {\n            label: \"Completed\",\n            key: \"is_completed\",\n            initialValue: this.state.editPrescription ? this.state.editPrescription.is_completed : false,\n            type: SINGLE_CHECKBOX_FIELD,\n        },];\n\n\n        let editformProp;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                console.log(data);\n            },\n            errorFn: function () {\n            },\n            action: interpolate(PRESCRIPTIONS_API, [this.props.match.params.id]),\n            method: \"post\",\n        }\n\n\n        let defaultValues=[]\n        if(this.state.editPrescription){\n            defaultValues = [{\"key\":\"id\", \"value\":this.state.editPrescription.id}];}\n\n            return <Row>\n            <Card>\n                <Route exact path='/patient/:id/emr/prescriptions/edit'\n                           render={() => (this.state.editPrescription?<TestFormLayout defaultValues={defaultValues} title=\"Edit Invoive\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>: <Redirect to={'/patient/' + this.props.match.params.id + '/emr/prescriptions'} />)}/>\n\n                <Route exact path='/patient/:id/emr/prescriptions/add'\n                       render={() => <TestFormLayout title=\"Add Prescriptions\"\n                                                     changeRedirect={this.changeRedirect}\n                                                     formProp={formProp}\n                                                     fields={fields}/>}/>\n            </Card>\n                {this.state.redirect && <Redirect to={'/patient/' + this.props.match.params.id + '/emr/prescriptions'}/>}\n        </Row>\n\n    }\n}\n\nexport default AddorEditPatientPrescriptions;\n"]},"metadata":{},"sourceType":"module"}