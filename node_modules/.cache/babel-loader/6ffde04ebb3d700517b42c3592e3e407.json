{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/files/PatientFiles.js\";\nimport React from \"react\";\nimport { Button, Card, Col, Icon, List, Modal, Radio, Row } from \"antd\";\nimport { getAPI, interpolate } from \"../../../utils/common\";\nimport { ALL_PATIENT_FILES, EMR_FILETAGS, PATIENT_FILES } from \"../../../constants/api\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Form } from \"antd/lib/index\";\nimport { MULTI_SELECT_FIELD, SINGLE_IMAGE_UPLOAD_FIELD } from \"../../../constants/dataKeys\";\n\nvar PatientFiles =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientFiles, _React$Component);\n\n  function PatientFiles(props) {\n    var _this;\n\n    _classCallCheck(this, PatientFiles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientFiles).call(this, props));\n    _this.state = {\n      files: [],\n      tags: [],\n      showAddModal: false\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientFiles, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadData();\n      this.loadTags();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          files: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      if (this.props.match.params.id) getAPI(interpolate(PATIENT_FILES, [this.props.match.params.id]), successFn, errorFn);else getAPI(ALL_PATIENT_FILES, successFn, errorFn);\n    }\n  }, {\n    key: \"loadTags\",\n    value: function loadTags() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          tags: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(EMR_FILETAGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"triggerAddModal\",\n    value: function triggerAddModal(option) {\n      this.setState({\n        showAddModal: !!option\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n      var PatientFilesForm = Form.create()(DynamicFieldsForm);\n      var fields = [{\n        key: 'file_type',\n        label: 'File',\n        type: SINGLE_IMAGE_UPLOAD_FIELD\n      }, {\n        key: 'file_tags',\n        label: 'Tags',\n        type: MULTI_SELECT_FIELD,\n        options: this.state.tags.map(function (tag) {\n          return {\n            label: tag.name,\n            value: tag.id\n          };\n        })\n      }];\n      var formProps = {\n        method: 'post',\n        successFn: function successFn() {\n          that.triggerAddModal(false);\n          that.loadData();\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(PATIENT_FILES, [this.props.match.params.id])\n      };\n      var defaultFields = [{\n        key: 'is_active',\n        value: true\n      }, {\n        key: 'patient',\n        value: this.props.match.params.id\n      }];\n      return React.createElement(Card, {\n        title: \"Files\",\n        extra: React.createElement(Button.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.triggerAddModal(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), \"Add\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 6,\n        style: {\n          height: 'calc(100vh - 55px)',\n          overflow: 'auto',\n          paddingRight: '10px',\n          // backgroundColor: '#e3e5e6',\n          borderRight: '1px solid #ccc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        buttonStyle: \"solid\",\n        defaultValue: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Uploaded Files\"), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"All Files\"), this.state.tags.map(function (tag) {\n        return React.createElement(Radio.Button, {\n          style: {\n            width: '100%',\n            backgroundColor: 'transparent',\n            border: '0px'\n          },\n          value: tag.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, tag.name);\n      }), React.createElement(Radio.Button, {\n        style: {\n          width: '100%',\n          backgroundColor: 'transparent',\n          border: '0px'\n        },\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Recently Added\"))), React.createElement(Col, {\n        span: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(List, {\n        grid: {\n          gutter: 16,\n          column: 3\n        },\n        dataSource: this.state.files,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            style: {\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: item.file_type,\n            alt: \"\",\n            style: {\n              maxWidth: '100%',\n              height: '100px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        visible: this.state.showAddModal,\n        onCancel: function onCancel() {\n          return _this2.triggerAddModal(false);\n        },\n        footer: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(PatientFilesForm, {\n        title: \"Add Files\",\n        fields: fields,\n        defaultFields: defaultFields,\n        formProp: formProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PatientFiles;\n}(React.Component);\n\nexport default PatientFiles;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/files/PatientFiles.js"],"names":["React","Button","Card","Col","Icon","List","Modal","Radio","Row","getAPI","interpolate","ALL_PATIENT_FILES","EMR_FILETAGS","PATIENT_FILES","DynamicFieldsForm","Form","MULTI_SELECT_FIELD","SINGLE_IMAGE_UPLOAD_FIELD","PatientFiles","props","state","files","tags","showAddModal","loadData","bind","loadTags","that","successFn","data","setState","errorFn","match","params","id","active_practiceId","option","PatientFilesForm","create","fields","key","label","type","options","map","tag","name","value","formProps","method","triggerAddModal","action","defaultFields","height","overflow","paddingRight","borderRight","width","backgroundColor","border","gutter","column","item","textAlign","file_type","maxWidth","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,GAArD,QAA+D,MAA/D;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,uBAAlC;AACA,SAAQC,iBAAR,EAA2BC,YAA3B,EAAyCC,aAAzC,QAA6D,wBAA7D;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,SAAQC,kBAAR,EAA4BC,yBAA5B,QAA4D,6BAA5D;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAPe;AAQlB;;;;yCAEoB;AACjB,WAAKD,QAAL;AACA,WAAKE,QAAL;AACH;;;+BAEU;AACP,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BF,QAAAA,IAAI,CAACG,QAAL,CAAc;AACVT,UAAAA,KAAK,EAAEQ;AADG,SAAd;AAGH,OAJD;;AAKA,UAAIE,OAAO,GAAG,SAAVA,OAAU,GAAY,CACzB,CADD;;AAEA,UAAI,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5B,EACIzB,MAAM,CAACC,WAAW,CAACG,aAAD,EAAgB,CAAC,KAAKM,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAAhB,CAAZ,EAA2DN,SAA3D,EAAsEG,OAAtE,CAAN,CADJ,KAGItB,MAAM,CAACE,iBAAD,EAAoBiB,SAApB,EAA+BG,OAA/B,CAAN;AACP;;;+BAEU;AACP,UAAIJ,IAAI,GAAG,IAAX;;AACA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BF,QAAAA,IAAI,CAACG,QAAL,CAAc;AACVR,UAAAA,IAAI,EAAEO;AADI,SAAd;AAGH,OAJD;;AAKA,UAAIE,OAAO,GAAG,SAAVA,OAAU,GAAY,CACzB,CADD;;AAEAtB,MAAAA,MAAM,CAACC,WAAW,CAACE,YAAD,EAAe,CAAC,KAAKO,KAAL,CAAWgB,iBAAZ,CAAf,CAAZ,EAA4DP,SAA5D,EAAuEG,OAAvE,CAAN;AACH;;;oCAEeK,M,EAAQ;AACpB,WAAKN,QAAL,CAAc;AACVP,QAAAA,YAAY,EAAE,CAAC,CAACa;AADN,OAAd;AAGH;;;6BAEQ;AAAA;;AACL,UAAIT,IAAI,GAAG,IAAX;AACA,UAAMU,gBAAgB,GAAGtB,IAAI,CAACuB,MAAL,GAAcxB,iBAAd,CAAzB;AACA,UAAMyB,MAAM,GAAG,CAAC;AACZC,QAAAA,GAAG,EAAE,WADO;AAEZC,QAAAA,KAAK,EAAE,MAFK;AAGZC,QAAAA,IAAI,EAAEzB;AAHM,OAAD,EAIZ;AACCuB,QAAAA,GAAG,EAAE,WADN;AAECC,QAAAA,KAAK,EAAE,MAFR;AAGCC,QAAAA,IAAI,EAAE1B,kBAHP;AAIC2B,QAAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWE,IAAX,CAAgBsB,GAAhB,CAAoB,UAAAC,GAAG;AAAA,iBAAK;AAACJ,YAAAA,KAAK,EAAEI,GAAG,CAACC,IAAZ;AAAkBC,YAAAA,KAAK,EAAEF,GAAG,CAACX;AAA7B,WAAL;AAAA,SAAvB;AAJV,OAJY,CAAf;AAUA,UAAMc,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdrB,QAAAA,SAAS,EAAE,qBAAY;AACnBD,UAAAA,IAAI,CAACuB,eAAL,CAAqB,KAArB;AACAvB,UAAAA,IAAI,CAACH,QAAL;AACH,SALa;AAMdO,QAAAA,OAAO,EAAE,mBAAY,CACpB,CAPa;AAQdoB,QAAAA,MAAM,EAAEzC,WAAW,CAACG,aAAD,EAAgB,CAAC,KAAKM,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAAhB;AARL,OAAlB;AAUA,UAAMkB,aAAa,GAAG,CAAC;AAACZ,QAAAA,GAAG,EAAE,WAAN;AAAmBO,QAAAA,KAAK,EAAE;AAA1B,OAAD,EAAkC;AAACP,QAAAA,GAAG,EAAE,SAAN;AAAiBO,QAAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC;AAAhD,OAAlC,CAAtB;AACA,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AACM,QAAA,KAAK,EAAE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACgB,eAAL,CAAqB,IAArB,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmD,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnD,QADG,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AACK,QAAA,KAAK,EAAE;AACHG,UAAAA,MAAM,EAAE,oBADL;AAEHC,UAAAA,QAAQ,EAAE,MAFP;AAGHC,UAAAA,YAAY,EAAE,MAHX;AAIH;AACAC,UAAAA,WAAW,EAAE;AALV,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,WAAW,EAAC,OAAzB;AAAiC,QAAA,YAAY,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,eAAe,EAAE,aAAjC;AAAgDC,UAAAA,MAAM,EAAE;AAAxD,SAArB;AACc,QAAA,KAAK,EAAC,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAKK,KAAKvC,KAAL,CAAWE,IAAX,CAAgBsB,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eAAI,oBAAC,KAAD,CAAO,MAAP;AACxB,UAAA,KAAK,EAAE;AAACY,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,eAAe,EAAE,aAAjC;AAAgDC,YAAAA,MAAM,EAAE;AAAxD,WADiB;AAC+C,UAAA,KAAK,EAAEd,GAAG,CAACX,EAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEvBW,GAAG,CAACC,IAFmB,CAAJ;AAAA,OAAvB,CALL,EAUI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,eAAe,EAAE,aAAjC;AAAgDC,UAAAA,MAAM,EAAE;AAAxD,SAArB;AAAqF,QAAA,KAAK,EAAC,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,CARJ,CADJ,EAgCI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE;AAACC,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SADV;AAEI,QAAA,UAAU,EAAE,KAAKzC,KAAL,CAAWC,KAF3B;AAGI,QAAA,UAAU,EAAE,oBAAAyC,IAAI;AAAA,iBACZ,oBAAC,IAAD,CAAM,IAAN;AAAW,YAAA,KAAK,EAAE;AAACC,cAAAA,SAAS,EAAC;AAAX,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE,SAAf;AAA0B,YAAA,GAAG,EAAC,EAA9B;AAAiC,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAC,MAAV;AAAiBZ,cAAAA,MAAM,EAAC;AAAxB,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADY;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAhCJ,CAJG,EAgDH,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWG,YAA3B;AACO,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAAC2B,eAAL,CAAqB,KAArB,CAAN;AAAA,SADjB;AAEO,QAAA,MAAM,EAAE,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,WAAxB;AACkB,QAAA,MAAM,EAAEX,MAD1B;AAEkB,QAAA,aAAa,EAAEa,aAFjC;AAGkB,QAAA,QAAQ,EAAEJ,SAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAhDG,CAAP;AAyDH;;;;EAlIsBhD,KAAK,CAACkE,S;;AAqIjC,eAAehD,YAAf","sourcesContent":["import React from \"react\";\nimport {Button, Card, Col, Icon, List, Modal, Radio, Row} from \"antd\";\nimport {getAPI, interpolate} from \"../../../utils/common\";\nimport {ALL_PATIENT_FILES, EMR_FILETAGS, PATIENT_FILES} from \"../../../constants/api\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Form} from \"antd/lib/index\";\nimport {MULTI_SELECT_FIELD, SINGLE_IMAGE_UPLOAD_FIELD} from \"../../../constants/dataKeys\";\n\nclass PatientFiles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            tags: [],\n            showAddModal: false\n        };\n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentWillMount() {\n        this.loadData();\n        this.loadTags()\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                files: data\n            })\n        }\n        let errorFn = function () {\n        }\n        if (this.props.match.params.id)\n            getAPI(interpolate(PATIENT_FILES, [this.props.match.params.id]), successFn, errorFn);\n        else\n            getAPI(ALL_PATIENT_FILES, successFn, errorFn);\n    }\n\n    loadTags() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                tags: data\n            })\n        }\n        let errorFn = function () {\n        }\n        getAPI(interpolate(EMR_FILETAGS, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    triggerAddModal(option) {\n        this.setState({\n            showAddModal: !!option\n        })\n    }\n\n    render() {\n        let that = this;\n        const PatientFilesForm = Form.create()(DynamicFieldsForm);\n        const fields = [{\n            key: 'file_type',\n            label: 'File',\n            type: SINGLE_IMAGE_UPLOAD_FIELD\n        }, {\n            key: 'file_tags',\n            label: 'Tags',\n            type: MULTI_SELECT_FIELD,\n            options: this.state.tags.map(tag => ({label: tag.name, value: tag.id}))\n        }];\n        const formProps = {\n            method: 'post',\n            successFn: function () {\n                that.triggerAddModal(false);\n                that.loadData()\n            },\n            errorFn: function () {\n            },\n            action: interpolate(PATIENT_FILES, [this.props.match.params.id])\n        }\n        const defaultFields = [{key: 'is_active', value: true}, {key: 'patient', value: this.props.match.params.id}]\n        return <Card title=\"Files\"\n                     extra={<Button.Group>\n                         <Button onClick={() => this.triggerAddModal(true)}><Icon type=\"plus\"/>Add</Button>\n                     </Button.Group>}>\n            <Row>\n                <Col span={6}\n                     style={{\n                         height: 'calc(100vh - 55px)',\n                         overflow: 'auto',\n                         paddingRight: '10px',\n                         // backgroundColor: '#e3e5e6',\n                         borderRight: '1px solid #ccc'\n                     }}>\n                    <Radio.Group buttonStyle=\"solid\" defaultValue=\"all\">\n                        <h2>Uploaded Files</h2>\n                        <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}}\n                                      value=\"all\">\n                            All Files</Radio.Button>\n                        {this.state.tags.map(tag => <Radio.Button\n                            style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value={tag.id}>\n                            {tag.name}\n                        </Radio.Button>)}\n\n                        <Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value=\"c\">\n                            Recently Added\n                        </Radio.Button>\n                        {/*<p><br/></p>*/}\n                        {/*<h2>Generated Files</h2>*/}\n                        {/*<Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}} value=\"d\">*/}\n                            {/*Chengdu*/}\n                        {/*</Radio.Button>*/}\n                        {/*<Radio.Button style={{width: '100%', backgroundColor: 'transparent', border: '0px'}}*/}\n                                      {/*value=\"none\">*/}\n                            {/*Untagged Files</Radio.Button>*/}\n                    </Radio.Group>\n                </Col>\n                <Col span={18}>\n                    <List\n                        grid={{gutter: 16, column: 3}}\n                        dataSource={this.state.files}\n                        renderItem={item => (\n                            <List.Item style={{textAlign:'center'}}>\n                                <img src={item.file_type} alt=\"\" style={{maxWidth:'100%',height:'100px'}}/>\n                            </List.Item>\n                        )}\n                    />\n                </Col>\n            </Row>\n            <Modal visible={this.state.showAddModal}\n                   onCancel={() => this.triggerAddModal(false)}\n                   footer={null}>\n                <PatientFilesForm title=\"Add Files\"\n                                  fields={fields}\n                                  defaultFields={defaultFields}\n                                  formProp={formProps}/>\n            </Modal>\n        </Card>\n    }\n}\n\nexport default PatientFiles;\n"]},"metadata":{},"sourceType":"module"}