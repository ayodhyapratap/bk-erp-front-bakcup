{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/disease/AddDisease.js\";\nimport { Card, Form, Row } from \"antd\";\nimport React from \"react\";\nimport { SINGLE_IMAGE_UPLOAD_FIELD, INPUT_FIELD, QUILL_TEXT_FIELD, SELECT_FIELD, SUCCESS_MSG_TYPE, TEXT_FIELD, MULTI_IMAGE_UPLOAD_FIELD } from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { displayMessage, getAPI, interpolate } from \"../../../utils/common\";\nimport { BLOG_DISEASE, SINGLE_DISEASE } from \"../../../constants/api\";\nimport { Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { DISEASE_TYPES } from \"../../../constants/hardData\";\n\nvar AddDisease =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddDisease, _React$Component);\n\n  function AddDisease(props) {\n    var _this;\n\n    _classCallCheck(this, AddDisease);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddDisease).call(this, props));\n    _this.state = {\n      editBlogData: _this.props.editBlogData ? _this.props.editBlogData : null\n    };\n    return _this;\n  }\n\n  _createClass(AddDisease, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.id) {\n        if (!this.state.editBlogData) {\n          this.loadData();\n        }\n      }\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          editBlogData: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(SINGLE_DISEASE, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fields = [{\n        label: \"Disease Type\",\n        key: \"disease_type\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.disease_type : null,\n        type: SELECT_FIELD,\n        options: DISEASE_TYPES\n      }, {\n        label: \"Disease Name\",\n        key: \"disease_name\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.disease_name : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Disease Main Image\",\n        key: \"main_image\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.main_image : null,\n        type: SINGLE_IMAGE_UPLOAD_FIELD\n      }, {\n        label: \"Disease Side Image\",\n        key: \"side_image\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.side_image : [],\n        type: MULTI_IMAGE_UPLOAD_FIELD\n      }, {\n        label: \"SEO Description\",\n        key: \"meta_description\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n        type: TEXT_FIELD\n      }, {\n        label: \"SEO Keywords\",\n        key: \"keywords\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n        type: TEXT_FIELD\n      }, {\n        label: \"URL\",\n        key: \"domain\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n        type: INPUT_FIELD,\n        required: true\n      }, {\n        label: \"Content\",\n        key: \"content\",\n        initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n        type: QUILL_TEXT_FIELD\n      }];\n      var editformProp;\n\n      if (this.state.editBlogData) {\n        editformProp = {\n          successFn: function successFn(data) {\n            displayMessage(SUCCESS_MSG_TYPE, \"success\");\n            console.log(data);\n          },\n          errorFn: function errorFn() {},\n          action: interpolate(SINGLE_DISEASE, [this.props.match.params.id]),\n          method: \"put\"\n        };\n      }\n\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: BLOG_DISEASE,\n        method: \"post\"\n      };\n      var defaultValues = [];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/web/disease/edit/:id\",\n        render: function render() {\n          return _this2.props.match.params.id ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Disease\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: editformProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/web/disease',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/web/disease/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Disease\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/web/disease',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddDisease;\n}(React.Component);\n\nexport { AddDisease as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/webAdmin/disease/AddDisease.js"],"names":["Card","Form","Row","React","SINGLE_IMAGE_UPLOAD_FIELD","INPUT_FIELD","QUILL_TEXT_FIELD","SELECT_FIELD","SUCCESS_MSG_TYPE","TEXT_FIELD","MULTI_IMAGE_UPLOAD_FIELD","DynamicFieldsForm","displayMessage","getAPI","interpolate","BLOG_DISEASE","SINGLE_DISEASE","Route","Redirect","DISEASE_TYPES","AddDisease","props","state","editBlogData","match","params","id","loadData","redirectVar","redirect","setState","that","successFn","data","errorFn","fields","label","key","initialValue","disease_type","type","options","disease_name","main_image","side_image","meta_description","keywords","domain","required","content","editformProp","console","log","action","method","TestFormLayout","create","formProp","defaultValues","changeRedirect","Component"],"mappings":"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","sourcesContent":["import {Card, Form, Row} from \"antd\";\nimport React from \"react\";\nimport {\n    SINGLE_IMAGE_UPLOAD_FIELD,\n    INPUT_FIELD,\n    QUILL_TEXT_FIELD,\n    SELECT_FIELD,\n    SUCCESS_MSG_TYPE,\n    TEXT_FIELD, MULTI_IMAGE_UPLOAD_FIELD\n} from \"../../../constants/dataKeys\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {displayMessage, getAPI, interpolate} from \"../../../utils/common\";\nimport {BLOG_DISEASE, SINGLE_DISEASE} from \"../../../constants/api\";\nimport {Route} from \"react-router\";\nimport {Redirect} from \"react-router-dom\";\nimport {DISEASE_TYPES} from \"../../../constants/hardData\";\n\n\nexport default class AddDisease extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editBlogData: this.props.editBlogData ? this.props.editBlogData : null\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            if (!this.state.editBlogData) {\n                this.loadData();\n            }\n        }\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    loadData() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                editBlogData: data,\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(SINGLE_DISEASE, [this.props.match.params.id]), successFn, errorFn);\n\n\n    }\n\n\n    render() {\n        const fields = [{\n            label: \"Disease Type\",\n            key: \"disease_type\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_type : null,\n            type: SELECT_FIELD,\n            options: DISEASE_TYPES\n        }, {\n            label: \"Disease Name\",\n            key: \"disease_name\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.disease_name : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"Disease Main Image\",\n            key: \"main_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.main_image : null,\n            type: SINGLE_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"Disease Side Image\",\n            key: \"side_image\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.side_image : [],\n            type: MULTI_IMAGE_UPLOAD_FIELD,\n        }, {\n            label: \"SEO Description\",\n            key: \"meta_description\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.meta_description : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"SEO Keywords\",\n            key: \"keywords\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.keywords : null,\n            type: TEXT_FIELD,\n        }, {\n            label: \"URL\",\n            key: \"domain\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.domain : null,\n            type: INPUT_FIELD,\n            required: true\n        }, {\n            label: \"Content\",\n            key: \"content\",\n            initialValue: this.state.editBlogData ? this.state.editBlogData.content : null,\n            type: QUILL_TEXT_FIELD,\n        },];\n\n\n        let editformProp;\n        if (this.state.editBlogData) {\n            editformProp = {\n                successFn: function (data) {\n                    displayMessage(SUCCESS_MSG_TYPE, \"success\");\n                    console.log(data);\n                },\n                errorFn: function () {\n\n                },\n                action: interpolate(SINGLE_DISEASE, [this.props.match.params.id]),\n                method: \"put\",\n\n            }\n        }\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\");\n\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: BLOG_DISEASE,\n            method: \"post\",\n        }\n        let defaultValues = [];\n\n        return <Row>\n            <Card>\n                <Route exact path='/web/disease/edit/:id'\n                       render={() => (this.props.match.params.id ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Disease\"\n                                           changeRedirect={this.changeRedirect} formProp={editformProp}\n                                           fields={fields}/> : <Redirect to={'/web/disease'}/>)}/>\n                <Route exact path='/web/disease/add'\n                       render={() => <TestFormLayout title=\"Add Disease\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/web/disease'}/>}\n        </Row>\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}