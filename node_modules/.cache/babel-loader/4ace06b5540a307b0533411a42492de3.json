{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/clinicNotes/PatientClinicNotes.js\";\nimport { Button, Card, Checkbox, Divider, Icon, Table } from \"antd\";\nimport React from \"react\";\nimport { getAPI, interpolate } from \"../../../utils/common\";\nimport { PATIENT_CLINIC_NOTES_API } from \"../../../constants/api\";\nimport moment from \"moment\";\nimport { Route, Switch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport AddClinicNotes from \"./AddClinicNotes\";\n\nvar PatientClinicNotes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientClinicNotes, _React$Component);\n\n  function PatientClinicNotes(props) {\n    var _this;\n\n    _classCallCheck(this, PatientClinicNotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientClinicNotes).call(this, props));\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientClinicNotes).call(this, props));\n    _this.state = {\n      currentPatient: _this.props.currentPatient,\n      active_practiceId: _this.props.active_practiceId,\n      clinicNotes: [],\n      editClinicNotes: null\n    };\n    _this.loadClinicNotes = _this.loadClinicNotes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editClinicNotesData = _this.editClinicNotesData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientClinicNotes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.id) {\n        this.loadClinicNotes();\n      }\n    }\n  }, {\n    key: \"loadClinicNotes\",\n    value: function loadClinicNotes() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          clinicNotes: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PATIENT_CLINIC_NOTES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"editClinicNotesData\",\n    value: function editClinicNotesData(record) {\n      this.setState({\n        editClinicNotes: record\n      });\n      var id = this.props.match.params.id;\n      this.props.history.push(\"/patient/\" + id + \"/emr/clinicnotes/edit\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        title: 'Time',\n        dataIndex: 'created_at',\n        key: 'name',\n        render: function render(created_at) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, moment(created_at).format('LLL'));\n        }\n      }, {\n        title: 'name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'chief complaints',\n        dataIndex: 'chief_complaints',\n        key: 'chief_complaints'\n      }, {\n        title: 'investigations',\n        dataIndex: 'investigations',\n        key: 'investigations'\n      }, {\n        title: 'diagnosis',\n        dataIndex: 'diagnosis',\n        key: 'diagnosis'\n      }, {\n        title: 'notes',\n        dataIndex: 'notes',\n        key: 'notes'\n      }, {\n        title: 'observations',\n        dataIndex: 'observations',\n        key: 'observations'\n      }, {\n        title: 'Active',\n        key: 'is_active',\n        render: function render(text, record) {\n          return React.createElement(Checkbox, {\n            disabled: true,\n            checked: record.is_active,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editClinicNotesData(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            href: \"javascript:;\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }];\n\n      if (this.props.match.params.id) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/patient/:id/emr/clinicnotes/add\",\n          render: function render(route) {\n            return React.createElement(AddClinicNotes, Object.assign({}, _this2.state, route, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/patient/:id/emr/clinicnotes/edit\",\n          render: function render(route) {\n            return React.createElement(AddClinicNotes, Object.assign({}, _this2.state, route, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(Card, {\n          title: this.state.currentPatient ? this.state.currentPatient.name + \" clinicnotes\" : \"clinicnotes\",\n          extra: React.createElement(Button.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/patient/\" + this.props.match.params.id + \"/emr/clinicnotes/add\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(Button, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            type: \"plus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }), \"Add\"))),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Table, {\n          columns: columns,\n          dataSource: this.state.clinicNotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \" select patient to further continue\"));\n      }\n    }\n  }]);\n\n  return PatientClinicNotes;\n}(React.Component);\n\nexport default PatientClinicNotes;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/clinicNotes/PatientClinicNotes.js"],"names":["Button","Card","Checkbox","Divider","Icon","Table","React","getAPI","interpolate","PATIENT_CLINIC_NOTES_API","moment","Route","Switch","Link","AddClinicNotes","PatientClinicNotes","props","state","currentPatient","active_practiceId","clinicNotes","editClinicNotes","loadClinicNotes","bind","editClinicNotesData","match","params","id","that","successFn","data","setState","errorFn","record","history","push","columns","title","dataIndex","key","render","created_at","format","text","is_active","route","name","Component"],"mappings":"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","sourcesContent":["import {Button, Card, Checkbox, Divider, Icon, Table} from \"antd\";\nimport React from \"react\";\nimport {getAPI, interpolate} from \"../../../utils/common\";\nimport {PATIENT_CLINIC_NOTES_API,} from \"../../../constants/api\";\nimport moment from \"moment\";\nimport {Route, Switch} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport AddClinicNotes from \"./AddClinicNotes\";\n\nclass PatientClinicNotes extends React.Component {\n    constructor(props) {\n        super(props);\n        super(props);\n        this.state = {\n            currentPatient: this.props.currentPatient,\n            active_practiceId: this.props.active_practiceId,\n            clinicNotes: [],\n            editClinicNotes: null,\n        }\n        this.loadClinicNotes = this.loadClinicNotes.bind(this);\n        this.editClinicNotesData = this.editClinicNotesData.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            this.loadClinicNotes();\n        }\n\n    }\n\n    loadClinicNotes() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                clinicNotes: data\n            })\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(PATIENT_CLINIC_NOTES_API, [this.props.match.params.id]), successFn, errorFn)\n    }\n\n\n    editClinicNotesData(record) {\n        this.setState({\n            editClinicNotes: record,\n        });\n        let id = this.props.match.params.id\n        this.props.history.push(\"/patient/\" + id + \"/emr/clinicnotes/edit\")\n\n    }\n\n    render() {\n\n        const columns = [{\n            title: 'Time',\n            dataIndex: 'created_at',\n            key: 'name',\n            render: created_at => <span>{moment(created_at).format('LLL')}</span>,\n        }, {\n            title: 'name',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            title: 'chief complaints',\n            dataIndex: 'chief_complaints',\n            key: 'chief_complaints',\n        }, {\n            title: 'investigations',\n            dataIndex: 'investigations',\n            key: 'investigations',\n        }, {\n            title: 'diagnosis',\n            dataIndex: 'diagnosis',\n            key: 'diagnosis',\n        }, {\n            title: 'notes',\n            dataIndex: 'notes',\n            key: 'notes',\n        }, {\n            title: 'observations',\n            dataIndex: 'observations',\n            key: 'observations',\n        }, {\n            title: 'Active',\n            key: 'is_active',\n            render: (text, record) => (\n                <Checkbox disabled={true} checked={record.is_active}/>\n            )\n        }, {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                <a onClick={() => this.editClinicNotesData(record)}>Edit</a>\n                <Divider type=\"vertical\"/>\n                <a href=\"javascript:;\">Delete</a>\n              </span>\n            ),\n        }];\n\n        if (this.props.match.params.id) {\n            return <div><Switch>\n                <Route exact path='/patient/:id/emr/clinicnotes/add'\n                       render={(route) => <AddClinicNotes{...this.state} {...route}/>}/>\n                <Route exact path='/patient/:id/emr/clinicnotes/edit'\n                       render={(route) => <AddClinicNotes {...this.state} {...route}/>}/>\n                <Card\n                    title={this.state.currentPatient ? this.state.currentPatient.name + \" clinicnotes\" : \"clinicnotes\"}\n                    extra={<Button.Group>\n                        <Link to={\"/patient/\" + this.props.match.params.id + \"/emr/clinicnotes/add\"}><Button><Icon\n                            type=\"plus\"/>Add</Button></Link>\n                    </Button.Group>}>\n\n                    <Table columns={columns} dataSource={this.state.clinicNotes}/>\n\n                </Card>\n            </Switch>\n\n            </div>\n        }\n        else {\n            return <Card>\n                <h2> select patient to further continue</h2>\n            </Card>\n        }\n\n    }\n}\n\nexport default PatientClinicNotes;\n"]},"metadata":{},"sourceType":"module"}