{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _moment = require('moment');\n\nvar moment = _interopRequireWildcard(_moment);\n\nvar _FullCalendar = require('rc-calendar/lib/FullCalendar');\n\nvar _FullCalendar2 = _interopRequireDefault(_FullCalendar);\n\nvar _LocaleReceiver = require('../locale-provider/LocaleReceiver');\n\nvar _LocaleReceiver2 = _interopRequireDefault(_LocaleReceiver);\n\nvar _Constants = require('./Constants');\n\nvar _Header = require('./Header');\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _interopDefault = require('../_util/interopDefault');\n\nvar _interopDefault2 = _interopRequireDefault(_interopDefault);\n\nvar _en_US = require('./locale/en_US');\n\nvar _en_US2 = _interopRequireDefault(_en_US);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction noop() {\n  return null;\n}\n\nfunction zerofixed(v) {\n  if (v < 10) {\n    return '0' + v;\n  }\n\n  return '' + v;\n}\n\nvar Calendar = function (_React$Component) {\n  (0, _inherits3['default'])(Calendar, _React$Component);\n\n  function Calendar(props) {\n    (0, _classCallCheck3['default'])(this, Calendar);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call(this, props));\n\n    _this.monthCellRender = function (value) {\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          _this$props$monthCell = _this$props.monthCellRender,\n          monthCellRender = _this$props$monthCell === undefined ? noop : _this$props$monthCell;\n      return React.createElement('div', {\n        className: prefixCls + '-month'\n      }, React.createElement('div', {\n        className: prefixCls + '-value'\n      }, value.localeData().monthsShort(value)), React.createElement('div', {\n        className: prefixCls + '-content'\n      }, monthCellRender(value)));\n    };\n\n    _this.dateCellRender = function (value) {\n      var _this$props2 = _this.props,\n          prefixCls = _this$props2.prefixCls,\n          _this$props2$dateCell = _this$props2.dateCellRender,\n          dateCellRender = _this$props2$dateCell === undefined ? noop : _this$props2$dateCell;\n      return React.createElement('div', {\n        className: prefixCls + '-date'\n      }, React.createElement('div', {\n        className: prefixCls + '-value'\n      }, zerofixed(value.date())), React.createElement('div', {\n        className: prefixCls + '-content'\n      }, dateCellRender(value)));\n    };\n\n    _this.setValue = function (value, way) {\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (way === 'select') {\n        if (_this.props.onSelect) {\n          _this.props.onSelect(value);\n        }\n      } else if (way === 'changePanel') {\n        _this.onPanelChange(value, _this.state.mode);\n      }\n    };\n\n    _this.setType = function (type) {\n      var mode = type === 'date' ? 'month' : 'year';\n\n      if (_this.state.mode !== mode) {\n        _this.setState({\n          mode: mode\n        });\n\n        _this.onPanelChange(_this.state.value, mode);\n      }\n    };\n\n    _this.onHeaderValueChange = function (value) {\n      _this.setValue(value, 'changePanel');\n    };\n\n    _this.onHeaderTypeChange = function (type) {\n      _this.setType(type);\n    };\n\n    _this.onSelect = function (value) {\n      _this.setValue(value, 'select');\n    };\n\n    _this.getDateRange = function (validRange, disabledDate) {\n      return function (current) {\n        if (!current) {\n          return false;\n        }\n\n        var _validRange = (0, _slicedToArray3['default'])(validRange, 2),\n            startDate = _validRange[0],\n            endDate = _validRange[1];\n\n        var inRange = !current.isBetween(startDate, endDate, 'days', '[]');\n\n        if (disabledDate) {\n          return disabledDate(current) || inRange;\n        }\n\n        return inRange;\n      };\n    };\n\n    _this.renderCalendar = function (locale, localeCode) {\n      var state = _this.state,\n          props = _this.props;\n      var value = state.value,\n          mode = state.mode;\n\n      if (value && localeCode) {\n        value.locale(localeCode);\n      }\n\n      var prefixCls = props.prefixCls,\n          style = props.style,\n          className = props.className,\n          fullscreen = props.fullscreen,\n          dateFullCellRender = props.dateFullCellRender,\n          monthFullCellRender = props.monthFullCellRender;\n      var type = mode === 'year' ? 'month' : 'date';\n      var cls = className || '';\n\n      if (fullscreen) {\n        cls += ' ' + prefixCls + '-fullscreen';\n      }\n\n      var monthCellRender = monthFullCellRender || _this.monthCellRender;\n      var dateCellRender = dateFullCellRender || _this.dateCellRender;\n      var disabledDate = props.disabledDate;\n\n      if (props.validRange) {\n        disabledDate = _this.getDateRange(props.validRange, disabledDate);\n      }\n\n      return React.createElement('div', {\n        className: cls,\n        style: style\n      }, React.createElement(_Header2['default'], {\n        fullscreen: fullscreen,\n        type: type,\n        value: value,\n        locale: locale.lang,\n        prefixCls: prefixCls,\n        onTypeChange: _this.onHeaderTypeChange,\n        onValueChange: _this.onHeaderValueChange,\n        validRange: props.validRange\n      }), React.createElement(_FullCalendar2['default'], (0, _extends3['default'])({}, props, {\n        disabledDate: disabledDate,\n        Select: noop,\n        locale: locale.lang,\n        type: type,\n        prefixCls: prefixCls,\n        showHeader: false,\n        value: value,\n        monthCellRender: monthCellRender,\n        dateCellRender: dateCellRender,\n        onSelect: _this.onSelect\n      })));\n    };\n\n    _this.getDefaultLocale = function () {\n      var result = (0, _extends3['default'])({}, _en_US2['default'], _this.props.locale);\n      result.lang = (0, _extends3['default'])({}, result.lang, (_this.props.locale || {}).lang);\n      return result;\n    };\n\n    var value = props.value || props.defaultValue || (0, _interopDefault2['default'])(moment)();\n\n    if (!(0, _interopDefault2['default'])(moment).isMoment(value)) {\n      throw new Error('The value/defaultValue of Calendar must be a moment object after `antd@2.0`, ' + 'see: https://u.ant.design/calendar-value');\n    }\n\n    _this.state = {\n      value: value,\n      mode: props.mode\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(Calendar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n\n      if ('mode' in nextProps && nextProps.mode !== this.props.mode) {\n        this.setState({\n          mode: nextProps.mode\n        });\n      }\n    }\n  }, {\n    key: 'onPanelChange',\n    value: function onPanelChange(value, mode) {\n      var _props = this.props,\n          onPanelChange = _props.onPanelChange,\n          onChange = _props.onChange;\n\n      if (onPanelChange) {\n        onPanelChange(value, mode);\n      }\n\n      if (onChange && value !== this.state.value) {\n        onChange(value);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(_LocaleReceiver2['default'], {\n        componentName: 'Calendar',\n        defaultLocale: this.getDefaultLocale\n      }, this.renderCalendar);\n    }\n  }]);\n  return Calendar;\n}(React.Component);\n\nexports['default'] = Calendar;\nCalendar.defaultProps = {\n  locale: {},\n  fullscreen: true,\n  prefixCls: _Constants.PREFIX_CLS,\n  mode: 'month',\n  onSelect: noop,\n  onPanelChange: noop,\n  onChange: noop\n};\nCalendar.propTypes = {\n  monthCellRender: PropTypes.func,\n  dateCellRender: PropTypes.func,\n  monthFullCellRender: PropTypes.func,\n  dateFullCellRender: PropTypes.func,\n  fullscreen: PropTypes.bool,\n  locale: PropTypes.object,\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onPanelChange: PropTypes.func,\n  value: PropTypes.object,\n  onSelect: PropTypes.func,\n  onChange: PropTypes.func\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}