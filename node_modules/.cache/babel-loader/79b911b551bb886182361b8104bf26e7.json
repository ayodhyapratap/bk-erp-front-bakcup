{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/patient/PatientProfile.js\";\nimport React from \"react\";\nimport PatientSelection from \"../PatientSelection\";\nimport { Avatar, Button, Card, Col, Divider, Icon, List, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI, interpolate } from \"../../../utils/common\";\nimport { MEDICAL_HISTORY, PATIENT_GROUPS, PATIENT_PROFILE } from \"../../../constants/api\";\nimport { MEDICAL_HISTORY_KEY } from \"../../../constants/dataKeys\";\n\nvar PatientProfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientProfile, _React$Component);\n\n  function PatientProfile(props) {\n    var _this;\n\n    _classCallCheck(this, PatientProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientProfile).call(this, props));\n    _this.state = {\n      patientProfile: null,\n      currentPatient: _this.props.currentPatient,\n      medicalHistory: {}\n    };\n    _this.loadProfile = _this.loadProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMedicalHistory = _this.getMedicalHistory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.currentPatient) {\n        this.loadProfile();\n      }\n\n      this.getMedicalHistory();\n    }\n  }, {\n    key: \"getMedicalHistory\",\n    value: function getMedicalHistory() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        var medicalHistoryData = {};\n        data.forEach(function (history) {\n          medicalHistoryData[history.id] = history;\n        });\n        that.setState({\n          medicalHistory: medicalHistoryData\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(MEDICAL_HISTORY, [that.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var that = this;\n\n      if (newProps.currentPatient && newProps.currentPatient != this.state.currentPatient) {\n        this.setState({\n          currentPatient: newProps.currentPatient\n        }, function () {\n          that.loadProfile();\n        });\n      }\n    }\n  }, {\n    key: \"loadProfile\",\n    value: function loadProfile() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          patientProfile: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      if (that.state.currentPatient) getAPI(interpolate(PATIENT_PROFILE, [that.state.currentPatient.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n\n      if (this.props.currentPatient) {\n        var patient = this.state.patientProfile;\n        if (!patient) return React.createElement(Card, {\n          loading: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n        return React.createElement(Card, {\n          title: \"Patient Profile\",\n          extra: React.createElement(Link, {\n            to: \"/patient/\" + this.state.currentPatient.id + \"/profile/edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            type: \"edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), \"\\xA0Edit Patient Profile\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Row, {\n          gutter: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 6,\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, patient.image ? React.createElement(\"img\", {\n          src: patient.image,\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }) : React.createElement(Avatar, {\n          size: 200,\n          shape: \"square\",\n          style: {\n            backgroundColor: '#87d068'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, patient.name ? patient.name : React.createElement(Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          span: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(PatientRow, {\n          label: \"Patient Name\",\n          value: patient.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Patient ID\",\n          value: patient.patient_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Gender\",\n          value: patient.gender,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Age\",\n          value: patient.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Date of Birth\",\n          value: patient.dob,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Contact Details\"), React.createElement(PatientRow, {\n          label: \"Email\",\n          value: patient.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Primary Mobile\",\n          value: patient.primary_mobile_no,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Secondary Mobile\",\n          value: patient.secondary_mobile_no,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Landline No\",\n          value: patient.landline_no,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Address\",\n          value: patient.address,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Locality\",\n          value: patient.locality,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"City\",\n          value: patient.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), React.createElement(PatientRow, {\n          label: \"Pincode\",\n          value: patient.pincode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(Col, {\n          span: 6,\n          style: {\n            borderLeft: '1 px solid #ccc'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Medical History\"), this.state.medicalHistory && 1 === 2 && React.createElement(List, {\n          dataSource: patient.medical_history,\n          renderItem: function renderItem(item) {\n            return React.createElement(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, _this2.state.medicalHistory[item].name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Groups\"), React.createElement(List, {\n          dataSource: patient.patient_group,\n          renderItem: function renderItem(item) {\n            return React.createElement(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Medical Membership\"), React.createElement(List, {\n          dataSource: patient.medical_membership,\n          renderItem: function renderItem(item) {\n            return React.createElement(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }, item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(PatientSelection, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PatientProfile;\n}(React.Component);\n\nexport default PatientProfile;\n\nfunction PatientRow(props) {\n  return React.createElement(Row, {\n    gutter: 16,\n    style: {\n      marginBottom: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    style: {\n      textAlign: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.label, \":\"), React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, props.value)));\n}","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/patient/PatientProfile.js"],"names":["React","PatientSelection","Avatar","Button","Card","Col","Divider","Icon","List","Row","Link","getAPI","interpolate","MEDICAL_HISTORY","PATIENT_GROUPS","PATIENT_PROFILE","MEDICAL_HISTORY_KEY","PatientProfile","props","state","patientProfile","currentPatient","medicalHistory","loadProfile","bind","getMedicalHistory","that","successFn","data","medicalHistoryData","forEach","history","id","setState","errorFn","active_practiceId","newProps","patient","textAlign","image","width","backgroundColor","name","patient_id","gender","age","dob","email","primary_mobile_no","secondary_mobile_no","landline_no","address","locality","city","pincode","borderLeft","medical_history","item","patient_group","medical_membership","Component","PatientRow","marginBottom","label","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PatientSelection from \"../PatientSelection\";\nimport {Avatar, Button, Card, Col, Divider, Icon, List, Row} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {getAPI, interpolate} from \"../../../utils/common\";\nimport {MEDICAL_HISTORY, PATIENT_GROUPS, PATIENT_PROFILE} from \"../../../constants/api\";\nimport {MEDICAL_HISTORY_KEY} from \"../../../constants/dataKeys\";\n\nclass PatientProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientProfile: null,\n            currentPatient: this.props.currentPatient,\n            medicalHistory: {}\n        };\n        this.loadProfile = this.loadProfile.bind(this);\n        this.getMedicalHistory = this.getMedicalHistory.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.currentPatient) {\n            this.loadProfile();\n\n        }\n        this.getMedicalHistory();\n    }\n\n    getMedicalHistory() {\n        let that = this;\n        let successFn = function (data) {\n            let medicalHistoryData = {};\n            data.forEach(function (history) {\n                medicalHistoryData[history.id] = history\n            });\n            that.setState({\n                medicalHistory: medicalHistoryData\n            })\n        }\n        let errorFn = function () {\n        }\n        getAPI(interpolate(MEDICAL_HISTORY, [that.props.active_practiceId]), successFn, errorFn);\n    }\n\n    componentWillReceiveProps(newProps) {\n        let that = this;\n        if (newProps.currentPatient && newProps.currentPatient != this.state.currentPatient) {\n\n            this.setState({\n                currentPatient: newProps.currentPatient\n            }, function () {\n                that.loadProfile();\n            })\n        }\n    }\n\n    loadProfile() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                patientProfile: data\n            });\n        };\n        let errorFn = function () {\n\n        };\n        if (that.state.currentPatient)\n            getAPI(interpolate(PATIENT_PROFILE, [that.state.currentPatient.id]), successFn, errorFn);\n    }\n\n    render() {\n        let that = this;\n        if (this.props.currentPatient) {\n            let patient = this.state.patientProfile;\n            if (!patient)\n                return <Card loading={true}/>;\n            return <Card title=\"Patient Profile\"\n                         extra={<Link to={\"/patient/\" + this.state.currentPatient.id + \"/profile/edit\"}>\n                             <Button type=\"primary\">\n                                 <Icon type=\"edit\"/>&nbsp;Edit Patient Profile</Button>\n                         </Link>}>\n                <Row gutter={16}>\n                    <Col span={6} style={{textAlign: 'center'}}>\n                        {(patient.image ? <img src={patient.image} style={{width: '100%'}}/> :\n                            <Avatar size={200} shape=\"square\" style={{backgroundColor: '#87d068'}}>\n                                {patient.name ? patient.name :\n                                    <Icon type=\"user\"/>}\n                            </Avatar>)}\n                    </Col>\n                    <Col span={12}>\n                        <PatientRow label=\"Patient Name\" value={patient.name}/>\n                        <PatientRow label=\"Patient ID\" value={patient.patient_id}/>\n                        <PatientRow label=\"Gender\" value={patient.gender}/>\n                        <PatientRow label=\"Age\" value={patient.age}/>\n                        <PatientRow label=\"Date of Birth\" value={patient.dob}/>\n                        <Divider>Contact Details</Divider>\n                        <PatientRow label=\"Email\" value={patient.email}/>\n                        <PatientRow label=\"Primary Mobile\" value={patient.primary_mobile_no}/>\n                        <PatientRow label=\"Secondary Mobile\" value={patient.secondary_mobile_no}/>\n                        <PatientRow label=\"Landline No\" value={patient.landline_no}/>\n                        <PatientRow label=\"Address\" value={patient.address}/>\n                        <PatientRow label=\"Locality\" value={patient.locality}/>\n                        <PatientRow label=\"City\" value={patient.city}/>\n                        <PatientRow label=\"Pincode\" value={patient.pincode}/>\n                    </Col>\n                    <Col span={6} style={{borderLeft: '1 px solid #ccc'}}>\n                        <Divider>Medical History</Divider>\n                        {this.state.medicalHistory&& 1===2 && <List dataSource={patient.medical_history}\n                                                                    renderItem={(item) =>\n                                                                        <List.Item>{this.state.medicalHistory[item].name}</List.Item>}/>}\n\n                        <Divider>Groups</Divider>\n                        <List dataSource={patient.patient_group}\n                              renderItem={(item) => <List.Item>{item}</List.Item>}/>\n                        <Divider>Medical Membership</Divider>\n                        <List dataSource={patient.medical_membership}\n                              renderItem={(item) => <List.Item>{item}</List.Item>}/>\n                    </Col>\n                </Row>\n            </Card>;\n        }\n        return <PatientSelection {...this.props}/>\n    }\n}\n\nexport default PatientProfile;\n\nfunction PatientRow(props) {\n    return <Row gutter={16} style={{marginBottom: '5px'}}>\n        <Col span={12} style={{textAlign: 'right'}}>{props.label}:</Col>\n        <Col span={12}><strong>{props.value}</strong></Col>\n    </Row>\n}\n"]},"metadata":{},"sourceType":"module"}