{"ast":null,"code":"import _objectSpread from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/common/CustomizedTable.js\";\nimport React from \"react\";\nimport { Row, Col, Table, Button, Icon } from \"antd\";\nimport { exportToExcel } from \"../../utils/export\";\nimport moment from \"moment\";\n\nvar CustomizedTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomizedTable, _React$Component);\n\n  function CustomizedTable(props) {\n    var _this;\n\n    _classCallCheck(this, CustomizedTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomizedTable).call(this, props));\n    _this.state = _objectSpread({}, props);\n    _this.excelExport = _this.excelExport.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CustomizedTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.columns != this.state.columns || newProps.dataSource != this.state.dataSource || newProps.loading != this.state.loading) {\n        this.setState(_objectSpread({}, newProps));\n      }\n    }\n  }, {\n    key: \"pdfExport\",\n    value: function pdfExport() {\n      console.log(\"PDF Export\");\n    }\n  }, {\n    key: \"excelExport\",\n    value: function excelExport() {\n      var that = this;\n      var excelColumns = that.state.columns.map(function (item) {\n        return item.title;\n      });\n      var dataArrayForExcel = [];\n      that.state.dataSource.forEach(function (dataRow) {\n        var dataObjectToPush = {};\n        that.state.columns.forEach(function (column) {\n          if (column.export) {\n            dataObjectToPush[column.title] = column.export(dataRow[column.dataIndex], dataRow);\n          } else {\n            dataObjectToPush[column.title] = dataRow[column.dataIndex];\n          }\n        });\n        dataArrayForExcel.push(dataObjectToPush);\n      });\n      exportToExcel(excelColumns, dataArrayForExcel, \"Export\" + moment());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: this.state.loading,\n        type: \"primary\",\n        onClick: this.excelExport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"file-excel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), \" Excel\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Table, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CustomizedTable;\n}(React.Component);\n\nexport { CustomizedTable as default };","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/common/CustomizedTable.js"],"names":["React","Row","Col","Table","Button","Icon","exportToExcel","moment","CustomizedTable","props","state","excelExport","bind","newProps","columns","dataSource","loading","setState","console","log","that","excelColumns","map","item","title","dataArrayForExcel","forEach","dataRow","dataObjectToPush","column","export","dataIndex","push","marginBottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Row, Col, Table, Button, Icon} from \"antd\";\nimport {exportToExcel} from \"../../utils/export\";\nimport moment from \"moment\";\n\nexport default class CustomizedTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props\n        }\n        this.excelExport = this.excelExport.bind(this);\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.columns != this.state.columns || newProps.dataSource != this.state.dataSource || newProps.loading != this.state.loading) {\n            this.setState({...newProps});\n        }\n    }\n\n    pdfExport() {\n        console.log(\"PDF Export\");\n    }\n\n    excelExport() {\n        let that = this;\n        let excelColumns = that.state.columns.map(item => item.title);\n        let dataArrayForExcel = [];\n        that.state.dataSource.forEach(function (dataRow) {\n            let dataObjectToPush = {};\n            that.state.columns.forEach(function (column) {\n                if (column.export) {\n                    dataObjectToPush[column.title] = column.export(dataRow[column.dataIndex], dataRow);\n                } else {\n                    dataObjectToPush[column.title] = dataRow[column.dataIndex];\n                }\n            });\n            dataArrayForExcel.push(dataObjectToPush);\n        });\n        exportToExcel(excelColumns, dataArrayForExcel, \"Export\" + moment());\n    }\n\n    render() {\n        return <div>\n            <Row style={{marginBottom: '5px'}}>\n                <Col>\n                    <Button.Group size=\"small\">\n                        <Button disabled={this.state.loading} type=\"primary\" onClick={this.excelExport}><Icon\n                            type=\"file-excel\"/> Excel</Button>\n                        {/*<Button disabled={this.state.loading} type=\"primary\" onClick={this.pdfExport}><Icon*/}\n                        {/*type=\"file-pdf\"/> PDF</Button>*/}\n                    </Button.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Table {...this.state} />\n            </Row>\n        </div>\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}