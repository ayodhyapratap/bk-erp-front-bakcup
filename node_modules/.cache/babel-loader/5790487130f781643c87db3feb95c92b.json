{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/invoices/AddInvoice.js\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Button, Card, Form, Icon, Row } from \"antd\";\nimport { CHECKBOX_FIELD, DATE_PICKER, SINGLE_CHECKBOX_FIELD, NUMBER_FIELD, SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../constants/dataKeys\";\nimport { PRESCRIPTIONS_API, DRUG_CATALOG, ALL_PRESCRIPTIONS_API, INVOICES_API, PROCEDURE_CATEGORY, TAXES } from \"../../../constants/api\";\nimport { getAPI, interpolate, displayMessage } from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nvar AddInvoice =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddInvoice, _React$Component);\n\n  function AddInvoice(props) {\n    var _this;\n\n    _classCallCheck(this, AddInvoice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddInvoice).call(this, props));\n    _this.state = {\n      redirect: false,\n      drug_catalog: _this.props.drug_catalog ? _this.props.drug_catalog : null,\n      procedure_category: _this.props.procedure_category ? _this.props.procedure_category : null,\n      taxes_list: _this.props.taxes_list ? _this.props.taxes_list : null,\n      editInvoice: _this.props.editInvoice ? _this.props.editInvoice : null\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDrugCatalog = _this.loadDrugCatalog.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(\"Working or not\");\n    return _this;\n  }\n\n  _createClass(AddInvoice, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.drug_catalog == null) {\n        this.loadDrugCatalog();\n      }\n\n      if (this.props.procedure_category == null) {\n        this.loadProcedureCategory();\n      }\n\n      if (this.props.taxes_list == null) {\n        this.loadTaxes();\n      }\n    }\n  }, {\n    key: \"loadDrugCatalog\",\n    value: function loadDrugCatalog() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          drug_catalog: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadProcedureCategory\",\n    value: function loadProcedureCategory() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          procedure_category: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadTaxes\",\n    value: function loadTaxes() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          taxes_list: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(TAXES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var drugOption = [];\n\n      if (this.state.drug_catalog) {\n        this.state.drug_catalog.forEach(function (drug) {\n          drugOption.push({\n            label: drug.name + \"(\" + drug.strength + \")\",\n            value: drug.id\n          });\n        });\n      }\n\n      var procedureOption = [];\n\n      if (this.state.procedure_category) {\n        this.state.procedure_category.forEach(function (drug) {\n          procedureOption.push({\n            label: drug.name,\n            value: drug.id\n          });\n        });\n      }\n\n      var taxesOption = [];\n\n      if (this.state.taxes_list) {\n        this.state.taxes_list.forEach(function (drug) {\n          taxesOption.push({\n            label: drug.name + \"(\" + drug.tax_value + \")\",\n            value: drug.id\n          });\n        });\n      }\n\n      var fields = [{\n        label: \"Drug\",\n        key: \"drug\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.drug : null,\n        options: drugOption\n      }, {\n        label: \"Procedures\",\n        key: \"procedure\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.procedure : null,\n        options: procedureOption\n      }, {\n        label: \"Taxes\",\n        key: \"taxes\",\n        type: SELECT_FIELD,\n        initialValue: this.state.editInvoice ? this.state.editInvoice.tax : null,\n        options: taxesOption,\n        mode: \"multiple\"\n      }, {\n        label: \"Unit\",\n        key: \"unit\",\n        initialValue: this.state.editInvoice ? this.state.editInvoice.unit : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"cost\",\n        key: \"cost\",\n        initialValue: this.state.editInvoice ? this.state.editInvoice.cost : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"discount\",\n        key: \"discount\",\n        initialValue: this.state.editInvoice ? this.state.editInvoice.discount : null,\n        type: INPUT_FIELD\n      }, {\n        label: \"total\",\n        key: \"total\",\n        initialValue: this.state.editInvoice ? this.state.editInvoice.total : null,\n        type: INPUT_FIELD\n      }];\n      var editformProp;\n      var TestFormLayout = Form.create()(DynamicFieldsForm);\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(INVOICES_API, [this.props.match.params.id]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"practice\",\n        \"value\": this.props.active_practiceId\n      }];\n\n      if (this.state.editInvoice) {\n        defaultValues.push({\n          \"key\": \"id\",\n          \"value\": this.state.editInvoice.id\n        });\n      }\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/billing/invoices/edit\",\n        render: function render() {\n          return _this2.state.editInvoice ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit Invoive\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: '/patient/' + _this2.props.match.params.id + '/billing/invoices',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/billing/invoices/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add Invoice\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/patient/' + this.props.match.params.id + '/billing/invoices',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddInvoice;\n}(React.Component);\n\nexport default AddInvoice;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/invoices/AddInvoice.js"],"names":["React","Route","DynamicFieldsForm","Button","Card","Form","Icon","Row","CHECKBOX_FIELD","DATE_PICKER","SINGLE_CHECKBOX_FIELD","NUMBER_FIELD","SUCCESS_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","PRESCRIPTIONS_API","DRUG_CATALOG","ALL_PRESCRIPTIONS_API","INVOICES_API","PROCEDURE_CATEGORY","TAXES","getAPI","interpolate","displayMessage","Redirect","moment","AddInvoice","props","state","redirect","drug_catalog","procedure_category","taxes_list","editInvoice","changeRedirect","bind","loadDrugCatalog","console","log","loadProcedureCategory","loadTaxes","that","successFn","data","setState","errorFn","active_practiceId","redirectVar","drugOption","forEach","drug","push","label","name","strength","value","id","procedureOption","taxesOption","tax_value","fields","key","type","initialValue","options","procedure","tax","mode","unit","cost","discount","total","editformProp","TestFormLayout","create","formProp","action","match","params","method","defaultValues","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router\";\n\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {\n    CHECKBOX_FIELD,\n    DATE_PICKER,\n    SINGLE_CHECKBOX_FIELD,\n    NUMBER_FIELD,\n    SUCCESS_MSG_TYPE,\n    INPUT_FIELD,\n    RADIO_FIELD,\n    SELECT_FIELD\n} from \"../../../constants/dataKeys\";\nimport {\n    PRESCRIPTIONS_API,\n    DRUG_CATALOG,\n    ALL_PRESCRIPTIONS_API,\n    INVOICES_API,\n    PROCEDURE_CATEGORY, TAXES\n} from \"../../../constants/api\";\nimport {getAPI, interpolate, displayMessage} from \"../../../utils/common\";\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment';\n\n\nclass AddInvoice extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false,\n            drug_catalog: this.props.drug_catalog ? this.props.drug_catalog : null,\n            procedure_category: this.props.procedure_category ? this.props.procedure_category : null,\n            taxes_list: this.props.taxes_list ? this.props.taxes_list : null,\n            editInvoice: this.props.editInvoice ? this.props.editInvoice : null,\n\n        }\n        this.changeRedirect = this.changeRedirect.bind(this);\n        this.loadDrugCatalog = this.loadDrugCatalog.bind(this);\n        console.log(\"Working or not\");\n\n    }\n\n    componentDidMount() {\n        if (this.props.drug_catalog == null) {\n            this.loadDrugCatalog();\n        }\n        if (this.props.procedure_category == null) {\n            this.loadProcedureCategory()\n        }\n        if (this.props.taxes_list == null) {\n            this.loadTaxes();\n        }\n\n    }\n\n    loadDrugCatalog() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                drug_catalog: data\n            })\n\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(DRUG_CATALOG, [this.props.active_practiceId]), successFn, errorFn)\n    }\n\n    loadProcedureCategory() {\n        let that = this;\n        let successFn = function (data) {\n            that.setState({\n                procedure_category: data\n            })\n\n        }\n        let errorFn = function () {\n\n        }\n        getAPI(interpolate(PROCEDURE_CATEGORY, [this.props.active_practiceId]), successFn, errorFn);\n    }\n\n    loadTaxes() {\n        var that = this;\n        let successFn = function (data) {\n            console.log(\"get table\");\n            that.setState({\n                taxes_list: data,\n            })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate(TAXES, [this.props.active_practiceId]), successFn, errorFn);\n\n    }\n\n    changeRedirect() {\n        var redirectVar = this.state.redirect;\n        this.setState({\n            redirect: !redirectVar,\n        });\n    }\n\n    render() {\n        const drugOption = []\n        if (this.state.drug_catalog) {\n            this.state.drug_catalog.forEach(function (drug) {\n                drugOption.push({label: (drug.name + \"(\" + drug.strength + \")\"), value: drug.id});\n            })\n        }\n        const procedureOption = []\n        if (this.state.procedure_category) {\n            this.state.procedure_category.forEach(function (drug) {\n                procedureOption.push({label: (drug.name), value: drug.id});\n            })\n        }\n        const taxesOption = []\n        if (this.state.taxes_list) {\n            this.state.taxes_list.forEach(function (drug) {\n                taxesOption.push({label: (drug.name + \"(\" + drug.tax_value + \")\"), value: drug.id});\n            })\n        }\n        const fields = [{\n            label: \"Drug\",\n            key: \"drug\",\n            type: SELECT_FIELD,\n            initialValue: this.state.editInvoice ? this.state.editInvoice.drug : null,\n            options: drugOption\n        }, {\n            label: \"Procedures\",\n            key: \"procedure\",\n            type: SELECT_FIELD,\n            initialValue: this.state.editInvoice ? this.state.editInvoice.procedure : null,\n            options: procedureOption\n        }, {\n            label: \"Taxes\",\n            key: \"taxes\",\n            type: SELECT_FIELD,\n            initialValue: this.state.editInvoice ? this.state.editInvoice.tax : null,\n            options: taxesOption,\n            mode: \"multiple\"\n        }, {\n            label: \"Unit\",\n            key: \"unit\",\n            initialValue: this.state.editInvoice ? this.state.editInvoice.unit : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"cost\",\n            key: \"cost\",\n            initialValue: this.state.editInvoice ? this.state.editInvoice.cost : null,\n            type: INPUT_FIELD\n        }, {\n            label: \"discount\",\n            key: \"discount\",\n            initialValue: this.state.editInvoice ? this.state.editInvoice.discount : null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"total\",\n            key: \"total\",\n            initialValue: this.state.editInvoice ? this.state.editInvoice.total : null,\n            type: INPUT_FIELD,\n        },];\n\n\n        let editformProp;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n\n        const formProp = {\n            successFn: function (data) {\n                displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n                console.log(data);\n            },\n            errorFn: function () {\n\n            },\n            action: interpolate(INVOICES_API, [this.props.match.params.id]),\n            method: \"post\",\n        }\n        let defaultValues = [{\"key\": \"practice\", \"value\": this.props.active_practiceId}];\n        if (this.state.editInvoice) {\n            defaultValues.push({\"key\": \"id\", \"value\": this.state.editInvoice.id});\n        }\n        return <Row>\n            <Card>\n                <Route exact path='/patient/:id/billing/invoices/edit'\n                       render={() => (this.state.editInvoice ?\n                           <TestFormLayout defaultValues={defaultValues} title=\"Edit Invoive\"\n                                           changeRedirect={this.changeRedirect} formProp={formProp} fields={fields}/> :\n                           <Redirect to={'/patient/' + this.props.match.params.id + '/billing/invoices'}/>)}/>\n                <Route exact path='/patient/:id/billing/invoices/add'\n                       render={() => <TestFormLayout title=\"Add Invoice\" changeRedirect={this.changeRedirect}\n                                                     formProp={formProp} fields={fields}/>}/>\n\n            </Card>\n            {this.state.redirect && <Redirect to={'/patient/' + this.props.match.params.id + '/billing/invoices'}/>}\n        </Row>\n\n    }\n}\n\nexport default AddInvoice;\n"]},"metadata":{},"sourceType":"module"}