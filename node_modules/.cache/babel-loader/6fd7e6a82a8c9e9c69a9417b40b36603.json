{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/payments/PatientPayments.js\";\nimport React from \"react\";\nimport { Button, Card, Checkbox, Divider, Icon, Table, Tag } from \"antd\";\nimport { getAPI, interpolate } from \"../../../utils/common\";\nimport { PAYMENT_MODES, INVOICES_API, PATIENT_PAYMENTS_API, TAXES } from \"../../../constants/api\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport AddPayment from \"./AddPayment\";\n\nvar PatientPayments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientPayments, _React$Component);\n\n  function PatientPayments(props) {\n    var _this;\n\n    _classCallCheck(this, PatientPayments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientPayments).call(this, props));\n    _this.state = {\n      payments: [],\n      active_practiceId: _this.props.active_practiceId\n    };\n    return _this;\n  }\n\n  _createClass(PatientPayments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPaymentModes();\n      this.loadPayments();\n      this.loadInvoices();\n    }\n  }, {\n    key: \"loadPayments\",\n    value: function loadPayments() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          payments: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PATIENT_PAYMENTS_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadInvoices\",\n    value: function loadInvoices() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        that.setState({\n          invoices: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(INVOICES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n  }, {\n    key: \"loadPaymentModes\",\n    value: function loadPaymentModes() {\n      var that = this;\n\n      var successFn = function successFn(data) {\n        console.log(\"get table\");\n        that.setState({\n          paymentModes: data\n        });\n      };\n\n      var errorFn = function errorFn() {};\n\n      getAPI(interpolate(PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n  }, {\n    key: \"editInvoiceData\",\n    value: function editInvoiceData(record) {\n      this.setState({\n        editInvoice: record\n      });\n      var id = this.props.match.params.id;\n      this.props.history.push(\"/patient/\" + id + \"/billing/invoices/edit\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var paymentmodes = {};\n\n      if (this.state.paymentModes) {\n        this.state.paymentModes.forEach(function (mode) {\n          paymentmodes[mode.id] = mode.mode;\n        });\n      }\n\n      var invoicelist = {};\n\n      if (this.state.invoices) {\n        this.state.invoices.forEach(function (mode) {\n          invoicelist[mode.id] = mode.id;\n        });\n      }\n\n      var columns = [{\n        title: 'Time',\n        dataIndex: 'created_at',\n        key: 'name',\n        render: function render(created_at) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, moment(created_at).format('LLL'));\n        }\n      }, {\n        title: 'AMOUNT PAID\t',\n        dataIndex: 'amount',\n        key: 'amount'\n      }, {\n        title: 'INVOICES\t',\n        key: 'invoice\t',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \" \", invoicelist[record.invoice]);\n        }\n      }, {\n        title: 'MODE OF PAYMENT',\n        key: 'payment_mode',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \" \", paymentmodes[record.payment_mode]);\n        }\n      }, {\n        title: 'Advance',\n        key: 'is_advance',\n        render: function render(text, record) {\n          return React.createElement(Checkbox, {\n            disabled: true,\n            checked: record.is_advance,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.editInvoiceData(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            href: \"javascript:;\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }];\n\n      if (this.props.match.params.id) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/patient/:id/billing/payments/add\",\n          render: function render(route) {\n            return React.createElement(AddPayment, Object.assign({}, _this2.state, route, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/patient/:id/billing/payments/edit\",\n          render: function render(route) {\n            return React.createElement(AddPayment, Object.assign({}, _this2.state, route, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }), React.createElement(Card, {\n          title: this.state.currentPatient ? this.state.currentPatient.name + \" payments\" : \"Payments\",\n          extra: React.createElement(Button.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/patient/\" + this.props.match.params.id + \"/billing/payments/add\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(Button, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            type: \"plus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }), \"Add\"))),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Table, {\n          columns: columns,\n          dataSource: this.state.payments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \" select patient to further continue\"));\n      }\n    }\n  }]);\n\n  return PatientPayments;\n}(React.Component);\n\nexport default PatientPayments;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/payments/PatientPayments.js"],"names":["React","Button","Card","Checkbox","Divider","Icon","Table","Tag","getAPI","interpolate","PAYMENT_MODES","INVOICES_API","PATIENT_PAYMENTS_API","TAXES","moment","Link","Route","Switch","AddPayment","PatientPayments","props","state","payments","active_practiceId","loadPaymentModes","loadPayments","loadInvoices","that","successFn","data","setState","errorFn","match","params","id","invoices","console","log","paymentModes","record","editInvoice","history","push","paymentmodes","forEach","mode","invoicelist","columns","title","dataIndex","key","render","created_at","format","text","invoice","payment_mode","is_advance","editInvoiceData","route","currentPatient","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {Button, Card, Checkbox, Divider, Icon, Table, Tag} from \"antd\";\nimport {getAPI, interpolate} from \"../../../utils/common\";\nimport {PAYMENT_MODES, INVOICES_API, PATIENT_PAYMENTS_API, TAXES} from \"../../../constants/api\";\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router\";\nimport AddPayment from \"./AddPayment\";\n\n\nclass PatientPayments extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          payments:[],\n          active_practiceId:this.props.active_practiceId,\n        }\n\n    }\n    componentDidMount(){\n      this.loadPaymentModes();\n      this.loadPayments();\n      this.loadInvoices();\n    }\n\n\n    loadPayments(){\n        let that = this;\n        let successFn =function (data){\n            that.setState({\n                payments:data\n            })\n        }\n        let errorFn = function (){\n\n        }\n        getAPI(interpolate(PATIENT_PAYMENTS_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n    loadInvoices(){\n        let that = this;\n        let successFn =function (data){\n            that.setState({\n                invoices:data\n            })\n        }\n        let errorFn = function (){\n\n        }\n        getAPI(interpolate(INVOICES_API, [this.props.match.params.id]), successFn, errorFn);\n    }\n    loadPaymentModes(){\n      var that = this;\n        let successFn = function (data) {\n          console.log(\"get table\");\n          that.setState({\n            paymentModes:data,\n          })\n        };\n        let errorFn = function () {\n        };\n        getAPI(interpolate( PAYMENT_MODES, [this.props.active_practiceId]), successFn, errorFn);\n    }\n    editInvoiceData(record){\n        this.setState({\n            editInvoice:record,\n        });\n        let id=this.props.match.params.id\n        this.props.history.push(\"/patient/\"+id+\"/billing/invoices/edit\")\n\n    }\n    render(){\n      const paymentmodes={}\n      if(this.state.paymentModes){\n          this.state.paymentModes.forEach(function (mode) {\n              paymentmodes[mode.id]=mode.mode;\n          })\n      }\n      const invoicelist={}\n      if(this.state.invoices){\n          this.state.invoices.forEach(function (mode) {\n              invoicelist[mode.id]=mode.id;\n          })\n      }\n      const columns = [{\n          title: 'Time',\n          dataIndex: 'created_at',\n          key: 'name',\n          render: created_at =><span>{moment(created_at).format('LLL')}</span>,\n          },\n          {\n         title: 'AMOUNT PAID\t',\n         dataIndex: 'amount',\n         key: 'amount',\n         },{\n          title: 'INVOICES\t',\n          key: 'invoice\t',\n          render:(text, record) => (\n              <span> {invoicelist[record.invoice]}</span>\n          )\n          }, {\n          title: 'MODE OF PAYMENT',\n          key: 'payment_mode',\n          render:(text, record) => (\n              <span> {paymentmodes[record.payment_mode]}</span>\n          )\n          }, {\n          title: 'Advance',\n          key: 'is_advance',\n          render:(text, record) => (\n              <Checkbox disabled checked={record.is_advance}/>\n          )\n          },\n\n          {\n          title: 'Action',\n          key: 'action',\n          render: (text, record) => (\n              <span>\n              <a onClick={()=>this.editInvoiceData(record)}>Edit</a>\n              <Divider type=\"vertical\" />\n              <a href=\"javascript:;\">Delete</a>\n            </span>\n          ),\n      }];\n\n\n      if(this.props.match.params.id){\n          return <div><Switch>\n              <Route exact path='/patient/:id/billing/payments/add'\n                     render={(route) => <AddPayment{...this.state} {...route}/>}/>\n              <Route exact path='/patient/:id/billing/payments/edit'\n                     render={(route) => <AddPayment {...this.state} {...route}/>}/>\n              <Card title={ this.state.currentPatient?this.state.currentPatient.name + \" payments\":\"Payments\"}  extra={<Button.Group>\n                    <Link to={\"/patient/\"+this.props.match.params.id+\"/billing/payments/add\"}><Button><Icon type=\"plus\"/>Add</Button></Link>\n              </Button.Group>}>\n\n                  <Table columns={columns}  dataSource={this.state.payments} />\n\n              </Card>\n          </Switch>\n\n          </div>\n      }\n      else{\n          return <Card>\n              <h2> select patient to further continue</h2>\n          </Card>\n      }\n\n  }\n}\nexport default PatientPayments;\n"]},"metadata":{},"sourceType":"module"}