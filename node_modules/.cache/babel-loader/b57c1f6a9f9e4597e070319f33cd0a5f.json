{"ast":null,"code":"import _classCallCheck from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/shivam/WorkSpace/bk-erp-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/vitalSign/AddorEditPatientVitalSigns.js\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport { Button, Card, Form, Icon, Row } from \"antd\";\nimport { CHECKBOX_FIELD, DATE_PICKER, NUMBER_FIELD, SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD } from \"../../../constants/dataKeys\";\nimport { VITAL_SIGNS_API, PATIENT_PROFILE } from \"../../../constants/api\";\nimport { getAPI, interpolate, displayMessage } from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nvar AddorEditPatientVitalSigns =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddorEditPatientVitalSigns, _React$Component);\n\n  function AddorEditPatientVitalSigns(props) {\n    var _this;\n\n    _classCallCheck(this, AddorEditPatientVitalSigns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddorEditPatientVitalSigns).call(this, props));\n    _this.state = {\n      redirect: false,\n      vitalSign: null\n    };\n    _this.changeRedirect = _this.changeRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(\"Working or not\");\n    return _this;\n  }\n\n  _createClass(AddorEditPatientVitalSigns, [{\n    key: \"changeRedirect\",\n    value: function changeRedirect() {\n      var redirectVar = this.state.redirect;\n      this.setState({\n        redirect: !redirectVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.currentPatient);\n      var fields = [{\n        label: \"Pulse\",\n        key: \"pulse\",\n        required: true,\n        //initialValue:this.props.currentPatient?this.props.currentPatient.addhar_id:null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Temperature\",\n        key: \"temperature\",\n        //  initialValue:this.props.currentPatient?this.props.currentPatient.blood_group:null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Temperature Part\",\n        key: \"temperature_part\",\n        type: SELECT_FIELD,\n        //initialValue:this.props.currentPatient?this.props.currentPatient.gender:null,\n        options: [{\n          label: \"forehead\",\n          value: \"forehead\"\n        }, {\n          label: \"armpit\",\n          value: \"armpit\"\n        }, {\n          label: \"oral \",\n          value: \"oral\"\n        }]\n      }, {\n        label: \"Blood Pressure\",\n        key: \"blood_pressure\",\n        //  initialValue:this.props.currentPatient?this.props.currentPatient.family_relation:null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Position\",\n        key: \"position\",\n        type: SELECT_FIELD,\n        //initialValue:this.props.currentPatient?this.props.currentPatient.gender:null,\n        options: [{\n          label: \"standing\",\n          value: \"standing\"\n        }, {\n          label: \"sitting\",\n          value: \"sitting\"\n        }]\n      }, {\n        label: \"Weight\",\n        key: \"weight\",\n        //    initialValue:this.props.currentPatient?this.props.currentPatient.primary_mobile_no:null,\n        type: INPUT_FIELD\n      }, {\n        label: \"Resp Rate\",\n        key: \"resp_rate\",\n        //    initialValue:this.props.currentPatient?this.props.currentPatient.secondary_mobile_no:null,\n        type: INPUT_FIELD\n      }];\n      var editformProp;\n      var TestFormLayout = Form.create()(DynamicFieldsForm); // if(this.props.currentPatient){\n      //    editformProp={\n      //     successFn:function(data){\n      //       displayMessage(SUCCESS_MSG_TYPE, \"success\")\n      //\n      //       console.log(data);\n      //     },\n      //     errorFn:function(){\n      //\n      //     },\n      //     action: interpolate(PATIENT_PROFILE, [this.props.currentPatient.id]),\n      //     method: \"put\",\n      //   }\n      // }\n\n      var formProp = {\n        successFn: function successFn(data) {\n          displayMessage(SUCCESS_MSG_TYPE, \"success\");\n          console.log(data);\n        },\n        errorFn: function errorFn() {},\n        action: interpolate(VITAL_SIGNS_API, [this.props.match.params.id]),\n        method: \"post\"\n      };\n      var defaultValues = [{\n        \"key\": \"id\",\n        \"value\": [this.state.vitalsign]\n      }];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/emr/vitalsigns/edit\",\n        render: function render() {\n          return _this2.state.vitalsign ? React.createElement(TestFormLayout, {\n            defaultValues: defaultValues,\n            title: \"Edit vital sign\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }) : React.createElement(Redirect, {\n            to: \"/patients/profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/patient/:id/emr/vitalsigns/add\",\n        render: function render() {\n          return React.createElement(TestFormLayout, {\n            title: \"Add vital sign\",\n            changeRedirect: _this2.changeRedirect,\n            formProp: formProp,\n            fields: fields,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), this.state.redirect && React.createElement(Redirect, {\n        to: '/patient/' + this.props.match.params.id + '/emr/vitalsigns',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddorEditPatientVitalSigns;\n}(React.Component);\n\nexport default AddorEditPatientVitalSigns;","map":{"version":3,"sources":["/home/shivam/WorkSpace/bk-erp-front/src/app/components/patients/vitalSign/AddorEditPatientVitalSigns.js"],"names":["React","Route","DynamicFieldsForm","Button","Card","Form","Icon","Row","CHECKBOX_FIELD","DATE_PICKER","NUMBER_FIELD","SUCCESS_MSG_TYPE","INPUT_FIELD","RADIO_FIELD","SELECT_FIELD","VITAL_SIGNS_API","PATIENT_PROFILE","getAPI","interpolate","displayMessage","Redirect","moment","AddorEditPatientVitalSigns","props","state","redirect","vitalSign","changeRedirect","bind","console","log","redirectVar","setState","currentPatient","fields","label","key","required","type","options","value","editformProp","TestFormLayout","create","formProp","successFn","data","errorFn","action","match","params","id","method","defaultValues","vitalsign","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router\";\n\nimport DynamicFieldsForm from \"../../common/DynamicFieldsForm\";\nimport {Button, Card, Form, Icon, Row} from \"antd\";\nimport {CHECKBOX_FIELD, DATE_PICKER, NUMBER_FIELD,  SUCCESS_MSG_TYPE, INPUT_FIELD, RADIO_FIELD, SELECT_FIELD} from \"../../../constants/dataKeys\";\nimport {VITAL_SIGNS_API, PATIENT_PROFILE} from \"../../../constants/api\";\nimport {getAPI,interpolate, displayMessage} from \"../../../utils/common\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\n\n\nclass AddorEditPatientVitalSigns extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          redirect:false,\n          vitalSign:null,\n\n        }\n        this.changeRedirect= this.changeRedirect.bind(this);\n        console.log(\"Working or not\");\n\n    }\n\n\n      changeRedirect(){\n        var redirectVar=this.state.redirect;\n      this.setState({\n        redirect:  !redirectVar,\n      })  ;\n      }\n\n    render() {\n      console.log(this.props.currentPatient);\n      const  fields= [ {\n            label: \"Pulse\",\n            key: \"pulse\",\n            required: true,\n            //initialValue:this.props.currentPatient?this.props.currentPatient.addhar_id:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Temperature\",\n            key: \"temperature\",\n          //  initialValue:this.props.currentPatient?this.props.currentPatient.blood_group:null,\n            type: INPUT_FIELD\n        },{\n            label: \"Temperature Part\",\n            key: \"temperature_part\",\n            type: SELECT_FIELD,\n            //initialValue:this.props.currentPatient?this.props.currentPatient.gender:null,\n            options: [{label: \"forehead\", value: \"forehead\"}, {label: \"armpit\", value: \"armpit\"}, {label: \"oral \", value: \"oral\"}]\n        },{\n            label: \"Blood Pressure\",\n            key: \"blood_pressure\",\n          //  initialValue:this.props.currentPatient?this.props.currentPatient.family_relation:null,\n            type: INPUT_FIELD,\n        },{\n            label: \"Position\",\n            key: \"position\",\n            type: SELECT_FIELD,\n            //initialValue:this.props.currentPatient?this.props.currentPatient.gender:null,\n            options: [{label: \"standing\", value: \"standing\"}, {label: \"sitting\", value: \"sitting\"}]\n        },  {\n            label: \"Weight\",\n            key: \"weight\",\n        //    initialValue:this.props.currentPatient?this.props.currentPatient.primary_mobile_no:null,\n            type: INPUT_FIELD,\n        }, {\n            label: \"Resp Rate\",\n            key: \"resp_rate\",\n        //    initialValue:this.props.currentPatient?this.props.currentPatient.secondary_mobile_no:null,\n            type: INPUT_FIELD,\n        },];\n\n\n        let editformProp;\n        const TestFormLayout = Form.create()(DynamicFieldsForm);\n        // if(this.props.currentPatient){\n        //    editformProp={\n        //     successFn:function(data){\n        //       displayMessage(SUCCESS_MSG_TYPE, \"success\")\n        //\n        //       console.log(data);\n        //     },\n        //     errorFn:function(){\n        //\n        //     },\n        //     action: interpolate(PATIENT_PROFILE, [this.props.currentPatient.id]),\n        //     method: \"put\",\n        //   }\n        // }\n          const formProp={\n            successFn:function(data){\n              displayMessage(SUCCESS_MSG_TYPE, \"success\")\n\n              console.log(data);\n            },\n            errorFn:function(){\n\n            },\n            action:  interpolate(VITAL_SIGNS_API, [this.props.match.params.id]),\n            method: \"post\",\n          }\n\n          const defaultValues = [{\"key\":\"id\", \"value\":[this.state.vitalsign]}];\n\n          return <Row>\n                <Card>\n                  <Route exact path='/patient/:id/emr/vitalsigns/edit'\n                        render={() => (this.state.vitalsign? <TestFormLayout  defaultValues={defaultValues}  title=\"Edit vital sign\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>:<Redirect to='/patients/profile' />)}/>\n                  <Route exact path='/patient/:id/emr/vitalsigns/add'\n                        render={() =><TestFormLayout title=\"Add vital sign\" changeRedirect= {this.changeRedirect} formProp= {formProp} fields={fields}/>}/>\n\n\n                </Card>\n                {this.state.redirect&&    <Redirect to={'/patient/'+this.props.match.params.id+'/emr/vitalsigns'} />}\n            </Row>\n\n    }\n}\n\nexport default AddorEditPatientVitalSigns;\n"]},"metadata":{},"sourceType":"module"}